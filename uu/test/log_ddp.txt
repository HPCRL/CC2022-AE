hello
[torch/csrc/autograd/engine.cpp] call_function SumBackward0
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::CopyBackwards
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function SumBackward0
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::CopyBackwards
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function SumBackward0
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::CopyBackwards
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function SumBackward0
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::CopyBackwards
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
im rank  0
img-t tensor([[[[0.1610, 0.2823, 0.6816,  ..., 0.1872, 0.0340, 0.9442],
          [0.8802, 0.0012, 0.5936,  ..., 0.4638, 0.0508, 0.2630],
          [0.8405, 0.4968, 0.2515,  ..., 0.9217, 0.6808, 0.5633],
          ...,
          [0.8377, 0.2003, 0.9066,  ..., 0.7516, 0.0792, 0.5729],
          [0.0467, 0.1042, 0.0964,  ..., 0.4349, 0.3005, 0.1694],
          [0.6517, 0.1909, 0.6051,  ..., 0.2394, 0.0855, 0.8680]]]],
       device='cuda:0')
images size  torch.Size([1, 1, 64, 64])
Input 2x1x64x64
L-->R current op 46974547152464
after conv2d 2x1x64x64
L-->R current op 46974547152368
after maxpool2d 2x1x32x32
L-->R current op 46974547152320
after conv2d 2x1x32x32
L-->R current op 46974547152272
after maxpool2d 2x1x16x16
N, C, oH, oW 2 1 16 16
coord [0, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 0, 4]
coord [0, 4, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [0, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 0, 4]
coord [3, 8, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 0, 4]
coord [7, 12, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 0, 4]
coord [11, 15, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [1, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 3, 8]
coord [0, 4, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [1, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 3, 8]
coord [3, 8, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 3, 8]
coord [7, 12, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 3, 8]
coord [11, 15, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 7, 12]
coord [0, 4, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 7, 12]
coord [3, 8, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 7, 12]
coord [7, 12, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 7, 12]
coord [11, 15, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [3, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 11, 15]
coord [0, 4, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
coord [3, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 11, 15]
coord [3, 8, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 11, 15]
coord [7, 12, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 11, 15]
coord [11, 15, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
output-t tensor([[[[-1.0274e-02,  2.2634e-02, -9.7393e-03, -2.9549e-03, -3.8068e-02,
           -1.2004e-02, -1.3713e-02, -2.3196e-02, -3.3601e-02, -1.9858e-02,
           -3.7653e-02,  1.6671e-02,  1.7692e-03,  2.6083e-02,  3.7859e-02,
           -3.5915e-02],
          [-2.2270e-02,  2.3419e-02,  2.2958e-02, -3.1373e-02,  9.4209e-03,
           -1.5868e-02, -6.1983e-02,  3.7746e-02,  3.6920e-02,  8.3431e-03,
           -3.3137e-02, -6.9865e-03,  1.8503e-02,  3.5488e-03, -8.4538e-03,
           -1.9155e-02],
          [ 5.7588e-03,  5.3336e-03, -2.1701e-02, -1.5352e-03,  2.8808e-02,
           -4.5974e-02, -2.1638e-02, -1.4160e-02, -3.8535e-02,  4.4843e-02,
            4.8107e-02, -4.9432e-03,  2.1151e-02,  3.3815e-02,  4.6813e-02,
            1.1205e-02],
          [ 2.2992e-02, -6.1771e-03, -1.9451e-02,  1.5258e-02, -4.0190e-02,
            9.2557e-03,  7.5613e-07, -1.3937e-02,  5.3538e-04,  6.8588e-05,
           -3.5455e-02,  2.2423e-03, -2.6165e-02,  4.7445e-02, -1.4440e-03,
           -2.2841e-03],
          [ 1.1787e-02, -4.0249e-02,  8.5679e-02,  9.0117e-02, -1.5040e-02,
            2.0890e-02, -5.7273e-02, -1.2396e-02, -4.9779e-02,  1.2685e-02,
            6.4583e-02,  2.3179e-02,  2.2645e-02,  5.6251e-02, -2.8511e-02,
           -1.0547e-02],
          [ 6.8358e-02,  2.7932e-02, -2.6285e-02, -8.9696e-03,  1.1771e-02,
           -3.7868e-02, -1.0387e-02,  2.5836e-02, -1.5415e-02, -1.2953e-02,
            6.8274e-02,  2.6225e-02, -2.8562e-02,  8.4881e-04,  3.6656e-02,
           -1.3740e-02],
          [ 1.9533e-02, -1.7427e-02, -2.3589e-04, -6.1677e-03, -7.7382e-03,
            3.3439e-02,  5.4408e-03, -6.6352e-04,  3.7808e-02, -6.9355e-03,
            4.7875e-02, -4.1896e-02, -1.1152e-02,  5.7010e-02,  8.9845e-03,
            2.8326e-02],
          [ 2.0355e-02,  3.2615e-02,  3.3635e-03, -7.4680e-03,  2.6619e-02,
            1.3662e-02,  3.9730e-02,  8.5735e-02,  2.2330e-02, -2.5065e-02,
           -4.7855e-03,  6.9457e-02,  4.4901e-02, -1.6042e-03, -4.4472e-03,
            2.1891e-02],
          [-3.5388e-02,  9.4971e-03, -1.7911e-02, -9.4994e-03, -4.7846e-02,
            2.2791e-02, -3.1442e-02, -6.6882e-03,  2.4334e-02,  2.6719e-02,
            7.2300e-03,  3.1775e-02,  2.1160e-02, -2.1838e-02,  7.2900e-03,
            1.1524e-02],
          [ 2.6887e-02,  3.8305e-02, -8.2726e-03,  2.7386e-02, -8.5438e-03,
            3.5218e-02, -2.0149e-02, -5.0419e-03,  1.8581e-02,  4.3101e-02,
            3.8672e-02, -7.6491e-03,  1.4061e-02,  4.5565e-03, -5.9459e-03,
           -3.3942e-02],
          [-3.9303e-02,  2.3453e-02,  2.3476e-02, -3.7313e-02, -4.9523e-02,
            6.2488e-03,  6.6809e-02,  1.0428e-02, -3.0933e-02, -2.7369e-02,
           -2.9845e-03,  1.9972e-02,  1.5313e-02, -1.1434e-02,  2.9662e-02,
            4.6460e-02],
          [ 4.9143e-04,  4.9928e-02,  1.3228e-02,  1.7418e-02, -1.1200e-02,
            3.6057e-02,  3.7482e-03, -2.3726e-02, -1.2600e-02, -5.3165e-03,
           -4.0103e-03, -2.4788e-02,  4.6261e-03,  1.1116e-02,  6.8760e-02,
            1.1183e-01],
          [-1.6808e-02,  5.4314e-03, -3.2898e-02,  1.6133e-02,  3.4513e-02,
            2.4704e-02,  2.4758e-02,  9.3389e-03,  3.6083e-02, -6.2221e-03,
           -2.8176e-02,  2.5308e-02,  3.0805e-02,  4.9455e-03, -2.0588e-02,
           -4.9531e-02],
          [ 3.3210e-02,  1.8237e-02,  6.1223e-02,  6.9829e-02, -3.8950e-02,
            6.2953e-03,  1.8020e-02,  9.7147e-03,  3.1552e-02,  4.1127e-02,
           -9.1420e-03,  1.4455e-02,  1.9536e-02, -5.7302e-02, -1.6010e-02,
           -5.8412e-03],
          [-2.0436e-02,  2.6550e-02, -3.6073e-02, -2.2572e-02,  3.7608e-02,
           -1.1251e-02, -8.5013e-03, -1.9556e-02, -2.7634e-02, -8.4801e-03,
           -3.8834e-02, -3.4368e-02,  8.8532e-03, -3.2155e-03,  2.9471e-04,
            4.8035e-02],
          [ 5.8105e-02,  4.6907e-02,  6.1738e-02, -4.4299e-03, -1.6933e-02,
           -1.5047e-02, -1.5737e-03,  1.3843e-03,  2.5212e-02, -5.9926e-03,
            3.1700e-02,  2.5097e-02, -2.9242e-02,  8.1450e-02,  5.6779e-03,
           -5.4545e-02]]],


        [[[-1.0274e-02,  2.2634e-02, -9.7393e-03, -2.9549e-03, -3.8068e-02,
           -1.2004e-02, -1.3713e-02, -2.3196e-02, -3.3601e-02, -1.9858e-02,
           -3.7653e-02,  1.6671e-02,  1.7692e-03,  2.6083e-02,  3.7859e-02,
           -3.5915e-02],
          [-2.2270e-02,  2.3419e-02,  2.2958e-02, -3.1373e-02,  9.4209e-03,
           -1.5868e-02, -6.1983e-02,  3.7746e-02,  3.6920e-02,  8.3431e-03,
           -3.3137e-02, -6.9865e-03,  1.8503e-02,  3.5488e-03, -8.4538e-03,
           -1.9155e-02],
          [ 5.7588e-03,  5.3336e-03, -2.1701e-02, -1.5352e-03,  2.8808e-02,
           -4.5974e-02, -2.1638e-02, -1.4160e-02, -3.8535e-02,  4.4843e-02,
            4.8107e-02, -4.9432e-03,  2.1151e-02,  3.3815e-02,  4.6813e-02,
            1.1205e-02],
          [ 2.2992e-02, -6.1771e-03, -1.9451e-02,  1.5258e-02, -4.0190e-02,
            9.2557e-03,  7.5613e-07, -1.3937e-02,  5.3538e-04,  6.8588e-05,
           -3.5455e-02,  2.2423e-03, -2.6165e-02,  4.7445e-02, -1.4440e-03,
           -2.2841e-03],
          [ 1.1787e-02, -4.0249e-02,  8.5679e-02,  9.0117e-02, -1.5040e-02,
            2.0890e-02, -5.7273e-02, -1.2396e-02, -4.9779e-02,  1.2685e-02,
            6.4583e-02,  2.3179e-02,  2.2645e-02,  5.6251e-02, -2.8511e-02,
           -1.0547e-02],
          [ 6.8358e-02,  2.7932e-02, -2.6285e-02, -8.9696e-03,  1.1771e-02,
           -3.7868e-02, -1.0387e-02,  2.5836e-02, -1.5415e-02, -1.2953e-02,
            6.8274e-02,  2.6225e-02, -2.8562e-02,  8.4881e-04,  3.6656e-02,
           -1.3740e-02],
          [ 1.9533e-02, -1.7427e-02, -2.3589e-04, -6.1677e-03, -7.7382e-03,
            3.3439e-02,  5.4408e-03, -6.6352e-04,  3.7808e-02, -6.9355e-03,
            4.7875e-02, -4.1896e-02, -1.1152e-02,  5.7010e-02,  8.9845e-03,
            2.8326e-02],
          [ 2.0355e-02,  3.2615e-02,  3.3635e-03, -7.4680e-03,  2.6619e-02,
            1.3662e-02,  3.9730e-02,  8.5735e-02,  2.2330e-02, -2.5065e-02,
           -4.7855e-03,  6.9457e-02,  4.4901e-02, -1.6042e-03, -4.4472e-03,
            2.1891e-02],
          [-3.5388e-02,  9.4971e-03, -1.7911e-02, -9.4994e-03, -4.7846e-02,
            2.2791e-02, -3.1442e-02, -6.6882e-03,  2.4334e-02,  2.6719e-02,
            7.2300e-03,  3.1775e-02,  2.1160e-02, -2.1838e-02,  7.2900e-03,
            1.1524e-02],
          [ 2.6887e-02,  3.8305e-02, -8.2726e-03,  2.7386e-02, -8.5438e-03,
            3.5218e-02, -2.0149e-02, -5.0419e-03,  1.8581e-02,  4.3101e-02,
            3.8672e-02, -7.6491e-03,  1.4061e-02,  4.5565e-03, -5.9459e-03,
           -3.3942e-02],
          [-3.9303e-02,  2.3453e-02,  2.3476e-02, -3.7313e-02, -4.9523e-02,
            6.2488e-03,  6.6809e-02,  1.0428e-02, -3.0933e-02, -2.7369e-02,
           -2.9845e-03,  1.9972e-02,  1.5313e-02, -1.1434e-02,  2.9662e-02,
            4.6460e-02],
          [ 4.9143e-04,  4.9928e-02,  1.3228e-02,  1.7418e-02, -1.1200e-02,
            3.6057e-02,  3.7482e-03, -2.3726e-02, -1.2600e-02, -5.3165e-03,
           -4.0103e-03, -2.4788e-02,  4.6261e-03,  1.1116e-02,  6.8760e-02,
            1.1183e-01],
          [-1.6808e-02,  5.4314e-03, -3.2898e-02,  1.6133e-02,  3.4513e-02,
            2.4704e-02,  2.4758e-02,  9.3389e-03,  3.6083e-02, -6.2221e-03,
           -2.8176e-02,  2.5308e-02,  3.0805e-02,  4.9455e-03, -2.0588e-02,
           -4.9531e-02],
          [ 3.3210e-02,  1.8237e-02,  6.1223e-02,  6.9829e-02, -3.8950e-02,
            6.2953e-03,  1.8020e-02,  9.7147e-03,  3.1552e-02,  4.1127e-02,
           -9.1420e-03,  1.4455e-02,  1.9536e-02, -5.7302e-02, -1.6010e-02,
           -5.8412e-03],
          [-2.0436e-02,  2.6550e-02, -3.6073e-02, -2.2572e-02,  3.7608e-02,
           -1.1251e-02, -8.5013e-03, -1.9556e-02, -2.7634e-02, -8.4801e-03,
           -3.8834e-02, -3.4368e-02,  8.8532e-03, -3.2155e-03,  2.9471e-04,
            4.8035e-02],
          [ 5.8105e-02,  4.6907e-02,  6.1738e-02, -4.4299e-03, -1.6933e-02,
           -1.5047e-02, -1.5737e-03,  1.3843e-03,  2.5212e-02, -5.9926e-03,
            3.1700e-02,  2.5097e-02, -2.9242e-02,  8.1450e-02,  5.6779e-03,
           -5.4545e-02]]]], device='cuda:0',
       grad_fn=<TiledCopyFunctionBackward>)

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])
img-g torch.Size([1, 1, 64, 64]) tensor([[[[ 0.0283,  0.0140,  0.0176,  ..., -0.0197,  0.0003, -0.0246],
          [-0.0348, -0.0287, -0.0363,  ...,  0.0065,  0.0337,  0.0176],
          [-0.0169,  0.0113,  0.0358,  ...,  0.0236, -0.0357, -0.0006],
          ...,
          [-0.0315, -0.0305,  0.0358,  ..., -0.0143,  0.0090,  0.0523],
          [-0.0169, -0.0373, -0.0257,  ..., -0.0068, -0.0523, -0.0257],
          [ 0.0348, -0.0052,  0.0529,  ...,  0.0118, -0.0013,  0.0529]]]],
       device='cuda:0')
img-t tensor([[[[0.0495, 0.9995, 0.9049,  ..., 0.2287, 0.6075, 0.9050],
          [0.9469, 0.3138, 0.9240,  ..., 0.3490, 0.8883, 0.7127],
          [0.6391, 0.9167, 0.7920,  ..., 0.0473, 0.3978, 0.9853],
          ...,
          [0.0848, 0.1112, 0.7708,  ..., 0.2490, 0.2248, 0.8845],
          [0.6682, 0.7322, 0.0649,  ..., 0.8524, 0.6012, 0.1764],
          [0.1314, 0.2718, 0.7039,  ..., 0.8909, 0.4488, 0.4405]]]],
       device='cuda:0')
images size  torch.Size([1, 1, 64, 64])
Input 2x1x64x64
L-->R current op 46974547152464
after conv2d 2x1x64x64
L-->R current op 46974547152368
after maxpool2d 2x1x32x32
L-->R current op 46974547152320
after conv2d 2x1x32x32
L-->R current op 46974547152272
after maxpool2d 2x1x16x16
N, C, oH, oW 2 1 16 16
coord [0, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 0, 4]
coord [0, 4, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [0, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 0, 4]
coord [3, 8, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 0, 4]
coord [7, 12, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 0, 4]
coord [11, 15, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [1, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 3, 8]
coord [0, 4, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [1, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 3, 8]
coord [3, 8, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 3, 8]
coord [7, 12, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 3, 8]
coord [11, 15, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 7, 12]
coord [0, 4, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 7, 12]
coord [3, 8, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 7, 12]
coord [7, 12, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 7, 12]
coord [11, 15, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [3, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 11, 15]
coord [0, 4, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
coord [3, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 11, 15]
coord [3, 8, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 11, 15]
coord [7, 12, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 46974547152464
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 46974547152320
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 11, 15]
coord [11, 15, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
output-t tensor([[[[-9.1695e-03,  7.0548e-02,  5.4143e-03,  1.4868e-02,  6.6030e-02,
            1.3441e-02,  9.2180e-03,  5.7334e-02, -3.0404e-03,  7.0250e-02,
            2.9856e-02, -1.6218e-02,  2.1589e-02, -7.7663e-03, -8.3591e-03,
           -2.4562e-02],
          [-7.3374e-03, -2.6836e-02, -4.8427e-02, -2.5025e-02,  2.9958e-03,
            2.6335e-02,  2.4673e-02,  4.3830e-02,  1.6176e-02, -5.6943e-03,
            1.8513e-03, -3.4352e-02, -4.6625e-02, -3.6827e-02, -1.8433e-02,
           -4.2190e-03],
          [-6.3432e-03,  4.6149e-02,  6.8873e-02,  1.2840e-02, -4.3369e-02,
           -9.8341e-03,  6.8050e-03,  1.0836e-02, -2.2441e-02, -2.1699e-02,
           -2.0912e-02, -6.2050e-04,  3.8089e-03, -4.0877e-03,  5.8118e-02,
            4.7499e-02],
          [-4.8980e-03,  4.5885e-02, -5.6202e-03,  1.0181e-02,  6.5567e-02,
            1.7418e-02,  5.8558e-03, -8.0707e-03, -5.1527e-02,  2.6480e-02,
            9.7257e-02,  1.4896e-02,  3.2294e-03,  1.6594e-02, -2.6683e-02,
            3.2973e-02],
          [-2.7469e-02,  5.7122e-02, -1.1270e-02,  3.1519e-02, -5.4657e-03,
           -2.9066e-02,  4.7462e-03,  1.0983e-03,  9.5195e-03,  4.6075e-02,
            2.5971e-03, -1.0371e-02, -2.6489e-02,  1.7760e-02,  5.3916e-03,
            3.7917e-02],
          [ 9.7995e-03, -2.7281e-02, -1.1901e-02,  3.3289e-02, -2.5015e-03,
           -7.8427e-03, -1.5021e-02, -4.8493e-03,  2.3350e-02,  6.0484e-02,
           -7.8057e-03, -2.9857e-02, -6.8997e-04,  5.0516e-02,  3.6787e-03,
            7.3919e-03],
          [ 1.6240e-02,  7.6837e-03,  2.6405e-02,  7.6375e-03, -1.5532e-03,
            2.4205e-02, -2.7327e-02,  7.8239e-02,  7.0061e-03,  1.4601e-02,
            3.3916e-02, -4.7876e-03,  4.3745e-02, -4.4427e-03, -1.5125e-02,
            2.8968e-02],
          [-5.2119e-02,  6.5003e-03,  3.6366e-02,  5.4872e-02,  1.0725e-03,
            2.5737e-02,  1.5810e-03,  1.7299e-02,  7.1605e-03,  8.7252e-03,
           -1.4551e-02,  5.0766e-02,  2.0162e-02, -2.3824e-02,  1.9236e-03,
           -5.2676e-02],
          [-3.4048e-02,  6.4024e-03, -7.1346e-03,  2.5507e-02,  1.0656e-02,
           -3.6238e-02, -2.8041e-02,  5.5456e-02,  1.9245e-02,  8.8572e-03,
            3.0295e-02,  3.1924e-02,  4.3819e-02,  4.9689e-03, -8.2742e-03,
            1.5137e-02],
          [ 2.9045e-02,  4.2421e-02,  5.8458e-03,  2.3331e-02, -2.0450e-02,
            3.7247e-02,  1.0293e-02,  1.9113e-02, -6.1345e-02,  2.7820e-02,
           -2.3412e-02, -4.0098e-02, -7.5068e-03,  3.4165e-02,  6.4667e-02,
            2.9861e-02],
          [ 3.5625e-02,  2.0953e-03,  3.0958e-02,  1.2444e-02,  5.8948e-02,
            3.3920e-03, -4.2799e-02,  2.7346e-02,  6.0414e-03, -8.5976e-05,
           -2.1509e-02, -1.3193e-02,  2.1892e-02, -4.0225e-02, -5.2537e-02,
           -5.2740e-02],
          [-2.9423e-02,  3.7933e-02, -1.3240e-02, -2.6821e-02, -2.8109e-02,
            1.8042e-02,  4.1431e-02,  3.4416e-02, -1.4729e-03,  2.3240e-02,
           -7.4171e-02,  9.4871e-03, -4.6227e-02, -3.1386e-02, -1.6133e-02,
           -1.4612e-03],
          [ 9.5255e-03, -3.6917e-03, -5.3790e-03,  2.6052e-02, -8.8804e-03,
           -2.5934e-02,  1.1245e-02, -3.2422e-02,  3.1260e-02, -2.2988e-02,
            3.1469e-02, -2.3235e-02,  6.6912e-02,  1.2352e-02,  2.7494e-02,
           -2.8713e-02],
          [-7.0117e-04,  8.7168e-03, -3.4718e-02,  4.0191e-02,  1.0230e-02,
            2.0057e-02,  2.1498e-02,  3.6021e-02,  1.3253e-02,  3.7677e-02,
           -2.2977e-02, -4.4918e-02,  6.9389e-03,  1.1166e-02, -4.6044e-02,
           -3.7662e-02],
          [-2.9473e-02,  1.5206e-02,  3.7955e-04, -2.2674e-02,  6.2721e-02,
            8.7330e-02, -2.0273e-02, -3.5370e-02,  4.9517e-03,  4.7299e-02,
            1.6651e-02,  6.9157e-02,  5.0983e-02,  1.0354e-02,  1.0591e-02,
            4.2592e-02],
          [-3.2640e-02, -3.4092e-02, -3.1553e-02,  1.2612e-02,  1.4050e-02,
            6.5411e-02, -1.9372e-02, -7.6746e-03,  4.5565e-02,  1.1275e-02,
            2.9567e-02,  1.4774e-02, -1.8519e-02,  2.6975e-02,  1.6397e-02,
            6.3484e-03]]],


        [[[-9.1695e-03,  7.0548e-02,  5.4143e-03,  1.4868e-02,  6.6030e-02,
            1.3441e-02,  9.2180e-03,  5.7334e-02, -3.0404e-03,  7.0250e-02,
            2.9856e-02, -1.6218e-02,  2.1589e-02, -7.7663e-03, -8.3591e-03,
           -2.4562e-02],
          [-7.3374e-03, -2.6836e-02, -4.8427e-02, -2.5025e-02,  2.9958e-03,
            2.6335e-02,  2.4673e-02,  4.3830e-02,  1.6176e-02, -5.6943e-03,
            1.8513e-03, -3.4352e-02, -4.6625e-02, -3.6827e-02, -1.8433e-02,
           -4.2190e-03],
          [-6.3432e-03,  4.6149e-02,  6.8873e-02,  1.2840e-02, -4.3369e-02,
           -9.8341e-03,  6.8050e-03,  1.0836e-02, -2.2441e-02, -2.1699e-02,
           -2.0912e-02, -6.2050e-04,  3.8089e-03, -4.0877e-03,  5.8118e-02,
            4.7499e-02],
          [-4.8980e-03,  4.5885e-02, -5.6202e-03,  1.0181e-02,  6.5567e-02,
            1.7418e-02,  5.8558e-03, -8.0707e-03, -5.1527e-02,  2.6480e-02,
            9.7257e-02,  1.4896e-02,  3.2294e-03,  1.6594e-02, -2.6683e-02,
            3.2973e-02],
          [-2.7469e-02,  5.7122e-02, -1.1270e-02,  3.1519e-02, -5.4657e-03,
           -2.9066e-02,  4.7462e-03,  1.0983e-03,  9.5195e-03,  4.6075e-02,
            2.5971e-03, -1.0371e-02, -2.6489e-02,  1.7760e-02,  5.3916e-03,
            3.7917e-02],
          [ 9.7995e-03, -2.7281e-02, -1.1901e-02,  3.3289e-02, -2.5015e-03,
           -7.8427e-03, -1.5021e-02, -4.8493e-03,  2.3350e-02,  6.0484e-02,
           -7.8057e-03, -2.9857e-02, -6.8997e-04,  5.0516e-02,  3.6787e-03,
            7.3919e-03],
          [ 1.6240e-02,  7.6837e-03,  2.6405e-02,  7.6375e-03, -1.5532e-03,
            2.4205e-02, -2.7327e-02,  7.8239e-02,  7.0061e-03,  1.4601e-02,
            3.3916e-02, -4.7876e-03,  4.3745e-02, -4.4427e-03, -1.5125e-02,
            2.8968e-02],
          [-5.2119e-02,  6.5003e-03,  3.6366e-02,  5.4872e-02,  1.0725e-03,
            2.5737e-02,  1.5810e-03,  1.7299e-02,  7.1605e-03,  8.7252e-03,
           -1.4551e-02,  5.0766e-02,  2.0162e-02, -2.3824e-02,  1.9236e-03,
           -5.2676e-02],
          [-3.4048e-02,  6.4024e-03, -7.1346e-03,  2.5507e-02,  1.0656e-02,
           -3.6238e-02, -2.8041e-02,  5.5456e-02,  1.9245e-02,  8.8572e-03,
            3.0295e-02,  3.1924e-02,  4.3819e-02,  4.9689e-03, -8.2742e-03,
            1.5137e-02],
          [ 2.9045e-02,  4.2421e-02,  5.8458e-03,  2.3331e-02, -2.0450e-02,
            3.7247e-02,  1.0293e-02,  1.9113e-02, -6.1345e-02,  2.7820e-02,
           -2.3412e-02, -4.0098e-02, -7.5068e-03,  3.4165e-02,  6.4667e-02,
            2.9861e-02],
          [ 3.5625e-02,  2.0953e-03,  3.0958e-02,  1.2444e-02,  5.8948e-02,
            3.3920e-03, -4.2799e-02,  2.7346e-02,  6.0414e-03, -8.5976e-05,
           -2.1509e-02, -1.3193e-02,  2.1892e-02, -4.0225e-02, -5.2537e-02,
           -5.2740e-02],
          [-2.9423e-02,  3.7933e-02, -1.3240e-02, -2.6821e-02, -2.8109e-02,
            1.8042e-02,  4.1431e-02,  3.4416e-02, -1.4729e-03,  2.3240e-02,
           -7.4171e-02,  9.4871e-03, -4.6227e-02, -3.1386e-02, -1.6133e-02,
           -1.4612e-03],
          [ 9.5255e-03, -3.6917e-03, -5.3790e-03,  2.6052e-02, -8.8804e-03,
           -2.5934e-02,  1.1245e-02, -3.2422e-02,  3.1260e-02, -2.2988e-02,
            3.1469e-02, -2.3235e-02,  6.6912e-02,  1.2352e-02,  2.7494e-02,
           -2.8713e-02],
          [-7.0117e-04,  8.7168e-03, -3.4718e-02,  4.0191e-02,  1.0230e-02,
            2.0057e-02,  2.1498e-02,  3.6021e-02,  1.3253e-02,  3.7677e-02,
           -2.2977e-02, -4.4918e-02,  6.9389e-03,  1.1166e-02, -4.6044e-02,
           -3.7662e-02],
          [-2.9473e-02,  1.5206e-02,  3.7955e-04, -2.2674e-02,  6.2721e-02,
            8.7330e-02, -2.0273e-02, -3.5370e-02,  4.9517e-03,  4.7299e-02,
            1.6651e-02,  6.9157e-02,  5.0983e-02,  1.0354e-02,  1.0591e-02,
            4.2592e-02],
          [-3.2640e-02, -3.4092e-02, -3.1553e-02,  1.2612e-02,  1.4050e-02,
            6.5411e-02, -1.9372e-02, -7.6746e-03,  4.5565e-02,  1.1275e-02,
            2.9567e-02,  1.4774e-02, -1.8519e-02,  2.6975e-02,  1.6397e-02,
            6.3484e-03]]]], device='cuda:0',
       grad_fn=<TiledCopyFunctionBackward>)

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])
img-g torch.Size([1, 1, 64, 64]) tensor([[[[-0.0113,  0.0081, -0.0180,  ...,  0.0005,  0.0129, -0.0090],
          [-0.0179,  0.0859, -0.0288,  ...,  0.0085, -0.0266,  0.0030],
          [ 0.0296,  0.0373,  0.0033,  ...,  0.1124,  0.0007, -0.0512],
          ...,
          [ 0.0393, -0.0248, -0.1048,  ..., -0.0194,  0.0873, -0.0132],
          [-0.0809,  0.0113, -0.0387,  ...,  0.0285,  0.0257,  0.0283],
          [-0.0030, -0.0016,  0.0002,  ..., -0.0842,  0.0109, -0.0583]]]],
       device='cuda:0')
Training complete in: 0:00:00.733613
im rank  1
img-t tensor([[[[0.7698, 0.7945, 0.2780,  ..., 0.6132, 0.5585, 0.8739],
          [0.6131, 0.5762, 0.2251,  ..., 0.1345, 0.3402, 0.6641],
          [0.5463, 0.9692, 0.4934,  ..., 0.4783, 0.6189, 0.2257],
          ...,
          [0.6954, 0.4783, 0.9555,  ..., 0.4186, 0.0550, 0.1264],
          [0.1928, 0.3133, 0.2608,  ..., 0.6362, 0.2715, 0.8676],
          [0.5950, 0.7390, 0.2035,  ..., 0.4152, 0.7814, 0.3006]]]],
       device='cuda:1')
images size  torch.Size([1, 1, 64, 64])
Input 2x1x64x64
L-->R current op 47960403177040
after conv2d 2x1x64x64
L-->R current op 47960403176944
after maxpool2d 2x1x32x32
L-->R current op 47960403176896
after conv2d 2x1x32x32
L-->R current op 47960403176848
after maxpool2d 2x1x16x16
N, C, oH, oW 2 1 16 16
coord [0, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 0, 4]
coord [0, 4, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [0, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 0, 4]
coord [3, 8, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 0, 4]
coord [7, 12, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 0, 4]
coord [11, 15, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [1, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 3, 8]
coord [0, 4, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [1, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 3, 8]
coord [3, 8, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 3, 8]
coord [7, 12, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 3, 8]
coord [11, 15, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 7, 12]
coord [0, 4, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 7, 12]
coord [3, 8, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 7, 12]
coord [7, 12, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 7, 12]
coord [11, 15, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [3, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 11, 15]
coord [0, 4, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
coord [3, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 11, 15]
coord [3, 8, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 11, 15]
coord [7, 12, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 11, 15]
coord [11, 15, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
output-t tensor([[[[ 0.0384, -0.0292,  0.0282,  0.0004, -0.0208, -0.0267,  0.0286,
            0.0435,  0.0012,  0.0232,  0.0018,  0.0233,  0.0114,  0.0116,
            0.0486,  0.0106],
          [-0.0663,  0.0233,  0.0444, -0.0047,  0.0062, -0.0142,  0.0082,
           -0.0401,  0.0051, -0.0019, -0.0382, -0.0299, -0.0354,  0.0189,
           -0.0236,  0.0265],
          [ 0.0120,  0.0195,  0.0122,  0.0220,  0.0425, -0.0022, -0.0299,
            0.0103,  0.0173, -0.0126, -0.0093,  0.0239,  0.0769, -0.0051,
            0.0028, -0.0132],
          [-0.0407, -0.0019, -0.0194,  0.0122, -0.0158, -0.0066,  0.0406,
            0.0824, -0.0152,  0.0493,  0.0596, -0.0536,  0.0136, -0.0053,
            0.0122, -0.0364],
          [ 0.0100,  0.0290,  0.0344,  0.0526,  0.0418, -0.0268,  0.0350,
            0.0077,  0.0246,  0.0193,  0.0098,  0.0544, -0.0288, -0.0548,
            0.0677,  0.0432],
          [-0.0124, -0.0128, -0.0090, -0.0068,  0.0515,  0.0267,  0.0256,
            0.0245, -0.0084, -0.0106,  0.0396, -0.0488, -0.0020, -0.0090,
            0.0262, -0.0316],
          [ 0.0026,  0.0209, -0.0077,  0.0156,  0.0064,  0.0151,  0.0537,
           -0.0230,  0.0666,  0.0125,  0.0291,  0.0262, -0.0072,  0.0088,
           -0.0189,  0.0210],
          [ 0.0024,  0.0541, -0.0080,  0.0316,  0.0358, -0.0351,  0.0420,
            0.0422,  0.0008,  0.0494,  0.0169, -0.0413,  0.0230,  0.0134,
            0.0393, -0.0455],
          [ 0.0141, -0.0516, -0.0038, -0.0138, -0.0453, -0.0029,  0.0169,
            0.0377,  0.0458, -0.0155, -0.0183,  0.0007, -0.0209, -0.0033,
           -0.0455,  0.0235],
          [-0.0368,  0.0667,  0.0415, -0.0148,  0.0301,  0.0384, -0.0193,
           -0.0400,  0.0663, -0.0098, -0.0074, -0.0074,  0.0299,  0.0278,
            0.0106, -0.0123],
          [ 0.0095,  0.0423, -0.0196, -0.0035,  0.0006,  0.0250,  0.0258,
           -0.0152, -0.0288,  0.0299,  0.0411, -0.0072,  0.0203, -0.0176,
            0.0117, -0.0439],
          [ 0.0233,  0.0372, -0.0289, -0.0251, -0.0255, -0.0088,  0.0014,
           -0.0100, -0.0236, -0.0118, -0.0245, -0.0343,  0.0365,  0.0428,
            0.0534,  0.0031],
          [-0.0005,  0.0099,  0.0546,  0.0127, -0.0041, -0.0040,  0.0391,
            0.0258,  0.0093, -0.0109,  0.0379,  0.0374,  0.0185,  0.0130,
           -0.0180, -0.0171],
          [ 0.0735,  0.0874,  0.0682,  0.0013,  0.0124,  0.0340,  0.0190,
            0.0165, -0.0057, -0.0516,  0.0015,  0.0133,  0.0597, -0.0064,
           -0.0119,  0.0087],
          [-0.0024,  0.0246, -0.0283, -0.0796,  0.0033,  0.0392, -0.0287,
           -0.0343, -0.0071, -0.0017, -0.0047,  0.0302,  0.0432,  0.0341,
            0.0018,  0.0086],
          [ 0.0155, -0.0173, -0.0331, -0.0005, -0.0207, -0.0431, -0.0585,
            0.0065, -0.0254, -0.0212,  0.0033, -0.0150, -0.0300, -0.0427,
           -0.0262, -0.0156]]],


        [[[ 0.0384, -0.0292,  0.0282,  0.0004, -0.0208, -0.0267,  0.0286,
            0.0435,  0.0012,  0.0232,  0.0018,  0.0233,  0.0114,  0.0116,
            0.0486,  0.0106],
          [-0.0663,  0.0233,  0.0444, -0.0047,  0.0062, -0.0142,  0.0082,
           -0.0401,  0.0051, -0.0019, -0.0382, -0.0299, -0.0354,  0.0189,
           -0.0236,  0.0265],
          [ 0.0120,  0.0195,  0.0122,  0.0220,  0.0425, -0.0022, -0.0299,
            0.0103,  0.0173, -0.0126, -0.0093,  0.0239,  0.0769, -0.0051,
            0.0028, -0.0132],
          [-0.0407, -0.0019, -0.0194,  0.0122, -0.0158, -0.0066,  0.0406,
            0.0824, -0.0152,  0.0493,  0.0596, -0.0536,  0.0136, -0.0053,
            0.0122, -0.0364],
          [ 0.0100,  0.0290,  0.0344,  0.0526,  0.0418, -0.0268,  0.0350,
            0.0077,  0.0246,  0.0193,  0.0098,  0.0544, -0.0288, -0.0548,
            0.0677,  0.0432],
          [-0.0124, -0.0128, -0.0090, -0.0068,  0.0515,  0.0267,  0.0256,
            0.0245, -0.0084, -0.0106,  0.0396, -0.0488, -0.0020, -0.0090,
            0.0262, -0.0316],
          [ 0.0026,  0.0209, -0.0077,  0.0156,  0.0064,  0.0151,  0.0537,
           -0.0230,  0.0666,  0.0125,  0.0291,  0.0262, -0.0072,  0.0088,
           -0.0189,  0.0210],
          [ 0.0024,  0.0541, -0.0080,  0.0316,  0.0358, -0.0351,  0.0420,
            0.0422,  0.0008,  0.0494,  0.0169, -0.0413,  0.0230,  0.0134,
            0.0393, -0.0455],
          [ 0.0141, -0.0516, -0.0038, -0.0138, -0.0453, -0.0029,  0.0169,
            0.0377,  0.0458, -0.0155, -0.0183,  0.0007, -0.0209, -0.0033,
           -0.0455,  0.0235],
          [-0.0368,  0.0667,  0.0415, -0.0148,  0.0301,  0.0384, -0.0193,
           -0.0400,  0.0663, -0.0098, -0.0074, -0.0074,  0.0299,  0.0278,
            0.0106, -0.0123],
          [ 0.0095,  0.0423, -0.0196, -0.0035,  0.0006,  0.0250,  0.0258,
           -0.0152, -0.0288,  0.0299,  0.0411, -0.0072,  0.0203, -0.0176,
            0.0117, -0.0439],
          [ 0.0233,  0.0372, -0.0289, -0.0251, -0.0255, -0.0088,  0.0014,
           -0.0100, -0.0236, -0.0118, -0.0245, -0.0343,  0.0365,  0.0428,
            0.0534,  0.0031],
          [-0.0005,  0.0099,  0.0546,  0.0127, -0.0041, -0.0040,  0.0391,
            0.0258,  0.0093, -0.0109,  0.0379,  0.0374,  0.0185,  0.0130,
           -0.0180, -0.0171],
          [ 0.0735,  0.0874,  0.0682,  0.0013,  0.0124,  0.0340,  0.0190,
            0.0165, -0.0057, -0.0516,  0.0015,  0.0133,  0.0597, -0.0064,
           -0.0119,  0.0087],
          [-0.0024,  0.0246, -0.0283, -0.0796,  0.0033,  0.0392, -0.0287,
           -0.0343, -0.0071, -0.0017, -0.0047,  0.0302,  0.0432,  0.0341,
            0.0018,  0.0086],
          [ 0.0155, -0.0173, -0.0331, -0.0005, -0.0207, -0.0431, -0.0585,
            0.0065, -0.0254, -0.0212,  0.0033, -0.0150, -0.0300, -0.0427,
           -0.0262, -0.0156]]]], device='cuda:1',
       grad_fn=<TiledCopyFunctionBackward>)

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])
img-g torch.Size([1, 1, 64, 64]) tensor([[[[ 0.0129, -0.0090,  0.0010,  ..., -0.0569,  0.0879, -0.0395],
          [-0.0266,  0.0030,  0.0942,  ...,  0.0133,  0.0257,  0.0283],
          [ 0.0008, -0.0570,  0.0567,  ..., -0.0753,  0.0164, -0.0669],
          ...,
          [-0.0315, -0.0300,  0.0013,  ...,  0.1035, -0.0085,  0.0461],
          [-0.0169,  0.0118, -0.0491,  ...,  0.0017,  0.0181, -0.0296],
          [ 0.0348, -0.0039, -0.0013,  ...,  0.0115, -0.0363,  0.0041]]]],
       device='cuda:1')
img-t tensor([[[[0.6657, 0.7196, 0.6367,  ..., 0.4901, 0.0400, 0.8169],
          [0.1784, 0.2652, 0.5974,  ..., 0.0365, 0.5369, 0.6619],
          [0.7556, 0.6805, 0.8353,  ..., 0.7089, 0.1291, 0.3790],
          ...,
          [0.4019, 0.3107, 0.3332,  ..., 0.4988, 0.6962, 0.0199],
          [0.0779, 0.7681, 0.4312,  ..., 0.4564, 0.6104, 0.9738],
          [0.8653, 0.1537, 0.5315,  ..., 0.4564, 0.3909, 0.3750]]]],
       device='cuda:1')
images size  torch.Size([1, 1, 64, 64])
Input 2x1x64x64
L-->R current op 47960403177040
after conv2d 2x1x64x64
L-->R current op 47960403176944
after maxpool2d 2x1x32x32
L-->R current op 47960403176896
after conv2d 2x1x32x32
L-->R current op 47960403176848
after maxpool2d 2x1x16x16
N, C, oH, oW 2 1 16 16
coord [0, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 0, 4]
coord [0, 4, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [0, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 0, 4]
coord [3, 8, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 0, 4]
coord [7, 12, 0, 4]
out_temp torch.Size([1, 1, 5, 6])
coord [0, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 0, 4]
coord [11, 15, 0, 4]
out_temp torch.Size([1, 1, 5, 5])
coord [1, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 3, 8]
coord [0, 4, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [1, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 3, 8]
coord [3, 8, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 3, 8]
coord [7, 12, 3, 8]
out_temp torch.Size([1, 1, 6, 6])
coord [1, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 3, 8]
coord [11, 15, 3, 8]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 0]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [0, 4, 7, 12]
coord [0, 4, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [2, 1]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [3, 8, 7, 12]
coord [3, 8, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 2]
bwd_out_shape  (6, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 28])
1 out_temp torch.Size([1, 1, 28, 28])
max 1 torch.Size([1, 1, 14, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 12])
2 out_temp torch.Size([1, 1, 12, 12])
max 2 torch.Size([1, 6, 6])
(6, 6) [6, 6] [7, 12, 7, 12]
coord [7, 12, 7, 12]
out_temp torch.Size([1, 1, 6, 6])
coord [2, 3]
bwd_out_shape  (5, 6)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 30, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 28, 22])
1 out_temp torch.Size([1, 1, 28, 22])
max 1 torch.Size([1, 1, 14, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 12, 10])
2 out_temp torch.Size([1, 1, 12, 10])
max 2 torch.Size([1, 6, 5])
(5, 6) [5, 6] [11, 15, 7, 12]
coord [11, 15, 7, 12]
out_temp torch.Size([1, 1, 6, 5])
coord [3, 0]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [0, 4, 11, 15]
coord [0, 4, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
coord [3, 1]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [3, 8, 11, 15]
coord [3, 8, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 2]
bwd_out_shape  (6, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 30])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 28])
1 out_temp torch.Size([1, 1, 22, 28])
max 1 torch.Size([1, 1, 11, 14])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 12])
2 out_temp torch.Size([1, 1, 10, 12])
max 2 torch.Size([1, 5, 6])
(6, 5) [6, 5] [7, 12, 11, 15]
coord [7, 12, 11, 15]
out_temp torch.Size([1, 1, 5, 6])
coord [3, 3]
bwd_out_shape  (5, 5)
fwd_out_shape  (4, 4)
Yes, fwd is smaller
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 23, 23])
id 47960403177040
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 22, 22])
1 out_temp torch.Size([1, 1, 22, 22])
max 1 torch.Size([1, 1, 11, 11])
id 47960403176896
== tiled conv2d forward
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
2 out_temp torch.Size([1, 1, 10, 10])
max 2 torch.Size([1, 5, 5])
(5, 5) [5, 5] [11, 15, 11, 15]
coord [11, 15, 11, 15]
out_temp torch.Size([1, 1, 5, 5])
output-t tensor([[[[-2.1862e-02, -1.1474e-02, -1.2723e-02, -2.0568e-02,  4.1207e-03,
           -2.5369e-02,  1.2447e-03,  1.2462e-02, -2.3288e-02, -7.9589e-03,
            1.5277e-02,  2.3313e-02, -4.2260e-03,  8.0370e-03,  3.8830e-02,
            3.9132e-02],
          [-1.3858e-02,  4.4041e-02,  6.8710e-02, -1.5932e-02, -3.0096e-02,
           -1.9073e-02,  4.0985e-02,  2.4090e-02, -1.9759e-02, -9.8202e-03,
           -3.1287e-02, -3.7354e-02,  3.1198e-02,  3.5730e-02,  1.4367e-02,
           -2.6549e-02],
          [-3.1866e-02,  1.2638e-02, -2.4291e-02, -1.3607e-02,  7.2665e-04,
            1.1671e-03,  4.1413e-02,  1.1029e-02,  7.9955e-03,  2.8359e-02,
           -9.8453e-03,  1.4121e-02, -9.7757e-03, -3.1996e-02, -4.3086e-02,
           -3.6472e-02],
          [-5.3427e-03, -2.4664e-02, -6.6000e-04,  5.3504e-02, -1.6568e-02,
            1.4723e-02,  4.3415e-02,  5.2619e-02,  9.6169e-03,  2.0077e-02,
            4.2366e-02,  6.7135e-03,  4.1083e-02,  4.0723e-02,  4.5351e-02,
            1.3184e-02],
          [-1.8837e-02, -4.2432e-03, -3.5879e-02, -2.8129e-02, -5.8773e-02,
           -2.1486e-02,  1.7739e-02,  5.9806e-02,  4.0970e-02,  4.5291e-03,
            6.7048e-03, -1.9224e-02,  6.4429e-03, -7.6382e-03, -3.3125e-03,
            2.1608e-03],
          [ 3.0095e-03, -9.7386e-03, -1.6584e-02,  2.4766e-02,  1.5645e-02,
            1.2377e-02,  1.3939e-02,  4.5261e-03, -1.7986e-02,  9.8002e-03,
            1.3559e-02,  5.3842e-02,  5.1301e-05, -8.9483e-03,  2.4918e-02,
           -2.1772e-02],
          [-3.0745e-02, -3.5707e-02,  1.5186e-02,  3.6711e-02, -3.0223e-02,
            2.1317e-02,  1.0445e-02,  1.2153e-02,  3.5484e-02,  4.5609e-02,
           -1.4320e-02,  7.4792e-03,  1.6369e-03, -1.0257e-02, -2.2006e-02,
           -2.5850e-02],
          [-3.1076e-02,  1.8002e-03,  1.2527e-02, -5.9755e-02,  2.3804e-02,
            1.2958e-02,  5.0621e-02,  8.4388e-02,  2.2678e-02, -1.1360e-02,
           -3.7802e-02, -4.6571e-02, -1.2701e-02, -3.6171e-02, -4.5376e-02,
           -1.1301e-02],
          [-4.2584e-02,  1.3178e-02, -2.6286e-02,  9.4749e-04,  3.1519e-02,
           -2.1941e-02,  2.3323e-02,  9.4292e-03, -5.3364e-03, -2.0023e-02,
            2.6483e-02,  5.3060e-02,  2.2522e-02,  5.3764e-02,  3.2391e-02,
            2.1755e-02],
          [ 3.9657e-02,  3.4379e-02, -7.8978e-03, -3.3104e-02, -4.6843e-02,
           -2.2949e-02, -2.8425e-02, -5.7660e-03, -3.4992e-02,  1.0778e-02,
            3.6868e-02,  5.3250e-02, -3.3976e-02, -2.9264e-02,  3.8162e-02,
           -2.2482e-02],
          [-6.1973e-03,  5.0327e-02,  6.4115e-03, -2.1820e-02,  4.1899e-02,
            2.5673e-02, -3.0447e-02,  1.8028e-02, -2.4859e-02, -1.3380e-02,
           -8.9959e-04, -4.2948e-02, -2.7195e-02, -2.0311e-02,  3.4141e-04,
           -1.3480e-02],
          [-1.4382e-02,  1.4408e-02, -1.0709e-03,  3.2728e-02,  9.6652e-02,
            8.7349e-03,  4.0273e-02, -2.2586e-02,  3.9220e-02,  2.6274e-02,
            5.3033e-02, -1.1063e-02,  3.5890e-02,  2.3848e-02,  4.7064e-02,
            1.1796e-02],
          [-2.9819e-02, -3.2990e-02,  1.0847e-02,  6.0093e-02,  1.3939e-02,
           -2.8161e-02,  2.1329e-02, -1.0288e-03, -7.3679e-03,  2.0026e-02,
            9.5009e-03, -8.9558e-03, -2.1986e-02,  2.6512e-02, -5.2543e-02,
           -4.3773e-03],
          [ 4.6722e-02,  3.5030e-03,  1.8130e-02,  3.4000e-02,  3.1776e-02,
            3.9176e-02,  5.5348e-02,  3.7837e-02, -2.4415e-02,  2.2054e-03,
           -2.4339e-02,  1.0837e-02, -2.2439e-02, -3.1878e-02,  7.2212e-03,
            5.2897e-02],
          [ 3.8126e-04, -5.0301e-03,  1.8064e-02,  4.5003e-02, -1.6600e-02,
            5.5089e-02,  8.3988e-02,  2.6924e-02, -1.9030e-02, -7.1683e-03,
            3.6216e-03, -1.3752e-02,  5.8441e-03,  2.8511e-02,  1.6520e-02,
            2.5956e-02],
          [-1.6842e-02,  9.8448e-03,  4.6822e-02, -4.8374e-02,  1.3684e-03,
            7.2728e-04, -1.3710e-02, -1.8633e-02,  7.4306e-03,  4.9860e-02,
            1.5692e-02, -1.6529e-02, -7.5700e-03, -2.0143e-02, -4.9980e-02,
            2.5882e-03]]],


        [[[-2.1862e-02, -1.1474e-02, -1.2723e-02, -2.0568e-02,  4.1207e-03,
           -2.5369e-02,  1.2447e-03,  1.2462e-02, -2.3288e-02, -7.9589e-03,
            1.5277e-02,  2.3313e-02, -4.2260e-03,  8.0370e-03,  3.8830e-02,
            3.9132e-02],
          [-1.3858e-02,  4.4041e-02,  6.8710e-02, -1.5932e-02, -3.0096e-02,
           -1.9073e-02,  4.0985e-02,  2.4090e-02, -1.9759e-02, -9.8202e-03,
           -3.1287e-02, -3.7354e-02,  3.1198e-02,  3.5730e-02,  1.4367e-02,
           -2.6549e-02],
          [-3.1866e-02,  1.2638e-02, -2.4291e-02, -1.3607e-02,  7.2665e-04,
            1.1671e-03,  4.1413e-02,  1.1029e-02,  7.9955e-03,  2.8359e-02,
           -9.8453e-03,  1.4121e-02, -9.7757e-03, -3.1996e-02, -4.3086e-02,
           -3.6472e-02],
          [-5.3427e-03, -2.4664e-02, -6.6000e-04,  5.3504e-02, -1.6568e-02,
            1.4723e-02,  4.3415e-02,  5.2619e-02,  9.6169e-03,  2.0077e-02,
            4.2366e-02,  6.7135e-03,  4.1083e-02,  4.0723e-02,  4.5351e-02,
            1.3184e-02],
          [-1.8837e-02, -4.2432e-03, -3.5879e-02, -2.8129e-02, -5.8773e-02,
           -2.1486e-02,  1.7739e-02,  5.9806e-02,  4.0970e-02,  4.5291e-03,
            6.7048e-03, -1.9224e-02,  6.4429e-03, -7.6382e-03, -3.3125e-03,
            2.1608e-03],
          [ 3.0095e-03, -9.7386e-03, -1.6584e-02,  2.4766e-02,  1.5645e-02,
            1.2377e-02,  1.3939e-02,  4.5261e-03, -1.7986e-02,  9.8002e-03,
            1.3559e-02,  5.3842e-02,  5.1301e-05, -8.9483e-03,  2.4918e-02,
           -2.1772e-02],
          [-3.0745e-02, -3.5707e-02,  1.5186e-02,  3.6711e-02, -3.0223e-02,
            2.1317e-02,  1.0445e-02,  1.2153e-02,  3.5484e-02,  4.5609e-02,
           -1.4320e-02,  7.4792e-03,  1.6369e-03, -1.0257e-02, -2.2006e-02,
           -2.5850e-02],
          [-3.1076e-02,  1.8002e-03,  1.2527e-02, -5.9755e-02,  2.3804e-02,
            1.2958e-02,  5.0621e-02,  8.4388e-02,  2.2678e-02, -1.1360e-02,
           -3.7802e-02, -4.6571e-02, -1.2701e-02, -3.6171e-02, -4.5376e-02,
           -1.1301e-02],
          [-4.2584e-02,  1.3178e-02, -2.6286e-02,  9.4749e-04,  3.1519e-02,
           -2.1941e-02,  2.3323e-02,  9.4292e-03, -5.3364e-03, -2.0023e-02,
            2.6483e-02,  5.3060e-02,  2.2522e-02,  5.3764e-02,  3.2391e-02,
            2.1755e-02],
          [ 3.9657e-02,  3.4379e-02, -7.8978e-03, -3.3104e-02, -4.6843e-02,
           -2.2949e-02, -2.8425e-02, -5.7660e-03, -3.4992e-02,  1.0778e-02,
            3.6868e-02,  5.3250e-02, -3.3976e-02, -2.9264e-02,  3.8162e-02,
           -2.2482e-02],
          [-6.1973e-03,  5.0327e-02,  6.4115e-03, -2.1820e-02,  4.1899e-02,
            2.5673e-02, -3.0447e-02,  1.8028e-02, -2.4859e-02, -1.3380e-02,
           -8.9959e-04, -4.2948e-02, -2.7195e-02, -2.0311e-02,  3.4141e-04,
           -1.3480e-02],
          [-1.4382e-02,  1.4408e-02, -1.0709e-03,  3.2728e-02,  9.6652e-02,
            8.7349e-03,  4.0273e-02, -2.2586e-02,  3.9220e-02,  2.6274e-02,
            5.3033e-02, -1.1063e-02,  3.5890e-02,  2.3848e-02,  4.7064e-02,
            1.1796e-02],
          [-2.9819e-02, -3.2990e-02,  1.0847e-02,  6.0093e-02,  1.3939e-02,
           -2.8161e-02,  2.1329e-02, -1.0288e-03, -7.3679e-03,  2.0026e-02,
            9.5009e-03, -8.9558e-03, -2.1986e-02,  2.6512e-02, -5.2543e-02,
           -4.3773e-03],
          [ 4.6722e-02,  3.5030e-03,  1.8130e-02,  3.4000e-02,  3.1776e-02,
            3.9176e-02,  5.5348e-02,  3.7837e-02, -2.4415e-02,  2.2054e-03,
           -2.4339e-02,  1.0837e-02, -2.2439e-02, -3.1878e-02,  7.2212e-03,
            5.2897e-02],
          [ 3.8126e-04, -5.0301e-03,  1.8064e-02,  4.5003e-02, -1.6600e-02,
            5.5089e-02,  8.3988e-02,  2.6924e-02, -1.9030e-02, -7.1683e-03,
            3.6216e-03, -1.3752e-02,  5.8441e-03,  2.8511e-02,  1.6520e-02,
            2.5956e-02],
          [-1.6842e-02,  9.8448e-03,  4.6822e-02, -4.8374e-02,  1.3684e-03,
            7.2728e-04, -1.3710e-02, -1.8633e-02,  7.4306e-03,  4.9860e-02,
            1.5692e-02, -1.6529e-02, -7.5700e-03, -2.0143e-02, -4.9980e-02,
            2.5882e-03]]]], device='cuda:1',
       grad_fn=<TiledCopyFunctionBackward>)

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 0, 1]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [0, 1, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [0, 1, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 6])
new_grad_out torch.Size([2, 1, 6, 6])
##############grad_in in maxp torch.Size([1, 1, 12, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 12])
grad_input torch.Size([1, 1, 14, 14])
padding info :: [0, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 28])
grad_out size torch.Size([1, 1, 14, 14])
arg size torch.Size([1, 1, 14, 14])
##############grad_in in maxp torch.Size([1, 1, 28, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 28])
final torch.Size([1, 1, 30, 30])
padding info :: [0, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 12, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 6, 5])
new_grad_out torch.Size([2, 1, 6, 5])
##############grad_in in maxp torch.Size([1, 1, 12, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 14, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 12, 10])
grad_input torch.Size([1, 1, 14, 12])
padding info :: [1, 0, 0, 0]
new grad_input torch.Size([1, 1, 14, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 28, 22])
grad_out size torch.Size([1, 1, 14, 11])
arg size torch.Size([1, 1, 14, 11])
##############grad_in in maxp torch.Size([1, 1, 28, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 30, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 28, 22])
final torch.Size([1, 1, 30, 24])
padding info :: [1, 0, 0, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [0, 1, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 12])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 6])
new_grad_out torch.Size([2, 1, 5, 6])
##############grad_in in maxp torch.Size([1, 1, 10, 12])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 14])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 12])
grad_input torch.Size([1, 1, 12, 14])
padding info :: [0, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 14])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 28])
grad_out size torch.Size([1, 1, 11, 14])
arg size torch.Size([1, 1, 11, 14])
##############grad_in in maxp torch.Size([1, 1, 22, 28])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 30])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 28])
final torch.Size([1, 1, 24, 30])
padding info :: [0, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([2, 1, 16, 16])
arg size torch.Size([1, 1, 5, 5])
new_grad_out torch.Size([2, 1, 5, 5])
##############grad_in in maxp torch.Size([1, 1, 10, 10])
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 12, 12])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
grad_input torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 11, 11])

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 22, 22])
grad_out size torch.Size([1, 1, 11, 11])
arg size torch.Size([1, 1, 11, 11])
##############grad_in in maxp torch.Size([1, 1, 22, 22])
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 24, 24])
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 22, 22])
final torch.Size([1, 1, 24, 24])
padding info :: [1, 0, 1, 0]
after crop g_in torch.Size([1, 1, 16, 16])
img-g torch.Size([1, 1, 64, 64]) tensor([[[[-0.0180,  0.0276,  0.0041,  ..., -0.0303,  0.1159, -0.0123],
          [ 0.0129, -0.0146, -0.0029,  ..., -0.0441, -0.0683,  0.0041],
          [-0.0661,  0.0645, -0.0755,  ..., -0.0650,  0.0101,  0.0358],
          ...,
          [ 0.0777, -0.0078, -0.0077,  ..., -0.0855,  0.0612,  0.0478],
          [-0.0155, -0.0466,  0.0072,  ...,  0.1127, -0.0131,  0.0065],
          [ 0.0348, -0.0039,  0.0291,  ..., -0.1190, -0.0449,  0.0065]]]],
       device='cuda:1')

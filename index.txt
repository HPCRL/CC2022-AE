
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

Input 1x1x16x16
L-->R current op 139784840008080
after conv2d 1x1x16x16
L-->R current op 139784840008224
after maxpool2d 1x1x8x8
L-->R current op 139783032421920
after conv2d 1x1x8x8
L-->R current op 139784839957760
after maxpool2d 1x1x4x4
coord [0, 0]
bwd_out_shape  (2, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <0,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,1,0,1,>, 
 <internal >, 
 <realidx 0,1,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <0,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,3,0,3,>, 
 <internal >, 
 <realidx 0,3,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <0,0,>,
 <otileshape 4,4,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,4,0,4,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,4,-1,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <0,0,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 0,9,0,9,>, 
 <internal >, 
 <realidx 0,9,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <0,0,>,
 <otileshape 10,10,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,10,0,10,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,10,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <0,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,0,3,>, 
 <internal >, 
 <realidx 0,3,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <0,0,>,
 <otileshape 5,5,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,4,0,4,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,4,-1,4,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <0,0,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,0,2,>, 
 <internal >, 
 <realidx 0,2,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <0,0,>,
 <otileshape 4,4,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,3,0,3,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,3,-1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <0,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,1,0,1,>, 
 <internal >, 
 <realidx 0,1,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 11])
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
1 out_temp torch.Size([1, 1, 10, 10])
max 1 torch.Size([1, 1, 5, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 5])
shape input_tile_for_next
 torch.Size([1, 1, 4, 4])
2 out_temp torch.Size([1, 1, 4, 4])
max 2 torch.Size([1, 2, 2])
(2, 2) [2, 2] [0, 1, 0, 1]
coord [0, 1, 0, 1]
out_temp torch.Size([1, 1, 2, 2])
coord [0, 1]
bwd_out_shape  (3, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <0,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,2,0,1,>, 
 <internal >, 
 <realidx 0,2,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <0,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,5,0,3,>, 
 <internal >, 
 <realidx 0,5,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <0,1,>,
 <otileshape 6,4,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,6,0,4,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,6,-1,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <0,1,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 0,13,0,9,>, 
 <internal >, 
 <realidx 0,13,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <0,1,>,
 <otileshape 14,10,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,14,0,10,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,14,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <0,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,0,3,>, 
 <internal >, 
 <realidx 4,7,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <0,1,>,
 <otileshape 6,5,>,
 <padding 0,0,1,0,>,
 <inpslidx 3,8,0,4,>, 
 <internal 1,1,0,1,>, 
 <realidx 3,8,-1,4,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <0,1,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 1,4,0,2,>, 
 <internal >, 
 <realidx 1,4,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <0,1,>,
 <otileshape 6,4,>,
 <padding 0,0,1,0,>,
 <inpslidx 0,5,0,3,>, 
 <internal 1,1,0,1,>, 
 <realidx 0,5,-1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <0,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,2,0,1,>, 
 <internal >, 
 <realidx 0,2,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 15])
shape input_tile_for_next
 torch.Size([1, 1, 10, 14])
1 out_temp torch.Size([1, 1, 10, 14])
max 1 torch.Size([1, 1, 5, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 7])
shape input_tile_for_next
 torch.Size([1, 1, 4, 6])
2 out_temp torch.Size([1, 1, 4, 6])
max 2 torch.Size([1, 2, 3])
(3, 2) [3, 2] [0, 2, 0, 1]
coord [0, 2, 0, 1]
out_temp torch.Size([1, 1, 2, 3])
coord [0, 2]
bwd_out_shape  (3, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <0,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 1,3,0,1,>, 
 <internal >, 
 <realidx 1,3,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <0,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 2,7,0,3,>, 
 <internal >, 
 <realidx 2,7,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <0,2,>,
 <otileshape 6,4,>,
 <padding 0,1,1,0,>,
 <inpslidx 1,7,0,4,>, 
 <internal 1,0,0,1,>, 
 <realidx 1,8,-1,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <0,2,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 2,15,0,9,>, 
 <internal >, 
 <realidx 2,15,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <0,2,>,
 <otileshape 14,10,>,
 <padding 0,1,1,0,>,
 <inpslidx 1,15,0,10,>, 
 <internal 1,0,0,1,>, 
 <realidx 1,16,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <0,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,0,3,>, 
 <internal >, 
 <realidx 8,11,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <0,2,>,
 <otileshape 6,5,>,
 <padding 0,0,1,0,>,
 <inpslidx 7,12,0,4,>, 
 <internal 1,1,0,1,>, 
 <realidx 7,12,-1,4,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <0,2,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 3,6,0,2,>, 
 <internal >, 
 <realidx 3,6,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <0,2,>,
 <otileshape 6,4,>,
 <padding 0,0,1,0,>,
 <inpslidx 2,7,0,3,>, 
 <internal 1,1,0,1,>, 
 <realidx 2,7,-1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <0,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 1,3,0,1,>, 
 <internal >, 
 <realidx 1,3,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 15])
shape input_tile_for_next
 torch.Size([1, 1, 10, 14])
1 out_temp torch.Size([1, 1, 10, 14])
max 1 torch.Size([1, 1, 5, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 7])
shape input_tile_for_next
 torch.Size([1, 1, 4, 6])
2 out_temp torch.Size([1, 1, 4, 6])
max 2 torch.Size([1, 2, 3])
(3, 2) [3, 2] [1, 3, 0, 1]
coord [1, 3, 0, 1]
out_temp torch.Size([1, 1, 2, 3])
coord [0, 3]
bwd_out_shape  (2, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <0,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 2,3,0,1,>, 
 <internal >, 
 <realidx 2,3,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <0,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 4,7,0,3,>, 
 <internal >, 
 <realidx 4,7,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <0,3,>,
 <otileshape 4,4,>,
 <padding 0,1,1,0,>,
 <inpslidx 3,7,0,4,>, 
 <internal 1,0,0,1,>, 
 <realidx 3,8,-1,4,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <0,3,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 6,15,0,9,>, 
 <internal >, 
 <realidx 6,15,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <0,3,>,
 <otileshape 10,10,>,
 <padding 0,1,1,0,>,
 <inpslidx 5,15,0,10,>, 
 <internal 1,0,0,1,>, 
 <realidx 5,16,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <0,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,0,3,>, 
 <internal >, 
 <realidx 12,15,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <0,3,>,
 <otileshape 5,5,>,
 <padding 0,1,1,0,>,
 <inpslidx 11,15,0,4,>, 
 <internal 1,0,0,1,>, 
 <realidx 11,16,-1,4,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <0,3,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 5,7,0,2,>, 
 <internal >, 
 <realidx 5,7,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <0,3,>,
 <otileshape 4,4,>,
 <padding 0,1,1,0,>,
 <inpslidx 4,7,0,3,>, 
 <internal 1,0,0,1,>, 
 <realidx 4,8,-1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <0,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 2,3,0,1,>, 
 <internal >, 
 <realidx 2,3,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 11])
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
1 out_temp torch.Size([1, 1, 10, 10])
max 1 torch.Size([1, 1, 5, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 5])
shape input_tile_for_next
 torch.Size([1, 1, 4, 4])
2 out_temp torch.Size([1, 1, 4, 4])
max 2 torch.Size([1, 2, 2])
(2, 2) [2, 2] [2, 3, 0, 1]
coord [2, 3, 0, 1]
out_temp torch.Size([1, 1, 2, 2])
coord [1, 0]
bwd_out_shape  (2, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <1,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,1,0,2,>, 
 <internal >, 
 <realidx 0,1,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <1,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,3,0,5,>, 
 <internal >, 
 <realidx 0,3,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <1,0,>,
 <otileshape 4,6,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,4,0,6,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,4,-1,6,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <1,0,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 0,9,0,13,>, 
 <internal >, 
 <realidx 0,9,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <1,0,>,
 <otileshape 10,14,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,10,0,14,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,10,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <1,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,4,7,>, 
 <internal >, 
 <realidx 0,3,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <1,0,>,
 <otileshape 5,6,>,
 <padding 1,0,0,0,>,
 <inpslidx 0,4,3,8,>, 
 <internal 0,1,1,1,>, 
 <realidx -1,4,3,8,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <1,0,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 0,2,1,4,>, 
 <internal >, 
 <realidx 0,2,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <1,0,>,
 <otileshape 4,6,>,
 <padding 1,0,0,0,>,
 <inpslidx 0,3,0,5,>, 
 <internal 0,1,1,1,>, 
 <realidx -1,3,0,5,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <1,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,1,0,2,>, 
 <internal >, 
 <realidx 0,1,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 11])
shape input_tile_for_next
 torch.Size([1, 1, 14, 10])
1 out_temp torch.Size([1, 1, 14, 10])
max 1 torch.Size([1, 1, 7, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 5])
shape input_tile_for_next
 torch.Size([1, 1, 6, 4])
2 out_temp torch.Size([1, 1, 6, 4])
max 2 torch.Size([1, 3, 2])
(2, 3) [2, 3] [0, 1, 0, 2]
coord [0, 1, 0, 2]
out_temp torch.Size([1, 1, 3, 2])
coord [1, 1]
bwd_out_shape  (3, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <1,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,0,2,>, 
 <internal >, 
 <realidx 0,2,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <1,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,5,0,5,>, 
 <internal >, 
 <realidx 0,5,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <1,1,>,
 <otileshape 6,6,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,6,0,6,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,6,-1,6,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <1,1,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 0,13,0,13,>, 
 <internal >, 
 <realidx 0,13,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <1,1,>,
 <otileshape 14,14,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,14,0,14,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,14,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <1,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,4,7,>, 
 <internal >, 
 <realidx 4,7,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <1,1,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 3,8,3,8,>, 
 <internal 1,1,1,1,>, 
 <realidx 3,8,3,8,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <1,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 1,4,1,4,>, 
 <internal >, 
 <realidx 1,4,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <1,1,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 0,5,0,5,>, 
 <internal 1,1,1,1,>, 
 <realidx 0,5,0,5,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <1,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,0,2,>, 
 <internal >, 
 <realidx 0,2,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 15])
shape input_tile_for_next
 torch.Size([1, 1, 14, 14])
1 out_temp torch.Size([1, 1, 14, 14])
max 1 torch.Size([1, 1, 7, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 7])
shape input_tile_for_next
 torch.Size([1, 1, 6, 6])
2 out_temp torch.Size([1, 1, 6, 6])
max 2 torch.Size([1, 3, 3])
(3, 3) [3, 3] [0, 2, 0, 2]
coord [0, 2, 0, 2]
out_temp torch.Size([1, 1, 3, 3])
coord [1, 2]
bwd_out_shape  (3, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <1,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 1,3,0,2,>, 
 <internal >, 
 <realidx 1,3,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <1,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 2,7,0,5,>, 
 <internal >, 
 <realidx 2,7,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <1,2,>,
 <otileshape 6,6,>,
 <padding 0,1,1,0,>,
 <inpslidx 1,7,0,6,>, 
 <internal 1,0,0,1,>, 
 <realidx 1,8,-1,6,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <1,2,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 2,15,0,13,>, 
 <internal >, 
 <realidx 2,15,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <1,2,>,
 <otileshape 14,14,>,
 <padding 0,1,1,0,>,
 <inpslidx 1,15,0,14,>, 
 <internal 1,0,0,1,>, 
 <realidx 1,16,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <1,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,4,7,>, 
 <internal >, 
 <realidx 8,11,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <1,2,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 7,12,3,8,>, 
 <internal 1,1,1,1,>, 
 <realidx 7,12,3,8,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <1,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 3,6,1,4,>, 
 <internal >, 
 <realidx 3,6,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <1,2,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 2,7,0,5,>, 
 <internal 1,1,1,1,>, 
 <realidx 2,7,0,5,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <1,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 1,3,0,2,>, 
 <internal >, 
 <realidx 1,3,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 15])
shape input_tile_for_next
 torch.Size([1, 1, 14, 14])
1 out_temp torch.Size([1, 1, 14, 14])
max 1 torch.Size([1, 1, 7, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 7])
shape input_tile_for_next
 torch.Size([1, 1, 6, 6])
2 out_temp torch.Size([1, 1, 6, 6])
max 2 torch.Size([1, 3, 3])
(3, 3) [3, 3] [1, 3, 0, 2]
coord [1, 3, 0, 2]
out_temp torch.Size([1, 1, 3, 3])
coord [1, 3]
bwd_out_shape  (2, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <1,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 2,3,0,2,>, 
 <internal >, 
 <realidx 2,3,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <1,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 4,7,0,5,>, 
 <internal >, 
 <realidx 4,7,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <1,3,>,
 <otileshape 4,6,>,
 <padding 0,1,1,0,>,
 <inpslidx 3,7,0,6,>, 
 <internal 1,0,0,1,>, 
 <realidx 3,8,-1,6,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <1,3,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 6,15,0,13,>, 
 <internal >, 
 <realidx 6,15,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <1,3,>,
 <otileshape 10,14,>,
 <padding 0,1,1,0,>,
 <inpslidx 5,15,0,14,>, 
 <internal 1,0,0,1,>, 
 <realidx 5,16,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <1,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,4,7,>, 
 <internal >, 
 <realidx 12,15,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <1,3,>,
 <otileshape 5,6,>,
 <padding 0,1,0,0,>,
 <inpslidx 11,15,3,8,>, 
 <internal 1,0,1,1,>, 
 <realidx 11,16,3,8,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <1,3,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 5,7,1,4,>, 
 <internal >, 
 <realidx 5,7,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <1,3,>,
 <otileshape 4,6,>,
 <padding 0,1,0,0,>,
 <inpslidx 4,7,0,5,>, 
 <internal 1,0,1,1,>, 
 <realidx 4,8,0,5,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <1,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 2,3,0,2,>, 
 <internal >, 
 <realidx 2,3,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 11])
shape input_tile_for_next
 torch.Size([1, 1, 14, 10])
1 out_temp torch.Size([1, 1, 14, 10])
max 1 torch.Size([1, 1, 7, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 5])
shape input_tile_for_next
 torch.Size([1, 1, 6, 4])
2 out_temp torch.Size([1, 1, 6, 4])
max 2 torch.Size([1, 3, 2])
(2, 3) [2, 3] [2, 3, 0, 2]
coord [2, 3, 0, 2]
out_temp torch.Size([1, 1, 3, 2])
coord [2, 0]
bwd_out_shape  (2, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <2,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,1,1,3,>, 
 <internal >, 
 <realidx 0,1,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <2,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,3,2,7,>, 
 <internal >, 
 <realidx 0,3,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <2,0,>,
 <otileshape 4,6,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,4,1,7,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,4,1,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <2,0,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 0,9,2,15,>, 
 <internal >, 
 <realidx 0,9,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <2,0,>,
 <otileshape 10,14,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,10,1,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,10,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <2,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,8,11,>, 
 <internal >, 
 <realidx 0,3,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <2,0,>,
 <otileshape 5,6,>,
 <padding 1,0,0,0,>,
 <inpslidx 0,4,7,12,>, 
 <internal 0,1,1,1,>, 
 <realidx -1,4,7,12,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <2,0,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 0,2,3,6,>, 
 <internal >, 
 <realidx 0,2,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <2,0,>,
 <otileshape 4,6,>,
 <padding 1,0,0,0,>,
 <inpslidx 0,3,2,7,>, 
 <internal 0,1,1,1,>, 
 <realidx -1,3,2,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <2,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,1,1,3,>, 
 <internal >, 
 <realidx 0,1,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 11])
shape input_tile_for_next
 torch.Size([1, 1, 14, 10])
1 out_temp torch.Size([1, 1, 14, 10])
max 1 torch.Size([1, 1, 7, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 5])
shape input_tile_for_next
 torch.Size([1, 1, 6, 4])
2 out_temp torch.Size([1, 1, 6, 4])
max 2 torch.Size([1, 3, 2])
(2, 3) [2, 3] [0, 1, 1, 3]
coord [0, 1, 1, 3]
out_temp torch.Size([1, 1, 3, 2])
coord [2, 1]
bwd_out_shape  (3, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <2,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,1,3,>, 
 <internal >, 
 <realidx 0,2,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <2,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,5,2,7,>, 
 <internal >, 
 <realidx 0,5,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <2,1,>,
 <otileshape 6,6,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,6,1,7,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,6,1,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <2,1,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 0,13,2,15,>, 
 <internal >, 
 <realidx 0,13,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <2,1,>,
 <otileshape 14,14,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,14,1,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,14,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <2,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,8,11,>, 
 <internal >, 
 <realidx 4,7,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <2,1,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 3,8,7,12,>, 
 <internal 1,1,1,1,>, 
 <realidx 3,8,7,12,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <2,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 1,4,3,6,>, 
 <internal >, 
 <realidx 1,4,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <2,1,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 0,5,2,7,>, 
 <internal 1,1,1,1,>, 
 <realidx 0,5,2,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <2,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,1,3,>, 
 <internal >, 
 <realidx 0,2,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 15])
shape input_tile_for_next
 torch.Size([1, 1, 14, 14])
1 out_temp torch.Size([1, 1, 14, 14])
max 1 torch.Size([1, 1, 7, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 7])
shape input_tile_for_next
 torch.Size([1, 1, 6, 6])
2 out_temp torch.Size([1, 1, 6, 6])
max 2 torch.Size([1, 3, 3])
(3, 3) [3, 3] [0, 2, 1, 3]
coord [0, 2, 1, 3]
out_temp torch.Size([1, 1, 3, 3])
coord [2, 2]
bwd_out_shape  (3, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <2,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 1,3,1,3,>, 
 <internal >, 
 <realidx 1,3,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <2,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 2,7,2,7,>, 
 <internal >, 
 <realidx 2,7,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <2,2,>,
 <otileshape 6,6,>,
 <padding 0,1,0,1,>,
 <inpslidx 1,7,1,7,>, 
 <internal 1,0,1,0,>, 
 <realidx 1,8,1,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <2,2,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 2,15,2,15,>, 
 <internal >, 
 <realidx 2,15,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <2,2,>,
 <otileshape 14,14,>,
 <padding 0,1,0,1,>,
 <inpslidx 1,15,1,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 1,16,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <2,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,8,11,>, 
 <internal >, 
 <realidx 8,11,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <2,2,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 7,12,7,12,>, 
 <internal 1,1,1,1,>, 
 <realidx 7,12,7,12,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <2,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 3,6,3,6,>, 
 <internal >, 
 <realidx 3,6,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <2,2,>,
 <otileshape 6,6,>,
 <padding 0,0,0,0,>,
 <inpslidx 2,7,2,7,>, 
 <internal 1,1,1,1,>, 
 <realidx 2,7,2,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <2,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 1,3,1,3,>, 
 <internal >, 
 <realidx 1,3,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 15])
shape input_tile_for_next
 torch.Size([1, 1, 14, 14])
1 out_temp torch.Size([1, 1, 14, 14])
max 1 torch.Size([1, 1, 7, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 7])
shape input_tile_for_next
 torch.Size([1, 1, 6, 6])
2 out_temp torch.Size([1, 1, 6, 6])
max 2 torch.Size([1, 3, 3])
(3, 3) [3, 3] [1, 3, 1, 3]
coord [1, 3, 1, 3]
out_temp torch.Size([1, 1, 3, 3])
coord [2, 3]
bwd_out_shape  (2, 3)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <2,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 2,3,1,3,>, 
 <internal >, 
 <realidx 2,3,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <2,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 4,7,2,7,>, 
 <internal >, 
 <realidx 4,7,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <2,3,>,
 <otileshape 4,6,>,
 <padding 0,1,0,1,>,
 <inpslidx 3,7,1,7,>, 
 <internal 1,0,1,0,>, 
 <realidx 3,8,1,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <2,3,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 6,15,2,15,>, 
 <internal >, 
 <realidx 6,15,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <2,3,>,
 <otileshape 10,14,>,
 <padding 0,1,0,1,>,
 <inpslidx 5,15,1,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 5,16,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <2,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,8,11,>, 
 <internal >, 
 <realidx 12,15,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <2,3,>,
 <otileshape 5,6,>,
 <padding 0,1,0,0,>,
 <inpslidx 11,15,7,12,>, 
 <internal 1,0,1,1,>, 
 <realidx 11,16,7,12,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <2,3,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 5,7,3,6,>, 
 <internal >, 
 <realidx 5,7,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <2,3,>,
 <otileshape 4,6,>,
 <padding 0,1,0,0,>,
 <inpslidx 4,7,2,7,>, 
 <internal 1,0,1,1,>, 
 <realidx 4,8,2,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <2,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 2,3,1,3,>, 
 <internal >, 
 <realidx 2,3,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 15, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 15, 11])
shape input_tile_for_next
 torch.Size([1, 1, 14, 10])
1 out_temp torch.Size([1, 1, 14, 10])
max 1 torch.Size([1, 1, 7, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 7, 5])
shape input_tile_for_next
 torch.Size([1, 1, 6, 4])
2 out_temp torch.Size([1, 1, 6, 4])
max 2 torch.Size([1, 3, 2])
(2, 3) [2, 3] [2, 3, 1, 3]
coord [2, 3, 1, 3]
out_temp torch.Size([1, 1, 3, 2])
coord [3, 0]
bwd_out_shape  (2, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <3,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,1,2,3,>, 
 <internal >, 
 <realidx 0,1,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <3,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,3,4,7,>, 
 <internal >, 
 <realidx 0,3,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <3,0,>,
 <otileshape 4,4,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,4,3,7,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,4,3,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <3,0,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 0,9,6,15,>, 
 <internal >, 
 <realidx 0,9,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <3,0,>,
 <otileshape 10,10,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,10,5,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,10,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <3,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,12,15,>, 
 <internal >, 
 <realidx 0,3,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <3,0,>,
 <otileshape 5,5,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,4,11,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,4,11,16,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <3,0,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,5,7,>, 
 <internal >, 
 <realidx 0,2,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <3,0,>,
 <otileshape 4,4,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,3,4,7,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,3,4,8,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <3,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,1,2,3,>, 
 <internal >, 
 <realidx 0,1,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 11])
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
1 out_temp torch.Size([1, 1, 10, 10])
max 1 torch.Size([1, 1, 5, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 5])
shape input_tile_for_next
 torch.Size([1, 1, 4, 4])
2 out_temp torch.Size([1, 1, 4, 4])
max 2 torch.Size([1, 2, 2])
(2, 2) [2, 2] [0, 1, 2, 3]
coord [0, 1, 2, 3]
out_temp torch.Size([1, 1, 2, 2])
coord [3, 1]
bwd_out_shape  (3, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <3,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,2,2,3,>, 
 <internal >, 
 <realidx 0,2,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <3,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,5,4,7,>, 
 <internal >, 
 <realidx 0,5,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <3,1,>,
 <otileshape 6,4,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,6,3,7,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,6,3,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <3,1,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 0,13,6,15,>, 
 <internal >, 
 <realidx 0,13,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <3,1,>,
 <otileshape 14,10,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,14,5,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,14,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <3,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,12,15,>, 
 <internal >, 
 <realidx 4,7,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <3,1,>,
 <otileshape 6,5,>,
 <padding 0,0,0,1,>,
 <inpslidx 3,8,11,15,>, 
 <internal 1,1,1,0,>, 
 <realidx 3,8,11,16,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <3,1,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 1,4,5,7,>, 
 <internal >, 
 <realidx 1,4,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <3,1,>,
 <otileshape 6,4,>,
 <padding 0,0,0,1,>,
 <inpslidx 0,5,4,7,>, 
 <internal 1,1,1,0,>, 
 <realidx 0,5,4,8,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <3,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,2,2,3,>, 
 <internal >, 
 <realidx 0,2,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 15])
shape input_tile_for_next
 torch.Size([1, 1, 10, 14])
1 out_temp torch.Size([1, 1, 10, 14])
max 1 torch.Size([1, 1, 5, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 7])
shape input_tile_for_next
 torch.Size([1, 1, 4, 6])
2 out_temp torch.Size([1, 1, 4, 6])
max 2 torch.Size([1, 2, 3])
(3, 2) [3, 2] [0, 2, 2, 3]
coord [0, 2, 2, 3]
out_temp torch.Size([1, 1, 2, 3])
coord [3, 2]
bwd_out_shape  (3, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <3,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 1,3,2,3,>, 
 <internal >, 
 <realidx 1,3,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <3,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 2,7,4,7,>, 
 <internal >, 
 <realidx 2,7,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <3,2,>,
 <otileshape 6,4,>,
 <padding 0,1,0,1,>,
 <inpslidx 1,7,3,7,>, 
 <internal 1,0,1,0,>, 
 <realidx 1,8,3,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <3,2,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 2,15,6,15,>, 
 <internal >, 
 <realidx 2,15,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <3,2,>,
 <otileshape 14,10,>,
 <padding 0,1,0,1,>,
 <inpslidx 1,15,5,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 1,16,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <3,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,12,15,>, 
 <internal >, 
 <realidx 8,11,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <3,2,>,
 <otileshape 6,5,>,
 <padding 0,0,0,1,>,
 <inpslidx 7,12,11,15,>, 
 <internal 1,1,1,0,>, 
 <realidx 7,12,11,16,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <3,2,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 3,6,5,7,>, 
 <internal >, 
 <realidx 3,6,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <3,2,>,
 <otileshape 6,4,>,
 <padding 0,0,0,1,>,
 <inpslidx 2,7,4,7,>, 
 <internal 1,1,1,0,>, 
 <realidx 2,7,4,8,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <3,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 1,3,2,3,>, 
 <internal >, 
 <realidx 1,3,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 15])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 15])
shape input_tile_for_next
 torch.Size([1, 1, 10, 14])
1 out_temp torch.Size([1, 1, 10, 14])
max 1 torch.Size([1, 1, 5, 7])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 7])
shape input_tile_for_next
 torch.Size([1, 1, 4, 6])
2 out_temp torch.Size([1, 1, 4, 6])
max 2 torch.Size([1, 2, 3])
(3, 2) [3, 2] [1, 3, 2, 3]
coord [1, 3, 2, 3]
out_temp torch.Size([1, 1, 2, 3])
coord [3, 3]
bwd_out_shape  (2, 2)
fwd_out_shape  (1, 1)
Yes, fwd is smaller
------------------------------
f_info {-11: fake[-11,-11] PI( <3,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 2,3,2,3,>, 
 <internal >, 
 <realidx 2,3,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784839957760: maxpool2d139784839957760[0,-1] PI( <3,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 4,7,4,7,>, 
 <internal >, 
 <realidx 4,7,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)
, 139783032421920: conv2d139783032421920[1,0] PI( <3,3,>,
 <otileshape 4,4,>,
 <padding 0,1,0,1,>,
 <inpslidx 3,7,3,7,>, 
 <internal 1,0,1,0,>, 
 <realidx 3,8,3,8,>, 
 <ndtsize 2,2,>, 
  local_first True
 next_id 139784839957760)
, 139784840008224: maxpool2d139784840008224[2,-1] PI( <3,3,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 6,15,6,15,>, 
 <internal >, 
 <realidx 6,15,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)
, 139784840008080: conv2d139784840008080[3,0] PI( <3,3,>,
 <otileshape 10,10,>,
 <padding 0,1,0,1,>,
 <inpslidx 5,15,5,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 5,16,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
}
------------------------------
b_info {-11: fake-bp[-11,-11] PI( <3,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,12,15,>, 
 <internal >, 
 <realidx 12,15,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)
, 139784840008080: bk-conv2d139784840008080[0,0] PI( <3,3,>,
 <otileshape 5,5,>,
 <padding 0,1,0,1,>,
 <inpslidx 11,15,11,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 11,16,11,16,>, 
 <ndtsize >, 
  local_first False
 next_id -99)
, 139784840008224: bk-maxpool2d139784840008224[1,-1] PI( <3,3,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 5,7,5,7,>, 
 <internal >, 
 <realidx 5,7,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)
, 139783032421920: bk-conv2d139783032421920[2,0] PI( <3,3,>,
 <otileshape 4,4,>,
 <padding 0,1,0,1,>,
 <inpslidx 4,7,4,7,>, 
 <internal 1,0,1,0,>, 
 <realidx 4,8,4,8,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008224)
, 139784839957760: bk-maxpool2d139784839957760[3,-1] PI( <3,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 2,3,2,3,>, 
 <internal >, 
 <realidx 2,3,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)
}
++++++++++++++++++++++++++++++++++++++++++++++++
***input tile torch.Size([1, 1, 11, 11])
id 139784840008080
== tiled conv2d forward
input shape torch.Size([1, 1, 11, 11])
shape input_tile_for_next
 torch.Size([1, 1, 10, 10])
1 out_temp torch.Size([1, 1, 10, 10])
max 1[torch/csrc/autograd/engine.cpp] call_function SumBackward0
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function MaxPool2DWithIndicesBackward
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function CudnnConvolutionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function MaxPool2DWithIndicesBackward
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function CudnnConvolutionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function BackwardHookFunctionBackward
 torch.Size([1, 1, 5, 5])
id 139783032421920
== tiled conv2d forward
input shape torch.Size([1, 1, 5, 5])
shape input_tile_for_next
 torch.Size([1, 1, 4, 4])
2 out_temp torch.Size([1, 1, 4, 4])
max 2 torch.Size([1, 2, 2])
(2, 2) [2, 2] [2, 3, 2, 3]
coord [2, 3, 2, 3]
out_temp torch.Size([1, 1, 2, 2])

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

done
Inside MaxPool2d backward
grad_output size :  torch.Size([1, 1, 4, 4])
ref grad_output  :
  tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
grad_input size :  torch.Size([1, 1, 8, 8])
ref grad_input  : 
 tensor([[[[0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 1., 1., 0., 0., 1., 1., 0.],
          [1., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0., 0., 1.],
          [0., 1., 0., 1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 1., 1., 0.],
          [1., 0., 0., 1., 1., 0., 0., 1.],
          [0., 0., 0., 0., 0., 0., 0., 0.]]]], device='cuda:0')
Inside Conv2d backward
grad_output size :  torch.Size([1, 1, 8, 8])
ref grad_output  :
  tensor([[[[0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 1., 1., 0., 0., 1., 1., 0.],
          [1., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0., 0., 1.],
          [0., 1., 0., 1., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 1., 1., 0.],
          [1., 0., 0., 1., 1., 0., 0., 1.],
          [0., 0., 0., 0., 0., 0., 0., 0.]]]], device='cuda:0')
grad_input size :  torch.Size([1, 1, 8, 8])
ref grad_input  : 
 tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.2210, -0.0533,
           -0.0689],
          [-0.1143, -0.4805, -0.5051, -0.2234, -0.1299, -0.4116, -0.5051,
           -0.2234],
          [-0.0395,  0.0997,  0.3800,  0.3146,  0.1888,  0.2542,  0.3800,
            0.1092],
          [ 0.2863,  0.1092,  0.0065, -0.3960, -0.5740, -0.2234, -0.1299,
           -0.2817],
          [-0.1299, -0.2817, -0.1111,  0.0414,  0.1566,  0.3146,  0.1888,
            0.0120],
          [ 0.2578,  0.0120,  0.5412,  0.3019, -0.0896, -0.4805, -0.2997,
           -0.2078],
          [-0.2817, -0.2234, -0.1299, -0.4116, -0.2630,  0.0997,  0.0447,
           -0.1881],
          [ 0.0809,  0.0936,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,
            0.0809]]]], device='cuda:0')
Inside MaxPool2d backward
grad_output size :  torch.Size([1, 1, 8, 8])
ref grad_output  :
  tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.2210, -0.0533,
           -0.0689],
          [-0.1143, -0.4805, -0.5051, -0.2234, -0.1299, -0.4116, -0.5051,
           -0.2234],
          [-0.0395,  0.0997,  0.3800,  0.3146,  0.1888,  0.2542,  0.3800,
            0.1092],
          [ 0.2863,  0.1092,  0.0065, -0.3960, -0.5740, -0.2234, -0.1299,
           -0.2817],
          [-0.1299, -0.2817, -0.1111,  0.0414,  0.1566,  0.3146,  0.1888,
            0.0120],
          [ 0.2578,  0.0120,  0.5412,  0.3019, -0.0896, -0.4805, -0.2997,
           -0.2078],
          [-0.2817, -0.2234, -0.1299, -0.4116, -0.2630,  0.0997,  0.0447,
           -0.1881],
          [ 0.0809,  0.0936,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,
            0.0809]]]], device='cuda:0')
grad_input size :  torch.Size([1, 1, 16, 16])
ref grad_input  : 
 tensor([[[[ 0.2054,  0.0000,  0.2210,  0.0000,  0.0000, -0.0533,  0.0000,
           -0.0689,  0.2054,  0.0000,  0.0000,  0.0000, -0.0533,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.2210,  0.0000,  0.0000,
            0.0000, -0.0689],
          [ 0.0000, -0.1143,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
           -0.2234,  0.0000,  0.0000, -0.4116,  0.0000,  0.0000, -0.5051,
            0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000, -0.4805, -0.5051,  0.0000,  0.0000,
            0.0000, -0.1299,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [-0.0395,  0.0000,  0.0000,  0.0000,  0.0000,  0.3800,  0.0000,
            0.0000,  0.0000,  0.1888,  0.2542,  0.0000,  0.0000,  0.3800,
            0.0000,  0.1092],
          [ 0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000,
            0.3146,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0065,  0.0000,
            0.0000, -0.5740,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000, -0.2817],
          [ 0.0000,  0.2863,  0.1092,  0.0000,  0.0000,  0.0000, -0.3960,
            0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.1111,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.1888,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0414,
            0.0000,  0.0000,  0.1566,  0.0000,  0.3146,  0.0000,  0.0000,
            0.0000,  0.0120],
          [ 0.0000,  0.2578,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2997,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0120,  0.0000,  0.5412,  0.3019,
            0.0000,  0.0000, -0.0896, -0.4805,  0.0000,  0.0000,  0.0000,
            0.0000, -0.2078],
          [-0.2817,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,
           -0.4116,  0.0000, -0.2630,  0.0000,  0.0000,  0.0447,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,
            0.0000, -0.1881],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.1746,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0809,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,
            0.3231,  0.0000,  0.0000,  0.0000,  0.0936,  0.2422,  0.0000,
            0.0000,  0.0809]]]], device='cuda:0')
Inside Conv2d backward
grad_output size :  torch.Size([1, 1, 16, 16])
ref grad_output  :
  [torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function SumBackward0
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledCopyFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::CopyBackwards
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[ 0.2054,  0.0000,  0.2210,  0.0000,  0.0000, -0.0533,  0.0000,
           -0.0689,  0.2054,  0.0000,  0.0000,  0.0000, -0.0533,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.2210,  0.0000,  0.0000,
            0.0000, -0.0689],
          [ 0.0000, -0.1143,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
           -0.2234,  0.0000,  0.0000, -0.4116,  0.0000,  0.0000, -0.5051,
            0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000, -0.4805, -0.5051,  0.0000,  0.0000,
            0.0000, -0.1299,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [-0.0395,  0.0000,  0.0000,  0.0000,  0.0000,  0.3800,  0.0000,
            0.0000,  0.0000,  0.1888,  0.2542,  0.0000,  0.0000,  0.3800,
            0.0000,  0.1092],
          [ 0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000,
            0.3146,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0065,  0.0000,
            0.0000, -0.5740,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000, -0.2817],
          [ 0.0000,  0.2863,  0.1092,  0.0000,  0.0000,  0.0000, -0.3960,
            0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.1111,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.1888,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0414,
            0.0000,  0.0000,  0.1566,  0.0000,  0.3146,  0.0000,  0.0000,
            0.0000,  0.0120],
          [ 0.0000,  0.2578,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2997,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0120,  0.0000,  0.5412,  0.3019,
            0.0000,  0.0000, -0.0896, -0.4805,  0.0000,  0.0000,  0.0000,
            0.0000, -0.2078],
          [-0.2817,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,
           -0.4116,  0.0000, -0.2630,  0.0000,  0.0000,  0.0447,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,
            0.0000, -0.1881],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.1746,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0809,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,
            0.3231,  0.0000,  0.0000,  0.0000,  0.0936,  0.2422,  0.0000,
            0.0000,  0.0809]]]], device='cuda:0')
grad_input size :  torch.Size([1, 1, 16, 16])
ref grad_input  : 
 tensor([[[[ 0.0608,  0.0010,  0.0654, -0.0197, -0.0047, -0.0158, -0.0013,
           -0.0025,  0.0669, -0.0183,  0.0409, -0.0359, -0.0576,  0.0048,
           -0.0128,  0.0098],
          [-0.0659, -0.0382, -0.0264, -0.0691, -0.0024,  0.0116, -0.0278,
            0.0558,  0.0192, -0.1404,  0.0776,  0.1410, -0.1016,  0.0882,
            0.0483,  0.0112],
          [-0.0100, -0.0338, -0.0788, -0.0255,  0.1625,  0.0956, -0.0195,
           -0.0902,  0.0383, -0.0114, -0.1120, -0.0114, -0.1132, -0.1495,
            0.0224, -0.0511],
          [ 0.0005,  0.0324, -0.0062, -0.1864, -0.0364, -0.0088, -0.0819,
            0.0373,  0.0664,  0.0135,  0.0178,  0.0806,  0.0478,  0.0561,
            0.0962,  0.0332],
          [-0.0117,  0.0220, -0.0356,  0.0631,  0.2934,  0.2704,  0.0244,
           -0.0503, -0.0148,  0.1187,  0.0584, -0.0226,  0.0332,  0.1125,
           -0.0243,  0.0323],
          [ 0.0086,  0.0211,  0.0295, -0.0089,  0.0182, -0.0836, -0.0926,
           -0.0131,  0.0616,  0.0789, -0.1144, -0.1035,  0.0354, -0.0581,
           -0.1661,  0.0161],
          [ 0.0530, -0.0158, -0.0914, -0.0519,  0.0006, -0.0714,  0.0695,
           -0.0436, -0.2683,  0.0511, -0.0414,  0.0203,  0.0038,  0.0116,
           -0.0246, -0.0834],
          [ 0.0010,  0.0605,  0.0713,  0.0436, -0.0203, -0.0203, -0.0982,
            0.0096,  0.1249,  0.1795, -0.0195, -0.0719,  0.0831,  0.0139,
           -0.0483,  0.0613],
          [ 0.0014, -0.1205, -0.1851, -0.0091, -0.0097, -0.0429,  0.0902,
            0.1160,  0.0290, -0.0222,  0.0186,  0.0041,  0.0268,  0.0559,
           -0.0146, -0.0017],
          [ 0.0419, -0.0208,  0.0531,  0.0881, -0.0050,  0.0278,  0.0470,
           -0.0037,  0.0137,  0.0463,  0.0135,  0.0376,  0.0228,  0.0157,
           -0.0580,  0.0036],
          [ 0.0225,  0.0763, -0.0207, -0.0017,  0.0979, -0.0188, -0.1542,
           -0.0701, -0.0096, -0.1103,  0.0501, -0.0037, -0.1871,  0.0267,
           -0.0379,  0.0268],
          [ 0.0514, -0.0028, -0.1209,  0.0352,  0.0885,  0.1866, -0.0351,
            0.0314,  0.0214, -0.0313, -0.0845,  0.0377,  0.0589,  0.0853,
           -0.0181, -0.0615],
          [-0.0834,  0.0251, -0.0190, -0.0687,  0.0163, -0.0859, -0.2463,
           -0.2162,  0.0097, -0.0613,  0.1419,  0.1353,  0.0132, -0.0040,
           -0.0441,  0.0718],
          [ 0.0613,  0.0881, -0.0100,  0.0486,  0.0585, -0.0385, -0.0068,
            0.0896,  0.1493,  0.0412,  0.0787, -0.0069, -0.0097, -0.0140,
           -0.0164, -0.0557],
          [ 0.0150, -0.0115,  0.0020,  0.0316, -0.0578, -0.0176,  0.1004,
           -0.0457, -0.0459,  0.0561, -0.0199,  0.0004, -0.0520, -0.0459,
            0.0066,  0.0295],
          [ 0.0071,  0.0240,  0.0010,  0.0489,  0.0633, -0.0216,  0.0282,
            0.0956, -0.0210, -0.0380, -0.0464,  0.0489,  0.0633, -0.0216,
            0.0071,  0.0240]]]], device='cuda:0')

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 2])
maxpool2d139784839957760[0,-1] PI( <3,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 4,7,4,7,>, 
 <internal >, 
 <realidx 4,7,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <3,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 2,3,2,3,>, 
 <internal >, 
 <realidx 2,3,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 2])
##############grad_in in maxp torch.Size([1, 1, 4, 4]) tensor([[[[0., 0., 0., 0.],
          [0., 1., 1., 0.],
          [1., 0., 0., 1.],
          [0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 6])
local last ++ input tensor([[[[ 0.0102, -0.1795,  0.1452,  0.0192,  0.1979,  0.0000],
          [-0.0270,  0.0061,  0.0928, -0.1393,  0.2639,  0.0000],
          [-0.0186, -0.0538, -0.1133, -0.0160,  0.2142,  0.0000],
          [-0.1154, -0.0643,  0.0285,  0.1532,  0.2830,  0.0000],
          [ 0.0180,  0.1928,  0.1059,  0.1624,  0.3463,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 4])
grad_input torch.Size([1, 1, 6, 6])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 5, 5])
##############grad_in in conv2d tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689],
          [ 0.2054, -0.1143, -0.4805, -0.2997, -0.2078],
          [-0.1299, -0.0395,  0.0997,  0.0447, -0.1881],
          [ 0.2422,  0.0809,  0.0936,  0.2422,  0.0809]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([1, 1, 5, 5]) [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689],
          [ 0.2054, -0.1143, -0.4805, -0.2997, -0.2078],
          [-0.1299, -0.0395,  0.0997,  0.0447, -0.1881],
          [ 0.2422,  0.0809,  0.0936,  0.2422,  0.0809]]]], device='cuda:0')
arg size torch.Size([1, 1, 5, 5])
maxpool2d139784840008224[2,-1] PI( <3,3,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 6,15,6,15,>, 
 <internal >, 
 <realidx 6,15,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <3,3,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 5,7,5,7,>, 
 <internal >, 
 <realidx 5,7,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 10, 10]) tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
           -0.0533,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2054,  0.0000,  0.2210,  0.0000,
            0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2997,
            0.0000,  0.0000,  0.0000],
          [ 0.2054,  0.0000,  0.0000, -0.1143, -0.4805,  0.0000,  0.0000,
            0.0000,  0.0000, -0.2078],
          [ 0.0000, -0.1299,  0.0000, -0.0395,  0.0000,  0.0000,  0.0447,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0997,  0.0000,  0.0000,
            0.0000,  0.0000, -0.1881],
          [ 0.0000,  0.0000,  0.0000,  0.0809,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2422,  0.0000,  0.0000,  0.0000,  0.0936,  0.2422,
            0.0000,  0.0000,  0.0809]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 12])
input grad ++ input tensor([[[[0.0301, 0.4871, 0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403,
           0.3959, 0.4847, 0.1842, 0.0000],
          [0.8887, 0.5108, 0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415,
           0.5113, 0.6386, 0.2130, 0.0000],
          [0.7961, 0.7611, 0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038,
           0.2721, 0.6062, 0.0537, 0.0000],
          [0.8566, 0.4174, 0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968,
           0.7223, 0.3911, 0.4032, 0.0000],
          [0.4610, 0.3061, 0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174,
           0.7822, 0.4723, 0.7010, 0.0000],
          [0.7207, 0.0646, 0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602,
           0.6305, 0.3810, 0.0792, 0.0000],
          [0.8765, 0.7574, 0.6586, 0.5807, 0.6805, 0.2658, 0.8027, 0.3509,
           0.2874, 0.1265, 0.7632, 0.0000],
          [0.2677, 0.2504, 0.9013, 0.3453, 0.5861, 0.3731, 0.0134, 0.8629,
           0.5433, 0.8398, 0.5499, 0.0000],
          [0.8863, 0.7527, 0.7229, 0.5971, 0.3233, 0.4857, 0.1235, 0.2438,
           0.1663, 0.7701, 0.6626, 0.0000],
          [0.1891, 0.7058, 0.4846, 0.7204, 0.9606, 0.1930, 0.5967, 0.4595,
           0.0076, 0.3622, 0.3408, 0.0000],
          [0.0746, 0.2861, 0.5125, 0.9475, 0.3673, 0.2317, 0.7979, 0.1667,
           0.0068, 0.8545, 0.8543, 0.0000],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
final torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <3,3,>,
 <otileshape 10,10,>,
 <padding 0,1,0,1,>,
 <inpslidx 5,15,5,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 5,16,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <3,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,12,15,>, 
 <internal >, 
 <realidx 12,15,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 0, 7, 0]
## 7 11 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0132, -0.0040, -0.0441,  0.0718],
          [-0.0097, -0.0140, -0.0164, -0.0557],
          [-0.0520, -0.0459,  0.0066,  0.0295],
          [ 0.0633, -0.0216,  0.0071,  0.0240]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0132, -0.0040, -0.0441,  0.0718],
          [-0.0097, -0.0140, -0.0164, -0.0557],
          [-0.0520, -0.0459,  0.0066,  0.0295],
          [ 0.0633, -0.0216,  0.0071,  0.0240]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 3])
maxpool2d139784839957760[0,-1] PI( <3,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 2,7,4,7,>, 
 <internal >, 
 <realidx 2,7,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <3,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 1,3,2,3,>, 
 <internal >, 
 <realidx 1,3,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 3])
##############grad_in in maxp torch.Size([1, 1, 4, 6]) tensor([[[[0., 1., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0.],
          [0., 1., 1., 0., 0., 1.],
          [0., 0., 0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 8])
local last ++ input tensor([[[[-0.1868, -0.0930,  0.0102, -0.1795,  0.1452,  0.0192,  0.1979,
            0.0000],
          [-0.0527, -0.0636, -0.0270,  0.0061,  0.0928, -0.1393,  0.2639,
            0.0000],
          [-0.1134,  0.1459, -0.0186, -0.0538, -0.1133, -0.0160,  0.2142,
            0.0000],
          [ 0.0626, -0.0325, -0.1154, -0.0643,  0.0285,  0.1532,  0.2830,
            0.0000],
          [ 0.1651,  0.0560,  0.0180,  0.1928,  0.1059,  0.1624,  0.3463,
            0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 6])
grad_input torch.Size([1, 1, 6, 8])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 5, 7])
##############grad_in in conv2d tensor([[[[ 0.0000,  0.2054,  0.0156, -0.0689,  0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817, -0.0180,  0.2210, -0.0533, -0.0689],
          [ 0.0000,  0.4475,  0.3019, -0.0896, -0.4805, -0.2997, -0.2078],
          [ 0.0000, -0.1299, -0.4116, -0.2630,  0.0997,  0.0447, -0.1881],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,  0.0809]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 14])
grad_out size torch.Size([1, 1, 5, 7]) tensor([[[[ 0.0000,  0.2054,  0.0156, -0.0689,  0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817, -0.0180,  0.2210, -0.0533, -0.0689],
          [ 0.0000,  0.4475,  0.3019, -0.0896, -0.4805, -0.2997, -0.2078],
          [ 0.0000, -0.1299, -0.4116, -0.2630,  0.0997,  0.0447, -0.1881],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,  0.0809]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 5, 7])
maxpool2d139784840008224[2,-1] PI( <3,2,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 2,15,6,15,>, 
 <internal >, 
 <realidx 2,15,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <3,2,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 3,6,5,7,>, 
 <internal >, 
 <realidx 3,6,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 10, 14]) [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[ 0.0000,  0.0000,  0.0000,  0.2054,  0.0000,  0.0000, -0.0689,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0156,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.1299,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000, -0.0533,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000, -0.2817,  0.0000,  0.0000,
           -0.0180,  0.0000,  0.2210,  0.0000,  0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000, -0.2997,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.4475,  0.3019,  0.0000,  0.0000,
           -0.0896, -0.4805,  0.0000,  0.0000,  0.0000,  0.0000, -0.2078],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.4116,  0.0000,
           -0.2630,  0.0000,  0.0000,  0.0447,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.1299,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000, -0.1881],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.1746,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.2422,  0.0000,  0.0000,  0.3231,  0.0000,
            0.0000,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,  0.0809]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 16])
input grad ++ input tensor([[[[0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871, 0.4789, 0.3246,
           0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847, 0.1842, 0.0000],
          [0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108, 0.3217, 0.3740,
           0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386, 0.2130, 0.0000],
          [0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611, 0.4545, 0.5432,
           0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062, 0.0537, 0.0000],
          [0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174, 0.7127, 0.8116,
           0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911, 0.4032, 0.0000],
          [0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061, 0.4559, 0.9460,
           0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723, 0.7010, 0.0000],
          [0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646, 0.3198, 0.3305,
           0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810, 0.0792, 0.0000],
          [0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574, 0.6586, 0.5807,
           0.6805, 0.2658, 0.8027, 0.3509, 0.2874, 0.1265, 0.7632, 0.0000],
          [0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504, 0.9013, 0.3453,
           0.5861, 0.3731, 0.0134, 0.8629, 0.5433, 0.8398, 0.5499, 0.0000],
          [0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527, 0.7229, 0.5971,
           0.3233, 0.4857, 0.1235, 0.2438, 0.1663, 0.7701, 0.6626, 0.0000],
          [0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058, 0.4846, 0.7204,
           0.9606, 0.1930, 0.5967, 0.4595, 0.0076, 0.3622, 0.3408, 0.0000],
          [0.3020, 0.1664, 0.8589, 0.4218, 0.0746, 0.2861, 0.5125, 0.9475,
           0.3673, 0.2317, 0.7979, 0.1667, 0.0068, 0.8545, 0.8543, 0.0000],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 14])
final torch.Size([1, 1, 12, 16])
padding info :: [0, 1, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <3,2,>,
 <otileshape 14,10,>,
 <padding 0,1,0,1,>,
 <inpslidx 1,15,5,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 1,16,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <3,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,12,15,>, 
 <internal >, 
 <realidx 8,11,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 4, 7, 0]
## 7 11 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0097, -0.0613,  0.1419,  0.1353],
          [ 0.1493,  0.0412,  0.0787, -0.0069],
          [-0.0459,  0.0561, -0.0199,  0.0004],
          [-0.0210, -0.0380, -0.0464,  0.0489]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0097, -0.0613,  0.1419,  0.1353],
          [ 0.1493,  0.0412,  0.0787, -0.0069],
          [-0.0459,  0.0561, -0.0199,  0.0004],
          [-0.0210, -0.0380, -0.0464,  0.0489]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 3])
maxpool2d139784839957760[0,-1] PI( <3,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,5,4,7,>, 
 <internal >, 
 <realidx 0,5,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <3,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,2,2,3,>, 
 <internal >, 
 <realidx 0,2,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 3])
##############grad_in in maxp torch.Size([1, 1, 4, 6]) tensor([[[[0., 1., 0., 1., 0., 0.],
          [0., 0., 0., 0., 0., 1.],
          [1., 0., 0., 1., 1., 0.],
          [0., 0., 0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 8])
local last ++ input tensor([[[[ 0.0000,  0.2616, -0.1868, -0.0930,  0.0102, -0.1795,  0.1452,
            0.0192],
          [ 0.0000, -0.0453, -0.0527, -0.0636, -0.0270,  0.0061,  0.0928,
           -0.1393],
          [ 0.0000, -0.0609, -0.1134,  0.1459, -0.0186, -0.0538, -0.1133,
           -0.0160],
          [ 0.0000, -0.1342,  0.0626, -0.0325, -0.1154, -0.0643,  0.0285,
            0.1532],
          [ 0.0000,  0.1362,  0.1651,  0.0560,  0.0180,  0.1928,  0.1059,
            0.1624],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 6])
grad_input torch.Size([1, 1, 6, 8])
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 5, 7])
##############grad_in in conv2d tensor([[[[ 0.2054,  0.0156,  0.1365,  0.0156, -0.0689,  0.0000,  0.0000],
          [-0.1299, -0.2817, -0.3533, -0.2817, -0.0180,  0.0156, -0.0689],
          [ 0.2578,  0.0120,  0.5412,  0.3019, -0.0896, -0.3506, -0.2234],
          [-0.2817, -0.2234, -0.1299, -0.4116, -0.2630, -0.1425,  0.0936],
          [ 0.0809,  0.0936,  0.2422,  0.3231,  0.1746,  0.0936,  0.0000]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 14])
grad_out size torch.Size([1, 1, 5, 7]) tensor([[[[ 0.2054,  0.0156,  0.1365,  0.0156, -0.0689,  0.0000,  0.0000],
          [-0.1299, -0.2817, -0.3533, -0.2817, -0.0180,  0.0156, -0.0689],
          [ 0.2578,  0.0120,  0.5412,  0.3019, -0.0896, -0.3506, -0.2234],
          [-0.2817, -0.2234, -0.1299, -0.4116, -0.2630, -0.1425,  0.0936],
          [ 0.0809,  0.0936,  0.2422,  0.3231,  0.1746,  0.0936,  0.0000]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 5, 7])
maxpool2d139784840008224[2,-1] PI( <3,1,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 0,13,6,15,>, 
 <internal >, 
 <realidx 0,13,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <3,1,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 1,4,5,7,>, 
 <internal >, 
 <realidx 1,4,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 10, 14]) [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.1365,  0.0000,
            0.0000, -0.0689,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2054,  0.0156,  0.0000,  0.0000,  0.0000,  0.0156,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.3533,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2817,
            0.0000,  0.0000, -0.0180,  0.0000,  0.0156,  0.0000,  0.0000],
          [ 0.0000,  0.2578,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0120,  0.0000,  0.5412,  0.3019,
            0.0000,  0.0000, -0.0896, -0.3506,  0.0000,  0.0000,  0.0000],
          [-0.2817,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,
           -0.4116,  0.0000, -0.2630,  0.0000,  0.0000,  0.0936,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000,  0.0000,  0.0000, -0.1425,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.1746,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0809,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,
            0.3231,  0.0000,  0.0000,  0.0000,  0.0936,  0.0000,  0.0000]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 16])
input grad ++ input tensor([[[[0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810],
          [0.0000, 0.2825, 0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574,
           0.6586, 0.5807, 0.6805, 0.2658, 0.8027, 0.3509, 0.2874, 0.1265],
          [0.0000, 0.9492, 0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504,
           0.9013, 0.3453, 0.5861, 0.3731, 0.0134, 0.8629, 0.5433, 0.8398],
          [0.0000, 0.3231, 0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527,
           0.7229, 0.5971, 0.3233, 0.4857, 0.1235, 0.2438, 0.1663, 0.7701],
          [0.0000, 0.7617, 0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058,
           0.4846, 0.7204, 0.9606, 0.1930, 0.5967, 0.4595, 0.0076, 0.3622],
          [0.0000, 0.6396, 0.3020, 0.1664, 0.8589, 0.4218, 0.0746, 0.2861,
           0.5125, 0.9475, 0.3673, 0.2317, 0.7979, 0.1667, 0.0068, 0.8545],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 14])
final torch.Size([1, 1, 12, 16])
padding info :: [1, 0, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <3,1,>,
 <otileshape 14,10,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,14,5,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,14,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <3,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,12,15,>, 
 <internal >, 
 <realidx 4,7,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [4, 7, 7, 0]
## 7 11 4 8
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0163, -0.0859, -0.2463, -0.2162],
          [ 0.0585, -0.0385, -0.0068,  0.0896],
          [-0.0578, -0.0176,  0.1004, -0.0457],
          [ 0.0633, -0.0216,  0.0282,  0.0956]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0163, -0.0859, -0.2463, -0.2162],
          [ 0.0585, -0.0385, -0.0068,  0.0896],
          [-0.0578, -0.0176,  0.1004, -0.0457],
          [ 0.0633, -0.0216,  0.0282,  0.0956]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 2])
maxpool2d139784839957760[0,-1] PI( <3,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,3,4,7,>, 
 <internal >, 
 <realidx 0,3,4,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <3,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,1,2,3,>, 
 <internal >, 
 <realidx 0,1,2,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 2])
##############grad_in in maxp torch.Size([1, 1, 4, 4]) tensor([[[[0., 1., 0., 1.],
          [0., 0., 0., 0.],
          [1., 0., 0., 1.],
          [0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 6])
local last ++ input tensor([[[[ 0.0000,  0.2616, -0.1868, -0.0930,  0.0102, -0.1795],
          [ 0.0000, -0.0453, -0.0527, -0.0636, -0.0270,  0.0061],
          [ 0.0000, -0.0609, -0.1134,  0.1459, -0.0186, -0.0538],
          [ 0.0000, -0.1342,  0.0626, -0.0325, -0.1154, -0.0643],
          [ 0.0000,  0.1362,  0.1651,  0.0560,  0.0180,  0.1928],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 4])
grad_input torch.Size([1, 1, 6, 6])
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 5, 5])
##############grad_in in conv2d tensor([[[[ 0.2054,  0.0156,  0.1365,  0.0156, -0.0689],
          [-0.1299, -0.2817, -0.3533, -0.2817, -0.2234],
          [ 0.2578,  0.0120,  0.5412,  0.0965,  0.0247],
          [-0.2817, -0.2234, -0.1299, -0.2817, -0.2234],
          [ 0.0809,  0.0936,  0.2422,  0.0809,  0.0936]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([1, 1, 5, 5]) tensor([[[[ 0.2054,  0.0156,  0.1365,  0.0156, -0.0689],
          [-0.1299, -0.2817, -0.3533, -0.2817, -0.2234],
          [ 0.2578,  0.0120,  0.5412,  0.0965,  0.0247],
          [-0.2817, -0.2234, -0.1299, -0.2817, -0.2234],
          [ 0.0809,  0.0936,  0.2422,  0.0809,  0.0936]]]], device='cuda:0')
arg size torch.Size([1, 1, 5, 5])
maxpool2d139784840008224[2,-1] PI( <3,0,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 0,9,6,15,>, 
 <internal >, 
 <realidx 0,9,6,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <3,0,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,5,7,>, 
 <internal >, 
 <realidx 0,2,5,7,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 10, 10]) [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.1365,  0.0000,
            0.0000, -0.0689,  0.0000],
          [ 0.0000,  0.2054,  0.0156,  0.0000,  0.0000,  0.0000,  0.0156,
            0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.3533,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2817,
            0.0000,  0.0000, -0.2234],
          [ 0.0000,  0.2578,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0120,  0.0000,  0.5412,  0.0965,
            0.0000,  0.0000,  0.0247],
          [-0.2817,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,
           -0.2817,  0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0936],
          [ 0.0000,  0.0809,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,
            0.0809,  0.0000,  0.0000]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 12])
input grad ++ input tensor([[[[0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552],
          [0.0000, 0.2825, 0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574,
           0.6586, 0.5807, 0.6805, 0.2658],
          [0.0000, 0.9492, 0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504,
           0.9013, 0.3453, 0.5861, 0.3731],
          [0.0000, 0.3231, 0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527,
           0.7229, 0.5971, 0.3233, 0.4857],
          [0.0000, 0.7617, 0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058,
           0.4846, 0.7204, 0.9606, 0.1930],
          [0.0000, 0.6396, 0.3020, 0.1664, 0.8589, 0.4218, 0.0746, 0.2861,
           0.5125, 0.9475, 0.3673, 0.2317],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
final torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <3,0,>,
 <otileshape 10,10,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,10,5,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,10,5,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <3,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,12,15,>, 
 <internal >, 
 <realidx 0,3,12,15,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [0, 7, 7, 0]
## 7 11 0 4
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[-0.0834,  0.0251, -0.0190, -0.0687],
          [ 0.0613,  0.0881, -0.0100,  0.0486],
          [ 0.0150, -0.0115,  0.0020,  0.0316],
          [ 0.0071,  0.0240,  0.0010,  0.0489]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[-0.0834,  0.0251, -0.0190, -0.0687],
          [ 0.0613,  0.0881, -0.0100,  0.0486],
          [ 0.0150, -0.0115,  0.0020,  0.0316],
          [ 0.0071,  0.0240,  0.0010,  0.0489]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 2])
maxpool2d139784839957760[0,-1] PI( <2,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 4,7,2,7,>, 
 <internal >, 
 <realidx 4,7,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <2,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 2,3,1,3,>, 
 <internal >, 
 <realidx 2,3,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 3, 2])
##############grad_in in maxp torch.Size([1, 1, 6, 4]) tensor([[[[0., 0., 0., 0.],
          [1., 0., 0., 1.],
          [0., 0., 0., 0.],
          [0., 1., 1., 0.],
          [1., 0., 0., 1.],
          [0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 6])
local last ++ input tensor([[[[-0.0934,  0.0316, -0.2226, -0.0536,  0.2108,  0.0000],
          [ 0.0229, -0.0348, -0.0757,  0.0915,  0.2399,  0.0000],
          [ 0.0102, -0.1795,  0.1452,  0.0192,  0.1979,  0.0000],
          [-0.0270,  0.0061,  0.0928, -0.1393,  0.2639,  0.0000],
          [-0.0186, -0.0538, -0.1133, -0.0160,  0.2142,  0.0000],
          [-0.1154, -0.0643,  0.0285,  0.1532,  0.2830,  0.0000],
          [ 0.0180,  0.1928,  0.1059,  0.1624,  0.3463,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 4])
grad_input torch.Size([1, 1, 8, 6])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 7, 5])
##############grad_in in conv2d tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.2054,  0.0156, -0.0689,  0.2054,  0.0156],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.2817],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.0120],
          [ 0.2054, -0.1143, -0.4805, -0.2997, -0.2078],
          [-0.1299, -0.0395,  0.0997,  0.0447, -0.1881],
          [ 0.2422,  0.0809,  0.0936,  0.2422,  0.0809]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 10])
grad_out size torch.Size([1, 1, 7, 5]) tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.2054,  0.0156, -0.0689,  0.2054,  0.0156],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.2817],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.0120],
          [ 0.2054, -0.1143, -0.4805, -0.2997, -0.2078],
          [-0.1299, -0.0395,  0.0997,  0.0447, -0.1881],
          [ 0.2422,  0.0809,  0.0936,  0.2422,  0.0809]]]], device='cuda:0')
arg size torch.Size([1, 1, 7, 5])
maxpool2d139784840008224[2,-1] PI( <2,3,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 6,15,2,15,>, 
 <internal >, 
 <realidx 6,15,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <2,3,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 5,7,3,6,>, 
 <internal >, 
 <realidx 5,7,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 10]) [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0156, -0.0689,  0.0000,  0.0000,
            0.2054,  0.0000,  0.0156],
          [ 0.0000,  0.2054,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.2817,  0.0000,  0.0000,  0.0000, -0.1299,
            0.0000,  0.0000, -0.2817],
          [-0.1299,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.1888,  0.0000,  0.0000],
          [ 0.2422,  0.0000,  0.0000,  0.2863,  0.0000,  0.3146,  0.0000,
            0.0000,  0.0000,  0.0120],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2997,
            0.0000,  0.0000,  0.0000],
          [ 0.2054,  0.0000,  0.0000, -0.1143, -0.4805,  0.0000,  0.0000,
            0.0000,  0.0000, -0.2078],
          [ 0.0000, -0.1299,  0.0000, -0.0395,  0.0000,  0.0000,  0.0447,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0997,  0.0000,  0.0000,
            0.0000,  0.0000, -0.1881],
          [ 0.0000,  0.0000,  0.0000,  0.0809,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2422,  0.0000,  0.0000,  0.0000,  0.0936,  0.2422,
            0.0000,  0.0000,  0.0809]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 12])
input grad ++ input tensor([[[[0.3206, 0.8757, 0.3248, 0.5328, 0.0976, 0.2924, 0.5549, 0.0552,
           0.1835, 0.9455, 0.4595, 0.0000],
          [0.1115, 0.0599, 0.8539, 0.4650, 0.1804, 0.2216, 0.0170, 0.3912,
           0.7597, 0.5847, 0.2733, 0.0000],
          [0.2960, 0.2940, 0.1646, 0.9675, 0.4206, 0.2998, 0.4080, 0.8522,
           0.0996, 0.2627, 0.1972, 0.0000],
          [0.8289, 0.5218, 0.0453, 0.3091, 0.7183, 0.8472, 0.7443, 0.8717,
           0.7518, 0.8820, 0.5423, 0.0000],
          [0.0301, 0.4871, 0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403,
           0.3959, 0.4847, 0.1842, 0.0000],
          [0.8887, 0.5108, 0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415,
           0.5113, 0.6386, 0.2130, 0.0000],
          [0.7961, 0.7611, 0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038,
           0.2721, 0.6062, 0.0537, 0.0000],
          [0.8566, 0.4174, 0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968,
           0.7223, 0.3911, 0.4032, 0.0000],
          [0.4610, 0.3061, 0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174,
           0.7822, 0.4723, 0.7010, 0.0000],
          [0.7207, 0.0646, 0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602,
           0.6305, 0.3810, 0.0792, 0.0000],
          [0.8765, 0.7574, 0.6586, 0.5807, 0.6805, 0.2658, 0.8027, 0.3509,
           0.2874, 0.1265, 0.7632, 0.0000],
          [0.2677, 0.2504, 0.9013, 0.3453, 0.5861, 0.3731, 0.0134, 0.8629,
           0.5433, 0.8398, 0.5499, 0.0000],
          [0.8863, 0.7527, 0.7229, 0.5971, 0.3233, 0.4857, 0.1235, 0.2438,
           0.1663, 0.7701, 0.6626, 0.0000],
          [0.1891, 0.7058, 0.4846, 0.7204, 0.9606, 0.1930, 0.5967, 0.4595,
           0.0076, 0.3622, 0.3408, 0.0000],
          [0.0746, 0.2861, 0.5125, 0.9475, 0.3673, 0.2317, 0.7979, 0.1667,
           0.0068, 0.8545, 0.8543, 0.0000],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 10])
final torch.Size([1, 1, 16, 12])
padding info :: [0, 1, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <2,3,>,
 <otileshape 10,14,>,
 <padding 0,1,0,1,>,
 <inpslidx 5,15,1,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 5,16,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <2,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,8,11,>, 
 <internal >, 
 <realidx 12,15,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 0, 7, 4]
## 7 11 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0268,  0.0559, -0.0146, -0.0017],
          [ 0.0228,  0.0157, -0.0580,  0.0036],
          [-0.1871,  0.0267, -0.0379,  0.0268],
          [ 0.0589,  0.0853, -0.0181, -0.0615]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0268,  0.0559, -0.0146, -0.0017],
          [ 0.0228,  0.0157, -0.0580,  0.0036],
          [-0.1871,  0.0267, -0.0379,  0.0268],
          [ 0.0589,  0.0853, -0.0181, -0.0615]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 3])
maxpool2d139784839957760[0,-1] PI( <2,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 2,7,2,7,>, 
 <internal >, 
 <realidx 2,7,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <2,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 1,3,1,3,>, 
 <internal >, 
 <realidx 1,3,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 3, 3])
##############grad_in in maxp torch.Size([1, 1, 6, 6]) tensor([[[[0., 0., 0., 0., 0., 0.],
          [0., 1., 1., 0., 0., 1.],
          [0., 1., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0.],
          [0., 1., 1., 0., 0., 1.],
          [0., 0., 0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 8])
local last ++ input tensor([[[[ 0.0042, -0.0539, -0.0934,  0.0316, -0.2226, -0.0536,  0.2108,
            0.0000],
          [-0.0121,  0.1641,  0.0229, -0.0348, -0.0757,  0.0915,  0.2399,
            0.0000],
          [-0.1868, -0.0930,  0.0102, -0.1795,  0.1452,  0.0192,  0.1979,
            0.0000],
          [-0.0527, -0.0636, -0.0270,  0.0061,  0.0928, -0.1393,  0.2639,
            0.0000],
          [-0.1134,  0.1459, -0.0186, -0.0538, -0.1133, -0.0160,  0.2142,
            0.0000],
          [ 0.0626, -0.0325, -0.1154, -0.0643,  0.0285,  0.1532,  0.2830,
            0.0000],
          [ 0.1651,  0.0560,  0.0180,  0.1928,  0.1059,  0.1624,  0.3463,
            0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 6])
grad_input torch.Size([1, 1, 8, 8])
padding info :: [0, 1, 0, 1]
new grad_input torch.Size([1, 1, 7, 7])
##############grad_in in conv2d tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.0156],
          [ 0.0000,  0.0755, -0.3960, -0.5740, -0.2234, -0.1299, -0.2817],
          [ 0.0000,  0.1123,  0.0414,  0.1566,  0.3146,  0.1888,  0.0120],
          [ 0.0000,  0.4475,  0.3019, -0.0896, -0.4805, -0.2997, -0.2078],
          [ 0.0000, -0.1299, -0.4116, -0.2630,  0.0997,  0.0447, -0.1881],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,  0.0809]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 14])
grad_out size torch.Size([1, 1, 7, 7]) tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.0156],
          [ 0.0000,  0.0755, -0.3960, -0.5740, -0.2234, -0.1299, -0.2817],
          [ 0.0000,  0.1123,  0.0414,  0.1566,  0.3146,  0.1888,  0.0120],
          [ 0.0000,  0.4475,  0.3019, -0.0896, -0.4805, -0.2997, -0.2078],
          [ 0.0000, -0.1299, -0.4116, -0.2630,  0.0997,  0.0447, -0.1881],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,  0.0809]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 7, 7])
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
maxpool2d139784840008224[2,-1] PI( <2,2,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 2,15,2,15,>, 
 <internal >, 
 <realidx 2,15,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <2,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 3,6,3,6,>, 
 <internal >, 
 <realidx 3,6,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 14]) tensor([[[[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2054,  0.0000,  0.0000,  0.0000,
           -0.0533, -0.0689,  0.0000,  0.0000,  0.2054,  0.0000,  0.0156],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.2210,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0755,  0.0000,  0.0000, -0.5740,
            0.0000,  0.0000,  0.0000, -0.1299,  0.0000,  0.0000, -0.2817],
          [ 0.0000,  0.0000,  0.0000,  0.0000, -0.3960,  0.0000,  0.0000,
            0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.1123,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.1888,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0414,  0.0000,  0.0000,
            0.1566,  0.0000,  0.3146,  0.0000,  0.0000,  0.0000,  0.0120],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000, -0.2997,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.4475,  0.3019,  0.0000,  0.0000,
           -0.0896, -0.4805,  0.0000,  0.0000,  0.0000,  0.0000, -0.2078],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.4116,  0.0000,
           -0.2630,  0.0000,  0.0000,  0.0447,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.1299,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000, -0.1881],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.1746,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.2422,  0.0000,  0.0000,  0.3231,  0.0000,
            0.0000,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,  0.0809]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 16])
input grad ++ input tensor([[[[0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757, 0.3248, 0.5328,
           0.0976, 0.2924, 0.5549, 0.0552, 0.1835, 0.9455, 0.4595, 0.0000],
          [0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599, 0.8539, 0.4650,
           0.1804, 0.2216, 0.0170, 0.3912, 0.7597, 0.5847, 0.2733, 0.0000],
          [0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940, 0.1646, 0.9675,
           0.4206, 0.2998, 0.4080, 0.8522, 0.0996, 0.2627, 0.1972, 0.0000],
          [0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218, 0.0453, 0.3091,
           0.7183, 0.8472, 0.7443, 0.8717, 0.7518, 0.8820, 0.5423, 0.0000],
          [0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871, 0.4789, 0.3246,
           0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847, 0.1842, 0.0000],
          [0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108, 0.3217, 0.3740,
           0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386, 0.2130, 0.0000],
          [0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611, 0.4545, 0.5432,
           0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062, 0.0537, 0.0000],
          [0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174, 0.7127, 0.8116,
           0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911, 0.4032, 0.0000],
          [0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061, 0.4559, 0.9460,
           0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723, 0.7010, 0.0000],
          [0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646, 0.3198, 0.3305,
           0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810, 0.0792, 0.0000],
          [0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574, 0.6586, 0.5807,
           0.6805, 0.2658, 0.8027, 0.3509, 0.2874, 0.1265, 0.7632, 0.0000],
          [0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504, 0.9013, 0.3453,
           0.5861, 0.3731, 0.0134, 0.8629, 0.5433, 0.8398, 0.5499, 0.0000],
          [0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527, 0.7229, 0.5971,
           0.3233, 0.4857, 0.1235, 0.2438, 0.1663, 0.7701, 0.6626, 0.0000],
          [0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058, 0.4846, 0.7204,
           0.9606, 0.1930, 0.5967, 0.4595, 0.0076, 0.3622, 0.3408, 0.0000],
          [0.3020, 0.1664, 0.8589, 0.4218, 0.0746, 0.2861, 0.5125, 0.9475,
           0.3673, 0.2317, 0.7979, 0.1667, 0.0068, 0.8545, 0.8543, 0.0000],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 14])
final torch.Size([1, 1, 16, 16])
padding info :: [0, 1, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <2,2,>,
 <otileshape 14,14,>,
 <padding 0,1,0,1,>,
 <inpslidx 1,15,1,15,>, 
 <internal 1,0,1,0,>, 
 <realidx 1,16,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <2,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,8,11,>, 
 <internal >, 
 <realidx 8,11,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 4, 7, 4]
## 7 11 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0290, -0.0222,  0.0186,  0.0041],
          [ 0.0137,  0.0463,  0.0135,  0.0376],
          [-0.0096, -0.1103,  0.0501, -0.0037],
          [ 0.0214, -0.0313, -0.0845,  0.0377]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0290, -0.0222,  0.0186,  0.0041],
          [ 0.0137,  0.0463,  0.0135,  0.0376],
          [-0.0096, -0.1103,  0.0501, -0.0037],
          [ 0.0214, -0.0313, -0.0845,  0.0377]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 3])
maxpool2d139784839957760[0,-1] PI( <2,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,5,2,7,>, 
 <internal >, 
 <realidx 0,5,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <2,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,1,3,>, 
 <internal >, 
 <realidx 0,2,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 3, 3])
##############grad_in in maxp torch.Size([1, 1, 6, 6]) tensor([[[[1., 0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0.],
          [0., 1., 0., 1., 0., 0.],
          [0., 0., 0., 0., 0., 1.],
          [1., 0., 0., 1., 1., 0.],
          [0., 0., 0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 8])
local last ++ input tensor([[[[ 0.0000, -0.0051,  0.0042, -0.0539, -0.0934,  0.0316, -0.2226,
           -0.0536],
          [ 0.0000, -0.0833, -0.0121,  0.1641,  0.0229, -0.0348, -0.0757,
            0.0915],
          [ 0.0000,  0.2616, -0.1868, -0.0930,  0.0102, -0.1795,  0.1452,
            0.0192],
          [ 0.0000, -0.0453, -0.0527, -0.0636, -0.0270,  0.0061,  0.0928,
           -0.1393],
          [ 0.0000, -0.0609, -0.1134,  0.1459, -0.0186, -0.0538, -0.1133,
           -0.0160],
          [ 0.0000, -0.1342,  0.0626, -0.0325, -0.1154, -0.0643,  0.0285,
            0.1532],
          [ 0.0000,  0.1362,  0.1651,  0.0560,  0.0180,  0.1928,  0.1059,
            0.1624],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 6])
grad_input torch.Size([1, 1, 8, 8])
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 7, 7])
##############grad_in in conv2d tensor([[[[ 0.0156, -0.0689,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [-0.2817, -0.2234,  0.2054,  0.2210, -0.0533, -0.0689,  0.0000],
          [ 0.2863,  0.1092,  0.0065, -0.3960, -0.5740, -0.2234,  0.0000],
          [-0.1299, -0.2817, -0.1111,  0.0414,  0.1566,  0.1092, -0.0689],
          [ 0.2578,  0.0120,  0.5412,  0.3019, -0.0896, -0.3506, -0.2234],
          [-0.2817, -0.2234, -0.1299, -0.4116, -0.2630, -0.1425,  0.0936],
          [ 0.0809,  0.0936,  0.2422,  0.3231,  0.1746,  0.0936,  0.0000]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 14])
grad_out size torch.Size([1, 1, 7, 7]) tensor([[[[ 0.0156, -0.0689,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [-0.2817, -0.2234,  0.2054,  0.2210, -0.0533, -0.0689,  0.0000],
          [ 0.2863,  0.1092,  0.0065, -0.3960, -0.5740, -0.2234,  0.0000],
          [-0.1299, -0.2817, -0.1111,  0.0414,  0.1566,  0.1092, -0.0689],
          [ 0.2578,  0.0120,  0.5412,  0.3019, -0.0896, -0.3506, -0.2234],
          [-0.2817, -0.2234, -0.1299, -0.4116, -0.2630, -0.1425,  0.0936],
          [ 0.0809,  0.0936,  0.2422,  0.3231,  0.1746,  0.0936,  0.0000]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 7, 7])
maxpool2d139784840008224[2,-1] PI( <2,1,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 0,13,2,15,>, 
 <internal >, 
 <realidx 0,13,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <2,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 1,4,3,6,>, 
 <internal >, 
 <realidx 1,4,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 14]) tensor([[[[ 0.0000,  0.0156,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.0689,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [-0.2817,  0.0000,  0.0000,  0.0000,  0.0000,  0.2054,  0.0000,
            0.0000,  0.0000, -0.0533, -0.0689,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,  0.0000,
            0.2210,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0065,  0.0000,
            0.0000, -0.5740,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2863,  0.1092,  0.0000,  0.0000,  0.0000, -0.3960,
            0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.1111,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0414,
            0.0000,  0.0000,  0.1566,  0.0000,  0.1092,  0.0000,  0.0000],
          [ 0.0000,  0.2578,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0120,  0.0000,  0.5412,  0.3019,
            0.0000,  0.0000, -0.0896, -0.3506,  0.0000,  0.0000,  0.0000],
          [-0.2817,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,
           -0.4116,  0.0000, -0.2630,  0.0000,  0.0000,  0.0936,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000,  0.0000,  0.0000, -0.1425,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.1746,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0809,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,
            0.3231,  0.0000,  0.0000,  0.0000,  0.0936,  0.0000,  0.0000]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 16])
input grad ++ input tensor([[[[0.0000, 0.2391, 0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757,
           0.3248, 0.5328, 0.0976, 0.2924, 0.5549, 0.0552, 0.1835, 0.9455],
          [0.0000, 0.0630, 0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599,
           0.8539, 0.4650, 0.1804, 0.2216, 0.0170, 0.3912, 0.7597, 0.5847],
          [0.0000, 0.5532, 0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940,
           0.1646, 0.9675, 0.4206, 0.2998, 0.4080, 0.8522, 0.0996, 0.2627],
          [0.0000, 0.9263, 0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218,
           0.0453, 0.3091, 0.7183, 0.8472, 0.7443, 0.8717, 0.7518, 0.8820],
          [0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810],
          [0.0000, 0.2825, 0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574,
           0.6586, 0.5807, 0.6805, 0.2658, 0.8027, 0.3509, 0.2874, 0.1265],
          [0.0000, 0.9492, 0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504,
           0.9013, 0.3453, 0.5861, 0.3731, 0.0134, 0.8629, 0.5433, 0.8398],
          [0.0000, 0.3231, 0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527,
           0.7229, 0.5971, 0.3233, 0.4857, 0.1235, 0.2438, 0.1663, 0.7701],
          [0.0000, 0.7617, 0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058,
           0.4846, 0.7204, 0.9606, 0.1930, 0.5967, 0.4595, 0.0076, 0.3622],
          [0.0000, 0.6396, 0.3020, 0.1664, 0.8589, 0.4218, 0.0746, 0.2861,
           0.5125, 0.9475, 0.3673, 0.2317, 0.7979, 0.1667, 0.0068, 0.8545],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 14])
final torch.Size([1, 1, 16, 16])
padding info :: [1, 0, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <2,1,>,
 <otileshape 14,14,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,14,1,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,14,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <2,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,8,11,>, 
 <internal >, 
 <realidx 4,7,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [4, 7, 7, 4]
## 7 11 4 8
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[-0.0097, -0.0429,  0.0902,  0.1160],
          [-0.0050,  0.0278,  0.0470, -0.0037],
          [ 0.0979, -0.0188, -0.1542, -0.0701],
          [ 0.0885,  0.1866, -0.0351,  0.0314]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[-0.0097, -0.0429,  0.0902,  0.1160],
          [-0.0050,  0.0278,  0.0470, -0.0037],
          [ 0.0979, -0.0188, -0.1542, -0.0701],
          [ 0.0885,  0.1866, -0.0351,  0.0314]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 2])
maxpool2d139784839957760[0,-1] PI( <2,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,3,2,7,>, 
 <internal >, 
 <realidx 0,3,2,7,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
bk-maxpool2d139784839957760[3,-1] PI( <2,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,1,1,3,>, 
 <internal >, 
 <realidx 0,1,1,3,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 3, 2])
##############grad_in in maxp torch.Size([1, 1, 6, 4]) tensor([[[[1., 0., 0., 0.],
          [0., 0., 0., 1.],
          [0., 1., 0., 1.],
          [0., 0., 0., 0.],
          [1., 0., 0., 1.],
          [0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 6])
local last ++ input tensor([[[[ 0.0000, -0.0051,  0.0042, -0.0539, -0.0934,  0.0316],
          [ 0.0000, -0.0833, -0.0121,  0.1641,  0.0229, -0.0348],
          [ 0.0000,  0.2616, -0.1868, -0.0930,  0.0102, -0.1795],
          [ 0.0000, -0.0453, -0.0527, -0.0636, -0.0270,  0.0061],
          [ 0.0000, -0.0609, -0.1134,  0.1459, -0.0186, -0.0538],
          [ 0.0000, -0.1342,  0.0626, -0.0325, -0.1154, -0.0643],
          [ 0.0000,  0.1362,  0.1651,  0.0560,  0.0180,  0.1928],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 4])
grad_input torch.Size([1, 1, 8, 6])
padding info :: [1, 0, 0, 1]
new grad_input torch.Size([1, 1, 7, 5])
##############grad_in in conv2d tensor([[[[ 0.0156, -0.0689,  0.0000,  0.0000,  0.0000],
          [-0.2817, -0.2234,  0.2054,  0.0156, -0.0689],
          [ 0.2863,  0.1092,  0.0065, -0.2661, -0.2923],
          [-0.1299, -0.2817, -0.1111, -0.2008, -0.1298],
          [ 0.2578,  0.0120,  0.5412,  0.0965,  0.0247],
          [-0.2817, -0.2234, -0.1299, -0.2817, -0.2234],
          [ 0.0809,  0.0936,  0.2422,  0.0809,  0.0936]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 10])
grad_out size torch.Size([1, 1, 7, 5]) tensor([[[[ 0.0156, -0.0689,  0.0000,  0.0000,  0.0000],
          [-0.2817, -0.2234,  0.2054,  0.0156, -0.0689],
          [ 0.2863,  0.1092,  0.0065, -0.2661, -0.2923],
          [-0.1299, -0.2817, -0.1111, -0.2008, -0.1298],
          [ 0.2578,  0.0120,  0.5412,  0.0965,  0.0247],
          [-0.2817, -0.2234, -0.1299, -0.2817, -0.2234],
          [ 0.0809,  0.0936,  0.2422,  0.0809,  0.0936]]]], device='cuda:0')
arg size torch.Size([1, 1, 7, 5])
maxpool2d139784840008224[2,-1] PI( <2,0,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 0,9,2,15,>, 
 <internal >, 
 <realidx 0,9,2,15,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <2,0,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 0,2,3,6,>, 
 <internal >, 
 <realidx 0,2,3,6,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 10]) tensor([[[[ 0.0000,  0.0156,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.0689,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [-0.2817,  0.0000,  0.0000,  0.0000,  0.0000,  0.2054,  0.0000,
            0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0156,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0065,  0.0000,
            0.0000, -0.2923,  0.0000],
          [ 0.0000,  0.2863,  0.1092,  0.0000,  0.0000,  0.0000, -0.2661,
            0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.1111,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2008,
            0.0000,  0.0000, -0.1298],
          [ 0.0000,  0.2578,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0120,  0.0000,  0.5412,  0.0965,
            0.0000,  0.0000,  0.0247],
          [-0.2817,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,
           -0.2817,  0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0936],
          [ 0.0000,  0.0809,  0.0000,  0.0936,  0.2422,  0.0000,  0.0000,
            0.0809,  0.0000,  0.0000]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 12])
input grad ++ input tensor([[[[0.0000, 0.2391, 0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757,
           0.3248, 0.5328, 0.0976, 0.2924],
          [0.0000, 0.0630, 0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599,
           0.8539, 0.4650, 0.1804, 0.2216],
          [0.0000, 0.5532, 0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940,
           0.1646, 0.9675, 0.4206, 0.2998],
          [0.0000, 0.9263, 0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218,
           0.0453, 0.3091, 0.7183, 0.8472],
          [0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552],
          [0.0000, 0.2825, 0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574,
           0.6586, 0.5807, 0.6805, 0.2658],
          [0.0000, 0.9492, 0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504,
           0.9013, 0.3453, 0.5861, 0.3731],
          [0.0000, 0.3231, 0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527,
           0.7229, 0.5971, 0.3233, 0.4857],
          [0.0000, 0.7617, 0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058,
           0.4846, 0.7204, 0.9606, 0.1930],
          [0.0000, 0.6396, 0.3020, 0.1664, 0.8589, 0.4218, 0.0746, 0.2861,
           0.5125, 0.9475, 0.3673, 0.2317],
          [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 10])
final torch.Size([1, 1, 16, 12])
padding info :: [1, 0, 0, 1]
f_info :: conv2d139784840008080[3,0] PI( <2,0,>,
 <otileshape 10,14,>,
 <padding 1,0,0,1,>,
 <inpslidx 0,10,1,15,>, 
 <internal 0,1,1,0,>, 
 <realidx -1,10,1,16,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <2,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,8,11,>, 
 <internal >, 
 <realidx 0,3,8,11,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [0, 7, 7, 4]
## 7 11 0 4
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0014, -0.1205, -0.1851, -0.0091],
          [ 0.0419, -0.0208,  0.0531,  0.0881],
          [ 0.0225,  0.0763, -0.0207, -0.0017],
          [ 0.0514, -0.0028, -0.1209,  0.0352]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0014, -0.1205, -0.1851, -0.0091],
          [ 0.0419, -0.0208,  0.0531,  0.0881],
          [ 0.0225,  0.0763, -0.0207, -0.0017],
          [ 0.0514, -0.0028, -0.1209,  0.0352]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 2])
maxpool2d139784839957760[0,-1] PI( <1,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 4,7,0,5,>, 
 <internal >, 
 <realidx 4,7,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <1,3,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 2,3,0,2,>, 
 <internal >, 
 <realidx 2,3,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
torch.Size([1, 1, 3, 2])
##############grad_in in maxp torch.Size([1, 1, 6, 4]) tensor([[[[0., 0., 0., 0.],
          [0., 1., 1., 0.],
          [0., 0., 0., 0.],
          [1., 0., 0., 1.],
          [0., 0., 0., 0.],
          [0., 1., 1., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 6])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00],
          [ 2.1459e-04,  1.0698e-01,  4.4508e-02, -1.5019e-02,  3.2468e-01,
            0.0000e+00],
          [-9.3394e-02,  3.1558e-02, -2.2256e-01, -5.3553e-02,  2.1080e-01,
            0.0000e+00],
          [ 2.2906e-02, -3.4774e-02, -7.5701e-02,  9.1495e-02,  2.3986e-01,
            0.0000e+00],
          [ 1.0214e-02, -1.7946e-01,  1.4518e-01,  1.9164e-02,  1.9789e-01,
            0.0000e+00],
          [-2.7029e-02,  6.0850e-03,  9.2840e-02, -1.3930e-01,  2.6387e-01,
            0.0000e+00],
          [-1.8555e-02, -5.3826e-02, -1.1334e-01, -1.6004e-02,  2.1416e-01,
            0.0000e+00],
          [-1.1543e-01, -6.4286e-02,  2.8537e-02,  1.5321e-01,  2.8305e-01,
            0.0000e+00]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 4])
grad_input torch.Size([1, 1, 8, 6])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 7, 5])
##############grad_in in conv2d tensor([[[[ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2054,  0.2578,  0.2542,  0.3800,  0.1092],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.2817],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.0120],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 10])
grad_out size torch.Size([1, 1, 7, 5]) tensor([[[[ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2054,  0.2578,  0.2542,  0.3800,  0.1092],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.2817],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.0120],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936]]]], device='cuda:0')
arg size torch.Size([1, 1, 7, 5])
maxpool2d139784840008224[2,-1] PI( <1,3,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 6,15,0,13,>, 
 <internal >, 
 <realidx 6,15,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <1,3,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 5,7,1,4,>, 
 <internal >, 
 <realidx 5,7,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 10]) tensor([[[[ 0.0000,  0.0000,  0.2054,  0.0000,  0.0000,  0.0000, -0.0533,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.2210,  0.0000,
            0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000, -0.4116,  0.0000,  0.0000,
           -0.5051,  0.0000, -0.2234],
          [ 0.0000,  0.0000, -0.1299,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2578,  0.2542,  0.0000,  0.0000,
            0.3800,  0.0000,  0.1092],
          [ 0.0000,  0.2054,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.2817,  0.0000,  0.0000,  0.0000, -0.1299,
            0.0000,  0.0000, -0.2817],
          [-0.1299,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.1888,  0.0000,  0.0000],
          [ 0.2422,  0.0000,  0.0000,  0.2863,  0.0000,  0.3146,  0.0000,
            0.0000,  0.0000,  0.0120],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.5051,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.1299, -0.4116,  0.0000,  0.0000,
            0.0000,  0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.2422,  0.0000,  0.0000,  0.1746,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.3231,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0936]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 12])
input grad ++ input tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000],
          [0.9451, 0.4356, 0.7358, 0.6450, 0.1825, 0.2210, 0.4242, 0.0272,
           0.1741, 0.9797, 0.2962, 0.0000],
          [0.3206, 0.8757, 0.3248, 0.5328, 0.0976, 0.2924, 0.5549, 0.0552,
           0.1835, 0.9455, 0.4595, 0.0000],
          [0.1115, 0.0599, 0.8539, 0.4650, 0.1804, 0.2216, 0.0170, 0.3912,
           0.7597, 0.5847, 0.2733, 0.0000],
          [0.2960, 0.2940, 0.1646, 0.9675, 0.4206, 0.2998, 0.4080, 0.8522,
           0.0996, 0.2627, 0.1972, 0.0000],
          [0.8289, 0.5218, 0.0453, 0.3091, 0.7183, 0.8472, 0.7443, 0.8717,
           0.7518, 0.8820, 0.5423, 0.0000],
          [0.0301, 0.4871, 0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403,
           0.3959, 0.4847, 0.1842, 0.0000],
          [0.8887, 0.5108, 0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415,
           0.5113, 0.6386, 0.2130, 0.0000],
          [0.7961, 0.7611, 0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038,
           0.2721, 0.6062, 0.0537, 0.0000],
          [0.8566, 0.4174, 0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968,
           0.7223, 0.3911, 0.4032, 0.0000],
          [0.4610, 0.3061, 0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174,
           0.7822, 0.4723, 0.7010, 0.0000],
          [0.7207, 0.0646, 0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602,
           0.6305, 0.3810, 0.0792, 0.0000],
          [0.8765, 0.7574, 0.6586, 0.5807, 0.6805, 0.2658, 0.8027, 0.3509,
           0.2874, 0.1265, 0.7632, 0.0000],
          [0.2677, 0.2504, 0.9013, 0.3453, 0.5861, 0.3731, 0.0134, 0.8629,
           0.5433, 0.8398, 0.5499, 0.0000],
          [0.8863, 0.7527, 0.7229, 0.5971, 0.3233, 0.4857, 0.1235, 0.2438,
           0.1663, 0.7701, 0.6626, 0.0000],
          [0.1891, 0.7058, 0.4846, 0.7204, 0.9606, 0.1930, 0.5967, 0.4595,
           0.0076, 0.3622, 0.3408, 0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 10])
final torch.Size([1, 1, 16, 12])
padding info :: [0, 1, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <1,3,>,
 <otileshape 10,14,>,
 <padding 0,1,1,0,>,
 <inpslidx 5,15,0,14,>, 
 <internal 1,0,0,1,>, 
 <realidx 5,16,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <1,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,4,7,>, 
 <internal >, 
 <realidx 12,15,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 0, 4, 7]
## 4 8 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0332,  0.1125, -0.0243,  0.0323],
          [ 0.0354, -0.0581, -0.1661,  0.0161],
          [ 0.0038,  0.0116, -0.0246, -0.0834],
          [ 0.0831,  0.0139, -0.0483,  0.0613]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0332,  0.1125, -0.0243,  0.0323],
          [ 0.0354, -0.0581, -0.1661,  0.0161],
          [ 0.0038,  0.0116, -0.0246, -0.0834],
          [ 0.0831,  0.0139, -0.0483,  0.0613]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 3])
maxpool2d139784839957760[0,-1] PI( <1,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 2,7,0,5,>, 
 <internal >, 
 <realidx 2,7,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
bk-maxpool2d139784839957760[3,-1] PI( <1,2,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 1,3,0,2,>, 
 <internal >, 
 <realidx 1,3,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 3, 3])
##############grad_in in maxp torch.Size([1, 1, 6, 6]) tensor([[[[0., 0., 0., 0., 0., 0.],
          [1., 0., 0., 1., 1., 0.],
          [0., 0., 0., 0., 0., 0.],
          [0., 1., 1., 0., 0., 1.],
          [0., 1., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 8])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00,  0.0000e+00,  0.0000e+00],
          [ 1.1024e-01, -9.6908e-02,  2.1459e-04,  1.0698e-01,  4.4508e-02,
           -1.5019e-02,  3.2468e-01,  0.0000e+00],
          [ 4.2475e-03, -5.3886e-02, -9.3394e-02,  3.1558e-02, -2.2256e-01,
           -5.3553e-02,  2.1080e-01,  0.0000e+00],
          [-1.2125e-02,  1.6407e-01,  2.2906e-02, -3.4774e-02, -7.5701e-02,
            9.1495e-02,  2.3986e-01,  0.0000e+00],
          [-1.8681e-01, -9.3000e-02,  1.0214e-02, -1.7946e-01,  1.4518e-01,
            1.9164e-02,  1.9789e-01,  0.0000e+00],
          [-5.2671e-02, -6.3598e-02, -2.7029e-02,  6.0850e-03,  9.2840e-02,
           -1.3930e-01,  2.6387e-01,  0.0000e+00],
          [-1.1343e-01,  1.4585e-01, -1.8555e-02, -5.3826e-02, -1.1334e-01,
           -1.6004e-02,  2.1416e-01,  0.0000e+00],
          [ 6.2633e-02, -3.2508e-02, -1.1543e-01, -6.4286e-02,  2.8537e-02,
            1.5321e-01,  2.8305e-01,  0.0000e+00]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 6])
grad_input torch.Size([1, 1, 8, 8])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 7, 7])
##############grad_in in conv2d tensor([[[[ 0.2054,  0.0156, -0.0689,  0.2054,  0.2210, -0.0533, -0.0689],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.2542,  0.3800,  0.1092],
          [ 0.0000,  0.0755, -0.3960, -0.5740, -0.2234, -0.1299, -0.2817],
          [ 0.0000,  0.1123,  0.0414,  0.1566,  0.3146,  0.1888,  0.0120],
          [ 0.0000,  0.2422,  0.0809, -0.0363, -0.4116, -0.5051, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.2422,  0.3231,  0.1746,  0.0936]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 14])
grad_out size torch.Size([1, 1, 7, 7]) tensor([[[[ 0.2054,  0.0156, -0.0689,  0.2054,  0.2210, -0.0533, -0.0689],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.2542,  0.3800,  0.1092],
          [ 0.0000,  0.0755, -0.3960, -0.5740, -0.2234, -0.1299, -0.2817],
          [ 0.0000,  0.1123,  0.0414,  0.1566,  0.3146,  0.1888,  0.0120],
          [ 0.0000,  0.2422,  0.0809, -0.0363, -0.4116, -0.5051, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.2422,  0.3231,  0.1746,  0.0936]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 7, 7])
maxpool2d139784840008224[2,-1] PI( <1,2,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 2,15,0,13,>, 
 <internal >, 
 <realidx 2,15,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <1,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 3,6,1,4,>, 
 <internal >, 
 <realidx 3,6,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 14]) tensor([[[[ 0.2054,  0.0000,  0.0000,  0.0156,  0.0000, -0.0689,  0.2054,
            0.0000,  0.0000,  0.0000, -0.0533,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.2210,  0.0000,  0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,
            0.0000, -0.4116,  0.0000,  0.0000, -0.5051,  0.0000, -0.2234],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000,  0.0000, -0.1299,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2863,  0.0000,  0.0000,  0.0000,
            0.1888,  0.2542,  0.0000,  0.0000,  0.3800,  0.0000,  0.1092],
          [ 0.2422,  0.0000,  0.0000,  0.0000,  0.0000,  0.3146,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0755,  0.0000,  0.0000, -0.5740,
            0.0000,  0.0000,  0.0000, -0.1299,  0.0000,  0.0000, -0.2817],
          [ 0.0000,  0.0000,  0.0000,  0.0000, -0.3960,  0.0000,  0.0000,
            0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.1123,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.1888,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0414,  0.0000,  0.0000,
            0.1566,  0.0000,  0.3146,  0.0000,  0.0000,  0.0000,  0.0120],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000, -0.5051,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2422,  0.0809,  0.0000,  0.0000,
           -0.0363, -0.4116,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.2422,  0.0000,  0.0000,  0.1746,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.3231,  0.0000,  0.0000,  0.0000,  0.0000,  0.0936]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 16])
input grad ++ input [torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
          [0.5849, 0.5644, 0.0752, 0.0581, 0.9451, 0.4356, 0.7358, 0.6450,
           0.1825, 0.2210, 0.4242, 0.0272, 0.1741, 0.9797, 0.2962, 0.0000],
          [0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757, 0.3248, 0.5328,
           0.0976, 0.2924, 0.5549, 0.0552, 0.1835, 0.9455, 0.4595, 0.0000],
          [0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599, 0.8539, 0.4650,
           0.1804, 0.2216, 0.0170, 0.3912, 0.7597, 0.5847, 0.2733, 0.0000],
          [0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940, 0.1646, 0.9675,
           0.4206, 0.2998, 0.4080, 0.8522, 0.0996, 0.2627, 0.1972, 0.0000],
          [0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218, 0.0453, 0.3091,
           0.7183, 0.8472, 0.7443, 0.8717, 0.7518, 0.8820, 0.5423, 0.0000],
          [0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871, 0.4789, 0.3246,
           0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847, 0.1842, 0.0000],
          [0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108, 0.3217, 0.3740,
           0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386, 0.2130, 0.0000],
          [0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611, 0.4545, 0.5432,
           0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062, 0.0537, 0.0000],
          [0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174, 0.7127, 0.8116,
           0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911, 0.4032, 0.0000],
          [0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061, 0.4559, 0.9460,
           0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723, 0.7010, 0.0000],
          [0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646, 0.3198, 0.3305,
           0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810, 0.0792, 0.0000],
          [0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574, 0.6586, 0.5807,
           0.6805, 0.2658, 0.8027, 0.3509, 0.2874, 0.1265, 0.7632, 0.0000],
          [0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504, 0.9013, 0.3453,
           0.5861, 0.3731, 0.0134, 0.8629, 0.5433, 0.8398, 0.5499, 0.0000],
          [0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527, 0.7229, 0.5971,
           0.3233, 0.4857, 0.1235, 0.2438, 0.1663, 0.7701, 0.6626, 0.0000],
          [0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058, 0.4846, 0.7204,
           0.9606, 0.1930, 0.5967, 0.4595, 0.0076, 0.3622, 0.3408, 0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 14])
final torch.Size([1, 1, 16, 16])
padding info :: [0, 1, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <1,2,>,
 <otileshape 14,14,>,
 <padding 0,1,1,0,>,
 <inpslidx 1,15,0,14,>, 
 <internal 1,0,0,1,>, 
 <realidx 1,16,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <1,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,4,7,>, 
 <internal >, 
 <realidx 8,11,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 4, 4, 7]
## 4 8 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[-0.0148,  0.1187,  0.0584, -0.0226],
          [ 0.0616,  0.0789, -0.1144, -0.1035],
          [-0.2683,  0.0511, -0.0414,  0.0203],
          [ 0.1249,  0.1795, -0.0195, -0.0719]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[-0.0148,  0.1187,  0.0584, -0.0226],
          [ 0.0616,  0.0789, -0.1144, -0.1035],
          [-0.2683,  0.0511, -0.0414,  0.0203],
          [ 0.1249,  0.1795, -0.0195, -0.0719]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 3])
maxpool2d139784839957760[0,-1] PI( <1,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,5,0,5,>, 
 <internal >, 
 <realidx 0,5,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <1,1,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,0,2,>, 
 <internal >, 
 <realidx 0,2,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 3, 3])
##############grad_in in maxp torch.Size([1, 1, 6, 6]) tensor([[[[0., 0., 0., 0., 0., 0.],
          [0., 1., 1., 0., 0., 1.],
          [1., 0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0.],
          [0., 1., 0., 1., 0., 0.],
          [0., 0., 0., 0., 0., 1.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 8])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00,  0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  1.3905e-01,  1.1024e-01, -9.6908e-02,  2.1459e-04,
            1.0698e-01,  4.4508e-02, -1.5019e-02],
          [ 0.0000e+00, -5.1112e-03,  4.2475e-03, -5.3886e-02, -9.3394e-02,
            3.1558e-02, -2.2256e-01, -5.3553e-02],
          [ 0.0000e+00, -8.3262e-02, -1.2125e-02,  1.6407e-01,  2.2906e-02,
           -3.4774e-02, -7.5701e-02,  9.1495e-02],
          [ 0.0000e+00,  2.6156e-01, -1.8681e-01, -9.3000e-02,  1.0214e-02,
           -1.7946e-01,  1.4518e-01,  1.9164e-02],
          [ 0.0000e+00, -4.5282e-02, -5.2671e-02, -6.3598e-02, -2.7029e-02,
            6.0850e-03,  9.2840e-02, -1.3930e-01],
          [ 0.0000e+00, -6.0908e-02, -1.1343e-01,  1.4585e-01, -1.8555e-02,
           -5.3826e-02, -1.1334e-01, -1.6004e-02],
          [ 0.0000e+00, -1.3423e-01,  6.2633e-02, -3.2508e-02, -1.1543e-01,
           -6.4286e-02,  2.8537e-02,  1.5321e-01]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 6])
grad_input torch.Size([1, 1, 8, 8])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 7, 7])
##############grad_in in conv2d tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.0156, -0.0689],
          [-0.1143, -0.4805, -0.5051, -0.2234, -0.1299, -0.2817, -0.2234],
          [-0.0395,  0.0997,  0.3800,  0.3146,  0.1888,  0.0120,  0.0936],
          [ 0.2863,  0.1092,  0.0065, -0.3960, -0.5740, -0.2234,  0.0000],
          [-0.1299, -0.2817, -0.1111,  0.0414,  0.1566,  0.1092, -0.0689],
          [ 0.2422,  0.0809,  0.3358,  0.0809, -0.0363, -0.2817, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.2422,  0.0809,  0.0936]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 14])
grad_out size torch.Size([1, 1, 7, 7]) tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.0156, -0.0689],
          [-0.1143, -0.4805, -0.5051, -0.2234, -0.1299, -0.2817, -0.2234],
          [-0.0395,  0.0997,  0.3800,  0.3146,  0.1888,  0.0120,  0.0936],
          [ 0.2863,  0.1092,  0.0065, -0.3960, -0.5740, -0.2234,  0.0000],
          [-0.1299, -0.2817, -0.1111,  0.0414,  0.1566,  0.1092, -0.0689],
          [ 0.2422,  0.0809,  0.3358,  0.0809, -0.0363, -0.2817, -0.2234],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.2422,  0.0809,  0.0936]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 7, 7])
maxpool2d139784840008224[2,-1] PI( <1,1,>,
 <otileshape 7,7,>,
 <padding >,
 <inpslidx 0,13,0,13,>, 
 <internal >, 
 <realidx 0,13,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <1,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 1,4,1,4,>, 
 <internal >, 
 <realidx 1,4,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 14]) [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
tensor([[[[ 0.2054,  0.0000,  0.2210,  0.0000,  0.0000, -0.0533,  0.0000,
           -0.0689,  0.2054,  0.0000,  0.0000,  0.0000, -0.0689,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0156,  0.0000,  0.0000],
          [ 0.0000, -0.1143,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
           -0.2234,  0.0000,  0.0000, -0.2817,  0.0000,  0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000, -0.4805, -0.5051,  0.0000,  0.0000,
            0.0000, -0.1299,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [-0.0395,  0.0000,  0.0000,  0.0000,  0.0000,  0.3800,  0.0000,
            0.0000,  0.0000,  0.1888,  0.0120,  0.0000,  0.0000,  0.0936],
          [ 0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000,
            0.3146,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0065,  0.0000,
            0.0000, -0.5740,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.2863,  0.1092,  0.0000,  0.0000,  0.0000, -0.3960,
            0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.1111,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0414,
            0.0000,  0.0000,  0.1566,  0.0000,  0.1092,  0.0000,  0.0000],
          [ 0.0000,  0.2422,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0809,  0.0000,  0.3358,  0.0809,
            0.0000,  0.0000, -0.0363, -0.2817,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.2422,  0.0000,  0.0000,  0.0936,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0809,  0.0000,  0.0000,  0.0000]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 16])
input grad ++ input tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
          [0.0000, 0.9511, 0.5849, 0.5644, 0.0752, 0.0581, 0.9451, 0.4356,
           0.7358, 0.6450, 0.1825, 0.2210, 0.4242, 0.0272, 0.1741, 0.9797],
          [0.0000, 0.2391, 0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757,
           0.3248, 0.5328, 0.0976, 0.2924, 0.5549, 0.0552, 0.1835, 0.9455],
          [0.0000, 0.0630, 0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599,
           0.8539, 0.4650, 0.1804, 0.2216, 0.0170, 0.3912, 0.7597, 0.5847],
          [0.0000, 0.5532, 0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940,
           0.1646, 0.9675, 0.4206, 0.2998, 0.4080, 0.8522, 0.0996, 0.2627],
          [0.0000, 0.9263, 0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218,
           0.0453, 0.3091, 0.7183, 0.8472, 0.7443, 0.8717, 0.7518, 0.8820],
          [0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810],
          [0.0000, 0.2825, 0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574,
           0.6586, 0.5807, 0.6805, 0.2658, 0.8027, 0.3509, 0.2874, 0.1265],
          [0.0000, 0.9492, 0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504,
           0.9013, 0.3453, 0.5861, 0.3731, 0.0134, 0.8629, 0.5433, 0.8398],
          [0.0000, 0.3231, 0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527,
           0.7229, 0.5971, 0.3233, 0.4857, 0.1235, 0.2438, 0.1663, 0.7701],
          [0.0000, 0.7617, 0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058,
           0.4846, 0.7204, 0.9606, 0.1930, 0.5967, 0.4595, 0.0076, 0.3622]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 14])
final torch.Size([1, 1, 16, 16])
padding info :: [1, 0, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <1,1,>,
 <otileshape 14,14,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,14,0,14,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,14,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <1,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,4,7,>, 
 <internal >, 
 <realidx 4,7,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [4, 7, 4, 7]
## 4 8 4 8
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.2934,  0.2704,  0.0244, -0.0503],
          [ 0.0182, -0.0836, -0.0926, -0.0131],
          [ 0.0006, -0.0714,  0.0695, -0.0436],
          [-0.0203, -0.0203, -0.0982,  0.0096]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.2934,  0.2704,  0.0244, -0.0503],
          [ 0.0182, -0.0836, -0.0926, -0.0131],
          [ 0.0006, -0.0714,  0.0695, -0.0436],
          [-0.0203, -0.0203, -0.0982,  0.0096]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 6, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 3, 2])
maxpool2d139784839957760[0,-1] PI( <1,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,3,0,5,>, 
 <internal >, 
 <realidx 0,3,0,5,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <1,0,>,
 <otileshape 2,3,>,
 <padding >,
 <inpslidx 0,1,0,2,>, 
 <internal >, 
 <realidx 0,1,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 3, 2])
##############grad_in in maxp torch.Size([1, 1, 6, 4]) tensor([[[[0., 0., 0., 0.],
          [0., 1., 1., 0.],
          [1., 0., 0., 0.],
          [0., 0., 0., 1.],
          [0., 1., 0., 1.],
          [0., 0., 0., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 8, 6])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00],
          [ 0.0000e+00,  1.3905e-01,  1.1024e-01, -9.6908e-02,  2.1459e-04,
            1.0698e-01],
          [ 0.0000e+00, -5.1112e-03,  4.2475e-03, -5.3886e-02, -9.3394e-02,
            3.1558e-02],
          [ 0.0000e+00, -8.3262e-02, -1.2125e-02,  1.6407e-01,  2.2906e-02,
           -3.4774e-02],
          [ 0.0000e+00,  2.6156e-01, -1.8681e-01, -9.3000e-02,  1.0214e-02,
           -1.7946e-01],
          [ 0.0000e+00, -4.5282e-02, -5.2671e-02, -6.3598e-02, -2.7029e-02,
            6.0850e-03],
          [ 0.0000e+00, -6.0908e-02, -1.1343e-01,  1.4585e-01, -1.8555e-02,
           -5.3826e-02],
          [ 0.0000e+00, -1.3423e-01,  6.2633e-02, -3.2508e-02, -1.1543e-01,
           -6.4286e-02]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 6, 4])
grad_input torch.Size([1, 1, 8, 6])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 7, 5])
##############grad_in in conv2d [torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.0000],
          [-0.1143, -0.4805, -0.5051, -0.2234,  0.0000],
          [-0.0395,  0.0997,  0.3800,  0.1092, -0.0689],
          [ 0.2863,  0.1092,  0.0065, -0.2661, -0.2923],
          [-0.1299, -0.2817, -0.1111, -0.2008, -0.1298],
          [ 0.2422,  0.0809,  0.3358,  0.0809,  0.0936],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 14, 10])
grad_out size torch.Size([1, 1, 7, 5]) tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.0000],
          [-0.1143, -0.4805, -0.5051, -0.2234,  0.0000],
          [-0.0395,  0.0997,  0.3800,  0.1092, -0.0689],
          [ 0.2863,  0.1092,  0.0065, -0.2661, -0.2923],
          [-0.1299, -0.2817, -0.1111, -0.2008, -0.1298],
          [ 0.2422,  0.0809,  0.3358,  0.0809,  0.0936],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000]]]], device='cuda:0')
arg size torch.Size([1, 1, 7, 5])
maxpool2d139784840008224[2,-1] PI( <1,0,>,
 <otileshape 5,7,>,
 <padding >,
 <inpslidx 0,9,0,13,>, 
 <internal >, 
 <realidx 0,9,0,13,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <1,0,>,
 <otileshape 3,4,>,
 <padding >,
 <inpslidx 0,2,1,4,>, 
 <internal >, 
 <realidx 0,2,1,4,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 14, 10]) tensor([[[[ 0.2054,  0.0000,  0.2210,  0.0000,  0.0000, -0.0533,  0.0000,
           -0.0689,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1143,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
           -0.2234,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.4805, -0.5051,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [-0.0395,  0.0000,  0.0000,  0.0000,  0.0000,  0.3800,  0.0000,
            0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000,
            0.1092,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0065,  0.0000,
            0.0000, -0.2923,  0.0000],
          [ 0.0000,  0.2863,  0.1092,  0.0000,  0.0000,  0.0000, -0.2661,
            0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000, -0.1111,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2008,
            0.0000,  0.0000, -0.1298],
          [ 0.0000,  0.2422,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0809,  0.0000,  0.3358,  0.0809,
            0.0000,  0.0000,  0.0936],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 16, 12])
input grad ++ input tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000],
          [0.0000, 0.9511, 0.5849, 0.5644, 0.0752, 0.0581, 0.9451, 0.4356,
           0.7358, 0.6450, 0.1825, 0.2210],
          [0.0000, 0.2391, 0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757,
           0.3248, 0.5328, 0.0976, 0.2924],
          [0.0000, 0.0630, 0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599,
           0.8539, 0.4650, 0.1804, 0.2216],
          [0.0000, 0.5532, 0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940,
           0.1646, 0.9675, 0.4206, 0.2998],
          [0.0000, 0.9263, 0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218,
           0.0453, 0.3091, 0.7183, 0.8472],
          [0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552],
          [0.0000, 0.2825, 0.0983, 0.8545, 0.5568, 0.7818, 0.8765, 0.7574,
           0.6586, 0.5807, 0.6805, 0.2658],
          [0.0000, 0.9492, 0.7677, 0.9214, 0.7455, 0.2544, 0.2677, 0.2504,
           0.9013, 0.3453, 0.5861, 0.3731],
          [0.0000, 0.3231, 0.6968, 0.8700, 0.2477, 0.4227, 0.8863, 0.7527,
           0.7229, 0.5971, 0.3233, 0.4857],
          [0.0000, 0.7617, 0.2918, 0.4959, 0.0571, 0.7912, 0.1891, 0.7058,
           0.4846, 0.7204, 0.9606, 0.1930]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 14, 10])
final torch.Size([1, 1, 16, 12])
padding info :: [1, 0, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <1,0,>,
 <otileshape 10,14,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,10,0,14,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,10,-1,14,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <1,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,4,7,>, 
 <internal >, 
 <realidx 0,3,4,7,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [0, 7, 4, 7]
## 4 8 0 4
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[-0.0117,  0.0220, -0.0356,  0.0631],
          [ 0.0086,  0.0211,  0.0295, -0.0089],
          [ 0.0530, -0.0158, -0.0914, -0.0519],
          [ 0.0010,  0.0605,  0.0713,  0.0436]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[-0.0117,  0.0220, -0.0356,  0.0631],
          [ 0.0086,  0.0211,  0.0295, -0.0089],
          [ 0.0530, -0.0158, -0.0914, -0.0519],
          [ 0.0010,  0.0605,  0.0713,  0.0436]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 2])
maxpool2d139784839957760[0,-1] PI( <0,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 4,7,0,3,>, 
 <internal >, 
 <realidx 4,7,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <0,3,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 2,3,0,1,>, 
 <internal >, 
 <realidx 2,3,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 2])
##############grad_in in maxp torch.Size([1, 1, 4, 4]) tensor([[[[0., 0., 0., 0.],
          [0., 1., 1., 0.],
          [0., 0., 0., 0.],
          [1., 0., 0., 1.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 6])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00],
          [ 2.1459e-04,  1.0698e-01,  4.4508e-02, -1.5019e-02,  3.2468e-01,
            0.0000e+00],
          [-9.3394e-02,  3.1558e-02, -2.2256e-01, -5.3553e-02,  2.1080e-01,
            0.0000e+00],
          [ 2.2906e-02, -3.4774e-02, -7.5701e-02,  9.1495e-02,  2.3986e-01,
            0.0000e+00],
          [ 1.0214e-02, -1.7946e-01,  1.4518e-01,  1.9164e-02,  1.9789e-01,
            0.0000e+00],
          [-2.7029e-02,  6.0850e-03,  9.2840e-02, -1.3930e-01,  2.6387e-01,
            0.0000e+00]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 4])
grad_input torch.Size([1, 1, 6, 6])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 5, 5])
##############grad_in in conv2d [torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
tensor([[[[ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2054,  0.2578,  0.2542,  0.3800,  0.1092],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.2817],
          [ 0.2422,  0.0809,  0.0936,  0.2422,  0.0809]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([1, 1, 5, 5]) tensor([[[[ 0.0000,  0.2054,  0.2210, -0.0533, -0.0689],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2054,  0.2578,  0.2542,  0.3800,  0.1092],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.2817],
          [ 0.2422,  0.0809,  0.0936,  0.2422,  0.0809]]]], device='cuda:0')
arg size torch.Size([1, 1, 5, 5])
maxpool2d139784840008224[2,-1] PI( <0,3,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 6,15,0,9,>, 
 <internal >, 
 <realidx 6,15,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <0,3,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 5,7,0,2,>, 
 <internal >, 
 <realidx 5,7,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 10, 10]) tensor([[[[ 0.0000,  0.0000,  0.2054,  0.0000,  0.0000,  0.0000, -0.0533,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.2210,  0.0000,
            0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000, -0.4116,  0.0000,  0.0000,
           -0.5051,  0.0000, -0.2234],
          [ 0.0000,  0.0000, -0.1299,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2578,  0.2542,  0.0000,  0.0000,
            0.3800,  0.0000,  0.1092],
          [ 0.0000,  0.2054,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000, -0.2817,  0.0000,  0.0000,  0.0000, -0.1299,
            0.0000,  0.0000, -0.2817],
          [-0.1299,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.2422,  0.0000,  0.0000],
          [ 0.2422,  0.0000,  0.0000,  0.0809,  0.0000,  0.0936,  0.0000,
            0.0000,  0.0000,  0.0809]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 12])
input grad ++ input tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000],
          [0.9451, 0.4356, 0.7358, 0.6450, 0.1825, 0.2210, 0.4242, 0.0272,
           0.1741, 0.9797, 0.2962, 0.0000],
          [0.3206, 0.8757, 0.3248, 0.5328, 0.0976, 0.2924, 0.5549, 0.0552,
           0.1835, 0.9455, 0.4595, 0.0000],
          [0.1115, 0.0599, 0.8539, 0.4650, 0.1804, 0.2216, 0.0170, 0.3912,
           0.7597, 0.5847, 0.2733, 0.0000],
          [0.2960, 0.2940, 0.1646, 0.9675, 0.4206, 0.2998, 0.4080, 0.8522,
           0.0996, 0.2627, 0.1972, 0.0000],
          [0.8289, 0.5218, 0.0453, 0.3091, 0.7183, 0.8472, 0.7443, 0.8717,
           0.7518, 0.8820, 0.5423, 0.0000],
          [0.0301, 0.4871, 0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403,
           0.3959, 0.4847, 0.1842, 0.0000],
          [0.8887, 0.5108, 0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415,
           0.5113, 0.6386, 0.2130, 0.0000],
          [0.7961, 0.7611, 0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038,
           0.2721, 0.6062, 0.0537, 0.0000],
          [0.8566, 0.4174, 0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968,
           0.7223, 0.3911, 0.4032, 0.0000],
          [0.4610, 0.3061, 0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174,
           0.7822, 0.4723, 0.7010, 0.0000],
          [0.7207, 0.0646, 0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602,
           0.6305, 0.3810, 0.0792, 0.0000]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
final torch.Size([1, 1, 12, 12])
padding info :: [0, 1, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <0,3,>,
 <otileshape 10,10,>,
 <padding 0,1,1,0,>,
 <inpslidx 5,15,0,10,>, 
 <internal 1,0,0,1,>, 
 <realidx 5,16,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <0,3,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 12,15,0,3,>, 
 <internal >, 
 <realidx 12,15,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 0, 0, 7]
## 0 4 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[-0.0576,  0.0048, -0.0128,  0.0098],
          [-0.1016,  0.0882,  0.0483,  0.0112],
          [-0.1132, -0.1495,  0.0224, -0.0511],
          [ 0.0478,  0.0561,  0.0962,  0.0332]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[-0.0576,  0.0048, -0.0128,  0.0098],
          [-0.1016,  0.0882,  0.0483,  0.0112],
          [-0.1132, -0.1495,  0.0224, -0.0511],
          [ 0.0478,  0.0561,  0.0962,  0.0332]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 3])
maxpool2d139784839957760[0,-1] PI( <0,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 2,7,0,3,>, 
 <internal >, 
 <realidx 2,7,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <0,2,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 1,3,0,1,>, 
 <internal >, 
 <realidx 1,3,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 3])
##############grad_in in maxp torch.Size([1, 1, 4, 6]) tensor([[[[0., 0., 0., 0., 0., 0.],
          [1., 0., 0., 1., 1., 0.],
          [0., 0., 0., 0., 0., 0.],
          [0., 1., 1., 0., 0., 1.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 8])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00,  0.0000e+00,  0.0000e+00],
          [ 1.1024e-01, -9.6908e-02,  2.1459e-04,  1.0698e-01,  4.4508e-02,
           -1.5019e-02,  3.2468e-01,  0.0000e+00],
          [ 4.2475e-03, -5.3886e-02, -9.3394e-02,  3.1558e-02, -2.2256e-01,
           -5.3553e-02,  2.1080e-01,  0.0000e+00],
          [-1.2125e-02,  1.6407e-01,  2.2906e-02, -3.4774e-02, -7.5701e-02,
            9.1495e-02,  2.3986e-01,  0.0000e+00],
          [-1.8681e-01, -9.3000e-02,  1.0214e-02, -1.7946e-01,  1.4518e-01,
            1.9164e-02,  1.9789e-01,  0.0000e+00],
          [-5.2671e-02, -6.3598e-02, -2.7029e-02,  6.0850e-03,  9.2840e-02,
           -1.3930e-01,  2.6387e-01,  0.0000e+00]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 6])
grad_input torch.Size([1, 1, 6, 8])
padding info :: [0, 1, 1, 0]
new grad_input torch.Size([1, 1, 5, 7])
##############grad_in in conv2d tensor([[[[ 0.2054,  0.0156, -0.0689,  0.2054,  0.2210, -0.0533, -0.0689],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.2542,  0.3800,  0.1092],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234, -0.1299, -0.2817],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,  0.0809]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 14])
grad_out size torch.Size([1, 1, 5, 7]) tensor([[[[ 0.2054,  0.0156, -0.0689,  0.2054,  0.2210, -0.0533, -0.0689],
          [-0.1299, -0.2817, -0.2234, -0.1299, -0.4116, -0.5051, -0.2234],
          [ 0.2422,  0.2863,  0.3146,  0.1888,  0.2542,  0.3800,  0.1092],
          [ 0.0000, -0.1299, -0.4116, -0.5051, -0.2234, -0.1299, -0.2817],
          [ 0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.2422,  0.0809]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 5, 7])
maxpool2d139784840008224[2,-1] PI( <0,2,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 2,15,0,9,>, 
 <internal >, 
 <realidx 2,15,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
bk-maxpool2d139784840008224[1,-1] PI( <0,2,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 3,6,0,2,>, 
 <internal >, 
 <realidx 3,6,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 10, 14]) tensor([[[[ 0.2054,  0.0000,  0.0000,  0.0156,  0.0000, -0.0689,  0.2054,
            0.0000,  0.0000,  0.0000, -0.0533,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.2210,  0.0000,  0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,
            0.0000, -0.4116,  0.0000,  0.0000, -0.5051,  0.0000, -0.2234],
          [ 0.0000, -0.1299, -0.2817,  0.0000,  0.0000,  0.0000, -0.1299,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2863,  0.0000,  0.0000,  0.0000,
            0.1888,  0.2542,  0.0000,  0.0000,  0.3800,  0.0000,  0.1092],
          [ 0.2422,  0.0000,  0.0000,  0.0000,  0.0000,  0.3146,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.1299,  0.0000,  0.0000, -0.5051,
            0.0000,  0.0000,  0.0000, -0.1299,  0.0000,  0.0000, -0.2817],
          [ 0.0000,  0.0000,  0.0000,  0.0000, -0.4116,  0.0000,  0.0000,
            0.0000,  0.0000, -0.2234,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.2422,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.2422,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.3231,  0.0000,  0.0000,
            0.1746,  0.0000,  0.0936,  0.0000,  0.0000,  0.0000,  0.0809]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 16])
input grad ++ input tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
          [0.5849, 0.5644, 0.0752, 0.0581, 0.9451, 0.4356, 0.7358, 0.6450,
           0.1825, 0.2210, 0.4242, 0.0272, 0.1741, 0.9797, 0.2962, 0.0000],
          [0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757, 0.3248, 0.5328,
           0.0976, 0.2924, 0.5549, 0.0552, 0.1835, 0.9455, 0.4595, 0.0000],
          [0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599, 0.8539, 0.4650,
           0.1804, 0.2216, 0.0170, 0.3912, 0.7597, 0.5847, 0.2733, 0.0000],
          [0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940, 0.1646, 0.9675,
           0.4206, 0.2998, 0.4080, 0.8522, 0.0996, 0.2627, 0.1972, 0.0000],
          [0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218, 0.0453, 0.3091,
           0.7183, 0.8472, 0.7443, 0.8717, 0.7518, 0.8820, 0.5423, 0.0000],
          [0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871, 0.4789, 0.3246,
           0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847, 0.1842, 0.0000],
          [0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108, 0.3217, 0.3740,
           0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386, 0.2130, 0.0000],
          [0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611, 0.4545, 0.5432,
           0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062, 0.0537, 0.0000],
          [0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174, 0.7127, 0.8116,
           0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911, 0.4032, 0.0000],
          [0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061, 0.4559, 0.9460,
           0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723, 0.7010, 0.0000],
          [0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646, 0.3198, 0.3305,
           0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810, 0.0792, 0.0000]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 14])
final torch.Size([1, 1, 12, 16])
padding info :: [0, 1, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <0,2,>,
 <otileshape 14,10,>,
 <padding 0,1,1,0,>,
 <inpslidx 1,15,0,10,>, 
 <internal 1,0,0,1,>, 
 <realidx 1,16,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <0,2,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 8,11,0,3,>, 
 <internal >, 
 <realidx 8,11,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [7, 4, 0, 7]
## 0 4 7 11
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0669, -0.0183,  0.0409, -0.0359],
          [ 0.0192, -0.1404,  0.0776,  0.1410],
          [ 0.0383, -0.0114, -0.1120, -0.0114],
          [ 0.0664,  0.0135,  0.0178,  0.0806]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0669, -0.0183,  0.0409, -0.0359],
          [ 0.0192, -0.1404,  0.0776,  0.1410],
          [ 0.0383, -0.0114, -0.1120, -0.0114],
          [ 0.0664,  0.0135,  0.0178,  0.0806]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 6])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 3])
maxpool2d139784839957760[0,-1] PI( <0,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,5,0,3,>, 
 <internal >, 
 <realidx 0,5,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <0,1,>,
 <otileshape 3,2,>,
 <padding >,
 <inpslidx 0,2,0,1,>, 
 <internal >, 
 <realidx 0,2,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 3])
##############grad_in in maxp torch.Size([1, 1, 4, 6]) tensor([[[[0., 0., 0., 0., 0., 0.],
          [0., 1., 1., 0., 0., 1.],
          [1., 0., 0., 0., 0., 0.],
          [0., 0., 0., 1., 1., 0.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 8])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00,  0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  1.3905e-01,  1.1024e-01, -9.6908e-02,  2.1459e-04,
            1.0698e-01,  4.4508e-02, -1.5019e-02],
          [ 0.0000e+00, -5.1112e-03,  4.2475e-03, -5.3886e-02, -9.3394e-02,
            3.1558e-02, -2.2256e-01, -5.3553e-02],
          [ 0.0000e+00, -8.3262e-02, -1.2125e-02,  1.6407e-01,  2.2906e-02,
           -3.4774e-02, -7.5701e-02,  9.1495e-02],
          [ 0.0000e+00,  2.6156e-01, -1.8681e-01, -9.3000e-02,  1.0214e-02,
           -1.7946e-01,  1.4518e-01,  1.9164e-02],
          [ 0.0000e+00, -4.5282e-02, -5.2671e-02, -6.3598e-02, -2.7029e-02,
            6.0850e-03,  9.2840e-02, -1.3930e-01]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 6])
grad_input torch.Size([1, 1, 6, 8])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 5, 7])
##############grad_in in conv2d tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.0156, -0.0689],
          [-0.1143, -0.4805, -0.5051, -0.2234, -0.1299, -0.2817, -0.2234],
          [-0.0395,  0.0997,  0.3800,  0.3146,  0.1888,  0.0120,  0.0936],
          [ 0.0809,  0.0936, -0.1299, -0.4116, -0.5051, -0.2234,  0.0000],
          [ 0.0000,  0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.0000]]]],
       device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 14])
grad_out size torch.Size([1, 1, 5, 7]) tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.2054,  0.0156, -0.0689],
          [-0.1143, -0.4805, -0.5051, -0.2234, -0.1299, -0.2817, -0.2234],
          [-0.0395,  0.0997,  0.3800,  0.3146,  0.1888,  0.0120,  0.0936],
          [ 0.0809,  0.0936, -0.1299, -0.4116, -0.5051, -0.2234,  0.0000],
          [ 0.0000,  0.0000,  0.2422,  0.3231,  0.1746,  0.0936,  0.0000]]]],
       device='cuda:0')
arg size torch.Size([1, 1, 5, 7])
maxpool2d139784840008224[2,-1] PI( <0,1,>,
 <otileshape 7,5,>,
 <padding >,
 <inpslidx 0,13,0,9,>, 
 <internal >, 
 <realidx 0,13,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <0,1,>,
 <otileshape 4,3,>,
 <padding >,
 <inpslidx 1,4,0,2,>, 
 <internal >, 
 <realidx 1,4,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function cMaxPool2dFunctionBackward
torch.Size([1, 1, 10, 14]) tensor([[[[ 0.2054,  0.0000,  0.2210,  0.0000,  0.0000, -0.0533,  0.0000,
           -0.0689,  0.2054,  0.0000,  0.0000,  0.0000, -0.0689,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0156,  0.0000,  0.0000],
          [ 0.0000, -0.1143,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
           -0.2234,  0.0000,  0.0000, -0.2817,  0.0000,  0.0000, -0.2234],
          [ 0.0000,  0.0000,  0.0000, -0.4805, -0.5051,  0.0000,  0.0000,
            0.0000, -0.1299,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [-0.0395,  0.0000,  0.0000,  0.0000,  0.0000,  0.3800,  0.0000,
            0.0000,  0.0000,  0.1888,  0.0120,  0.0000,  0.0000,  0.0936],
          [ 0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000,
            0.3146,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000, -0.5051,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0809,  0.0936,  0.0000,  0.0000,  0.0000, -0.4116,
            0.0000,  0.0000,  0.0000,  0.0000, -0.2234,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.2422,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.3231,
            0.0000,  0.0000,  0.1746,  0.0000,  0.0936,  0.0000,  0.0000]]]],
       device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 16])
input grad ++ input tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
          [0.0000, 0.9511, 0.5849, 0.5644, 0.0752, 0.0581, 0.9451, 0.4356,
           0.7358, 0.6450, 0.1825, 0.2210, 0.4242, 0.0272, 0.1741, 0.9797],
          [0.0000, 0.2391, 0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757,
           0.3248, 0.5328, 0.0976, 0.2924, 0.5549, 0.0552, 0.1835, 0.9455],
          [0.0000, 0.0630, 0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599,
           0.8539, 0.4650, 0.1804, 0.2216, 0.0170, 0.3912, 0.7597, 0.5847],
          [0.0000, 0.5532, 0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940,
           0.1646, 0.9675, 0.4206, 0.2998, 0.4080, 0.8522, 0.0996, 0.2627],
          [0.0000, 0.9263, 0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218,
           0.0453, 0.3091, 0.7183, 0.8472, 0.7443, 0.8717, 0.7518, 0.8820],
          [0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267, 0.6957, 0.3403, 0.3959, 0.4847],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946, 0.4633, 0.7415, 0.5113, 0.6386],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144, 0.8347, 0.7038, 0.2721, 0.6062],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044, 0.2626, 0.0968, 0.7223, 0.3911],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923, 0.8347, 0.3174, 0.7822, 0.4723],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552, 0.4943, 0.5602, 0.6305, 0.3810]]]],
       device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 14])
final torch.Size([1, 1, 12, 16])
padding info :: [1, 0, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <0,1,>,
 <otileshape 14,10,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,14,0,10,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,14,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <0,1,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 4,7,0,3,>, 
 <internal >, 
 <realidx 4,7,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [4, 7, 0, 7]
## 0 4 4 8
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[-0.0047, -0.0158, -0.0013, -0.0025],
          [-0.0024,  0.0116, -0.0278,  0.0558],
          [ 0.1625,  0.0956, -0.0195, -0.0902],
          [-0.0364, -0.0088, -0.0819,  0.0373]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[-0.0047, -0.0158, -0.0013, -0.0025],
          [-0.0024,  0.0116, -0.0278,  0.0558],
          [ 0.1625,  0.0956, -0.0195, -0.0902],
          [-0.0364, -0.0088, -0.0819,  0.0373]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 4, 4])
grad_out size torch.Size([1, 1, 4, 4]) tensor([[[[1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.],
          [1., 1., 1., 1.]]]], device='cuda:0')
arg size torch.Size([1, 1, 2, 2])
maxpool2d139784839957760[0,-1] PI( <0,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,3,0,3,>, 
 <internal >, 
 <realidx 0,3,0,3,>, 
 <ndtsize 1,1,>, 
  local_first False
 next_id -99)

bk-maxpool2d139784839957760[3,-1] PI( <0,0,>,
 <otileshape 2,2,>,
 <padding >,
 <inpslidx 0,1,0,1,>, 
 <internal >, 
 <realidx 0,1,0,1,>, 
 <ndtsize >, 
  local_first False
 next_id 139783032421920)

new_grad_out torch.Size([1, 1, 2, 2])
##############grad_in in maxp torch.Size([1, 1, 4, 4]) tensor([[[[0., 0., 0., 0.],
          [0., 1., 1., 0.],
          [1., 0., 0., 0.],
          [0., 0., 0., 1.]]]], device='cuda:0')
@@@ using cudnn bkw
local last ++ input shape torch.Size([1, 1, 6, 6])
local last ++ input tensor([[[[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
            0.0000e+00],
          [ 0.0000e+00,  1.3905e-01,  1.1024e-01, -9.6908e-02,  2.1459e-04,
            1.0698e-01],
          [ 0.0000e+00, -5.1112e-03,  4.2475e-03, -5.3886e-02, -9.3394e-02,
            3.1558e-02],
          [ 0.0000e+00, -8.3262e-02, -1.2125e-02,  1.6407e-01,  2.2906e-02,
           -3.4774e-02],
          [ 0.0000e+00,  2.6156e-01, -1.8681e-01, -9.3000e-02,  1.0214e-02,
           -1.7946e-01],
          [ 0.0000e+00, -4.5282e-02, -5.2671e-02, -6.3598e-02, -2.7029e-02,
            6.0850e-03]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 4, 4])
grad_input torch.Size([1, 1, 6, 6])
padding info :: [1, 0, 1, 0]
new grad_input torch.Size([1, 1, 5, 5])
##############grad_in in conv2d tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.0000],
          [-0.1143, -0.4805, -0.5051, -0.2234,  0.0000],
          [-0.0395,  0.0997,  0.3800,  0.1092, -0.0689],
          [ 0.0809,  0.0936, -0.1299, -0.2817, -0.2234],
          [ 0.0000,  0.0000,  0.2422,  0.0809,  0.0936]]]], device='cuda:0')

^^^^^cMaxPool2dFunction bwd
input size torch.Size([1, 1, 10, 10])
grad_out size torch.Size([1, 1, 5, 5]) tensor([[[[ 0.2054,  0.2210, -0.0533, -0.0689,  0.0000],
          [-0.1143, -0.4805, -0.5051, -0.2234,  0.0000],
          [-0.0395,  0.0997,  0.3800,  0.1092, -0.0689],
          [ 0.0809,  0.0936, -0.1299, -0.2817, -0.2234],
          [ 0.0000,  0.0000,  0.2422,  0.0809,  0.0936]]]], device='cuda:0')
arg size torch.Size([1, 1, 5, 5])
maxpool2d139784840008224[2,-1] PI( <0,0,>,
 <otileshape 5,5,>,
 <padding >,
 <inpslidx 0,9,0,9,>, 
 <internal >, 
 <realidx 0,9,0,9,>, 
 <ndtsize 2,2,>, 
  local_first False
 next_id 139783032421920)

bk-maxpool2d139784840008224[1,-1] PI( <0,0,>,
 <otileshape 3,3,>,
 <padding >,
 <inpslidx 0,2,0,2,>, 
 <internal >, 
 <realidx 0,2,0,2,>, 
 <ndtsize >, 
  local_first False
 next_id 139784840008080)

##############grad_in in maxp torch.Size([1, 1, 10, 10]) [torch/csrc/autograd/engine.cpp] call_function TiledConv2dFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
[torch/csrc/autograd/engine.cpp] call_function TiledSplitFunctionBackward
[torch/csrc/autograd/engine.cpp] call_function torch::autograd::AccumulateGrad
tensor([[[[ 0.2054,  0.0000,  0.2210,  0.0000,  0.0000, -0.0533,  0.0000,
           -0.0689,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000, -0.1143,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
           -0.2234,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000, -0.4805, -0.5051,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000],
          [-0.0395,  0.0000,  0.0000,  0.0000,  0.0000,  0.3800,  0.0000,
            0.0000,  0.0000, -0.0689],
          [ 0.0000,  0.0000,  0.0997,  0.0000,  0.0000,  0.0000,  0.0000,
            0.1092,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000, -0.1299,  0.0000,
            0.0000, -0.2234,  0.0000],
          [ 0.0000,  0.0809,  0.0936,  0.0000,  0.0000,  0.0000, -0.2817,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.2422,  0.0000,
            0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0809,
            0.0000,  0.0000,  0.0936]]]], device='cuda:0')
@@@ using cudnn bkw
input grad ++ input shape torch.Size([1, 1, 12, 12])
input grad ++ input tensor([[[[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
           0.0000, 0.0000, 0.0000, 0.0000],
          [0.0000, 0.9511, 0.5849, 0.5644, 0.0752, 0.0581, 0.9451, 0.4356,
           0.7358, 0.6450, 0.1825, 0.2210],
          [0.0000, 0.2391, 0.1226, 0.1768, 0.2182, 0.0139, 0.3206, 0.8757,
           0.3248, 0.5328, 0.0976, 0.2924],
          [0.0000, 0.0630, 0.6859, 0.9701, 0.3824, 0.1769, 0.1115, 0.0599,
           0.8539, 0.4650, 0.1804, 0.2216],
          [0.0000, 0.5532, 0.2493, 0.2914, 0.9878, 0.7554, 0.2960, 0.2940,
           0.1646, 0.9675, 0.4206, 0.2998],
          [0.0000, 0.9263, 0.8304, 0.5190, 0.7581, 0.6284, 0.8289, 0.5218,
           0.0453, 0.3091, 0.7183, 0.8472],
          [0.0000, 0.2105, 0.3587, 0.9971, 0.6627, 0.6019, 0.0301, 0.4871,
           0.4789, 0.3246, 0.6563, 0.4267],
          [0.0000, 0.6194, 0.2483, 0.2144, 0.5780, 0.5842, 0.8887, 0.5108,
           0.3217, 0.3740, 0.4704, 0.7946],
          [0.0000, 0.5978, 0.9794, 0.4758, 0.6037, 0.7762, 0.7961, 0.7611,
           0.4545, 0.5432, 0.3099, 0.8144],
          [0.0000, 0.4811, 0.1930, 0.1810, 0.7511, 0.1331, 0.8566, 0.4174,
           0.7127, 0.8116, 0.8788, 0.8044],
          [0.0000, 0.6124, 0.0330, 0.0974, 0.1155, 0.3917, 0.4610, 0.3061,
           0.4559, 0.9460, 0.8958, 0.4923],
          [0.0000, 0.0619, 0.4830, 0.2649, 0.0269, 0.6754, 0.7207, 0.0646,
           0.3198, 0.3305, 0.2015, 0.4552]]]], device='cuda:0')
weight shape torch.Size([1, 1, 3, 3])
grad_output shape torch.Size([1, 1, 10, 10])
final torch.Size([1, 1, 12, 12])
padding info :: [1, 0, 1, 0]
f_info :: conv2d139784840008080[3,0] PI( <0,0,>,
 <otileshape 10,10,>,
 <padding 1,0,1,0,>,
 <inpslidx 0,10,0,10,>, 
 <internal 0,1,0,1,>, 
 <realidx -1,10,-1,10,>, 
 <ndtsize 4,4,>, 
  local_first True
 next_id 139784840008224)
 fake-bp[-11,-11] PI( <0,0,>,
 <otileshape 4,4,>,
 <padding >,
 <inpslidx 0,3,0,3,>, 
 <internal >, 
 <realidx 0,3,0,3,>, 
 <ndtsize >, 
  local_first False
 next_id -11)

crop [0, 7, 0, 7]
## 0 4 0 4
after crop g_in torch.Size([1, 1, 4, 4])
##############grad_in in conv2d tensor([[[[ 0.0608,  0.0010,  0.0654, -0.0197],
          [-0.0659, -0.0382, -0.0264, -0.0691],
          [-0.0100, -0.0338, -0.0788, -0.0255],
          [ 0.0005,  0.0324, -0.0062, -0.1864]]]], device='cuda:0')
TiledSplitFunction bwd tensor([[[[ 0.0608,  0.0010,  0.0654, -0.0197],
          [-0.0659, -0.0382, -0.0264, -0.0691],
          [-0.0100, -0.0338, -0.0788, -0.0255],
          [ 0.0005,  0.0324, -0.0062, -0.1864]]]], device='cuda:0')
TiledSplitFunction.big_grad_in tensor([[[[ 0.0608,  0.0010,  0.0654, -0.0197,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [-0.0659, -0.0382, -0.0264, -0.0691,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [-0.0100, -0.0338, -0.0788, -0.0255,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0005,  0.0324, -0.0062, -0.1864,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
            0.0000,  0.0000]]]])
input ref grad tensor([[[[ 0.0608,  0.0010,  0.0654, -0.0197, -0.0047, -0.0158, -0.0013,
           -0.0025,  0.0669, -0.0183,  0.0409, -0.0359, -0.0576,  0.0048,
           -0.0128,  0.0098],
          [-0.0659, -0.0382, -0.0264, -0.0691, -0.0024,  0.0116, -0.0278,
            0.0558,  0.0192, -0.1404,  0.0776,  0.1410, -0.1016,  0.0882,
            0.0483,  0.0112],
          [-0.0100, -0.0338, -0.0788, -0.0255,  0.1625,  0.0956, -0.0195,
           -0.0902,  0.0383, -0.0114, -0.1120, -0.0114, -0.1132, -0.1495,
            0.0224, -0.0511],
          [ 0.0005,  0.0324, -0.0062, -0.1864, -0.0364, -0.0088, -0.0819,
            0.0373,  0.0664,  0.0135,  0.0178,  0.0806,  0.0478,  0.0561,
            0.0962,  0.0332],
          [-0.0117,  0.0220, -0.0356,  0.0631,  0.2934,  0.2704,  0.0244,
           -0.0503, -0.0148,  0.1187,  0.0584, -0.0226,  0.0332,  0.1125,
           -0.0243,  0.0323],
          [ 0.0086,  0.0211,  0.0295, -0.0089,  0.0182, -0.0836, -0.0926,
           -0.0131,  0.0616,  0.0789, -0.1144, -0.1035,  0.0354, -0.0581,
           -0.1661,  0.0161],
          [ 0.0530, -0.0158, -0.0914, -0.0519,  0.0006, -0.0714,  0.0695,
           -0.0436, -0.2683,  0.0511, -0.0414,  0.0203,  0.0038,  0.0116,
           -0.0246, -0.0834],
          [ 0.0010,  0.0605,  0.0713,  0.0436, -0.0203, -0.0203, -0.0982,
            0.0096,  0.1249,  0.1795, -0.0195, -0.0719,  0.0831,  0.0139,
           -0.0483,  0.0613],
          [ 0.0014, -0.1205, -0.1851, -0.0091, -0.0097, -0.0429,  0.0902,
            0.1160,  0.0290, -0.0222,  0.0186,  0.0041,  0.0268,  0.0559,
           -0.0146, -0.0017],
          [ 0.0419, -0.0208,  0.0531,  0.0881, -0.0050,  0.0278,  0.0470,
           -0.0037,  0.0137,  0.0463,  0.0135,  0.0376,  0.0228,  0.0157,
           -0.0580,  0.0036],
          [ 0.0225,  0.0763, -0.0207, -0.0017,  0.0979, -0.0188, -0.1542,
           -0.0701, -0.0096, -0.1103,  0.0501, -0.0037, -0.1871,  0.0267,
           -0.0379,  0.0268],
          [ 0.0514, -0.0028, -0.1209,  0.0352,  0.0885,  0.1866, -0.0351,
            0.0314,  0.0214, -0.0313, -0.0845,  0.0377,  0.0589,  0.0853,
           -0.0181, -0.0615],
          [-0.0834,  0.0251, -0.0190, -0.0687,  0.0163, -0.0859, -0.2463,
           -0.2162,  0.0097, -0.0613,  0.1419,  0.1353,  0.0132, -0.0040,
           -0.0441,  0.0718],
          [ 0.0613,  0.0881, -0.0100,  0.0486,  0.0585, -0.0385, -0.0068,
            0.0896,  0.1493,  0.0412,  0.0787, -0.0069, -0.0097, -0.0140,
           -0.0164, -0.0557],
          [ 0.0150, -0.0115,  0.0020,  0.0316, -0.0578, -0.0176,  0.1004,
           -0.0457, -0.0459,  0.0561, -0.0199,  0.0004, -0.0520, -0.0459,
            0.0066,  0.0295],
          [ 0.0071,  0.0240,  0.0010,  0.0489,  0.0633, -0.0216,  0.0282,
            0.0956, -0.0210, -0.0380, -0.0464,  0.0489,  0.0633, -0.0216,
            0.0071,  0.0240]]]], device='cuda:0')
input grad tensor([[[[ 0.0608,  0.0010,  0.0654, -0.0197, -0.0047, -0.0158, -0.0013,
           -0.0025,  0.0669, -0.0183,  0.0409, -0.0359, -0.0576,  0.0048,
           -0.0128,  0.0098],
          [-0.0659, -0.0382, -0.0264, -0.0691, -0.0024,  0.0116, -0.0278,
            0.0558,  0.0192, -0.1404,  0.0776,  0.1410, -0.1016,  0.0882,
            0.0483,  0.0112],
          [-0.0100, -0.0338, -0.0788, -0.0255,  0.1625,  0.0956, -0.0195,
           -0.0902,  0.0383, -0.0114, -0.1120, -0.0114, -0.1132, -0.1495,
            0.0224, -0.0511],
          [ 0.0005,  0.0324, -0.0062, -0.1864, -0.0364, -0.0088, -0.0819,
            0.0373,  0.0664,  0.0135,  0.0178,  0.0806,  0.0478,  0.0561,
            0.0962,  0.0332],
          [-0.0117,  0.0220, -0.0356,  0.0631,  0.2934,  0.2704,  0.0244,
           -0.0503, -0.0148,  0.1187,  0.0584, -0.0226,  0.0332,  0.1125,
           -0.0243,  0.0323],
          [ 0.0086,  0.0211,  0.0295, -0.0089,  0.0182, -0.0836, -0.0926,
           -0.0131,  0.0616,  0.0789, -0.1144, -0.1035,  0.0354, -0.0581,
           -0.1661,  0.0161],
          [ 0.0530, -0.0158, -0.0914, -0.0519,  0.0006, -0.0714,  0.0695,
           -0.0436, -0.2683,  0.0511, -0.0414,  0.0203,  0.0038,  0.0116,
           -0.0246, -0.0834],
          [ 0.0010,  0.0605,  0.0713,  0.0436, -0.0203, -0.0203, -0.0982,
            0.0096,  0.1249,  0.1795, -0.0195, -0.0719,  0.0831,  0.0139,
           -0.0483,  0.0613],
          [ 0.0014, -0.1205, -0.1851, -0.0091, -0.0097, -0.0429,  0.0902,
            0.1160,  0.0290, -0.0222,  0.0186,  0.0041,  0.0268,  0.0559,
           -0.0146, -0.0017],
          [ 0.0419, -0.0208,  0.0531,  0.0881, -0.0050,  0.0278,  0.0470,
           -0.0037,  0.0137,  0.0463,  0.0135,  0.0376,  0.0228,  0.0157,
           -0.0580,  0.0036],
          [ 0.0225,  0.0763, -0.0207, -0.0017,  0.0979, -0.0188, -0.1542,
           -0.0701, -0.0096, -0.1103,  0.0501, -0.0037, -0.1871,  0.0267,
           -0.0379,  0.0268],
          [ 0.0514, -0.0028, -0.1209,  0.0352,  0.0885,  0.1866, -0.0351,
            0.0314,  0.0214, -0.0313, -0.0845,  0.0377,  0.0589,  0.0853,
           -0.0181, -0.0615],
          [-0.0834,  0.0251, -0.0190, -0.0687,  0.0163, -0.0859, -0.2463,
           -0.2162,  0.0097, -0.0613,  0.1419,  0.1353,  0.0132, -0.0040,
           -0.0441,  0.0718],
          [ 0.0613,  0.0881, -0.0100,  0.0486,  0.0585, -0.0385, -0.0068,
            0.0896,  0.1493,  0.0412,  0.0787, -0.0069, -0.0097, -0.0140,
           -0.0164, -0.0557],
          [ 0.0150, -0.0115,  0.0020,  0.0316, -0.0578, -0.0176,  0.1004,
           -0.0457, -0.0459,  0.0561, -0.0199,  0.0004, -0.0520, -0.0459,
            0.0066,  0.0295],
          [ 0.0071,  0.0240,  0.0010,  0.0489,  0.0633, -0.0216,  0.0282,
            0.0956, -0.0210, -0.0380, -0.0464,  0.0489,  0.0633, -0.0216,
            0.0071,  0.0240]]]])
 precentile 0 / 256 = 0.0
